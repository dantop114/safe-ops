{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "Error",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "srcToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "dstToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAggregationExecutor",
          "name": "caller",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "srcToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "dstToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "srcReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dstReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minReturnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flags",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "permit",
              "type": "bytes"
            }
          ],
          "internalType": "struct AggregationRouterV3.SwapDescription",
          "name": "desc",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "discountedSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLeft",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "chiSpent",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAggregationExecutor",
          "name": "caller",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "srcToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "dstToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "srcReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dstReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minReturnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flags",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "permit",
              "type": "bytes"
            }
          ],
          "internalType": "struct AggregationRouterV3.SwapDescription",
          "name": "desc",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLeft",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "srcToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minReturn",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "name": "unoswap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "srcToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minReturn",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "pools",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "permit",
          "type": "bytes"
        }
      ],
      "name": "unoswapWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/AggregationRouterV3.sol"
  },
  "ast": {
    "absolutePath": "contracts/AggregationRouterV3.sol",
    "exportedSymbols": {
      "Address": [
        856
      ],
      "AggregationRouterV3": [
        2278
      ],
      "Context": [
        22
      ],
      "IAggregationExecutor": [
        1331
      ],
      "IChi": [
        1307
      ],
      "IERC20": [
        207
      ],
      "IERC20Permit": [
        1588
      ],
      "IGasDiscountExtension": [
        1322
      ],
      "Ownable": [
        130
      ],
      "Permitable": [
        1664
      ],
      "RevertReasonParser": [
        1569
      ],
      "SafeERC20": [
        1065
      ],
      "SafeMath": [
        561
      ],
      "UniERC20": [
        1282
      ],
      "UnoswapRouter": [
        1766
      ]
    },
    "id": 2279,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "10387:31:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [
          22
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9,
              "nodeType": "Block",
              "src": "11022:34:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 6,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "11039:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "11039:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 5,
                  "id": 8,
                  "nodeType": "Return",
                  "src": "11032:17:0"
                }
              ]
            },
            "id": 10,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10971:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "11005:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11005:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11004:17:0"
            },
            "scope": 22,
            "src": "10952:104:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "11127:165:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "11137:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$22",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "11137:4:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 17,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "11277:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "11277:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 14,
                  "id": 19,
                  "nodeType": "Return",
                  "src": "11270:15:0"
                }
              ]
            },
            "id": 21,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11079:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "11113:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11113:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11112:14:0"
            },
            "scope": 22,
            "src": "11062:230:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2279,
        "src": "10920:374:0"
      },
      {
        "id": 23,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "11358:31:0"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 25,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "11915:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$22",
                "typeString": "contract Context"
              }
            },
            "id": 26,
            "nodeType": "InheritanceSpecifier",
            "src": "11915:7:0"
          }
        ],
        "contractDependencies": [
          22
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 24,
          "nodeType": "StructuredDocumentation",
          "src": "11391:494:0",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 130,
        "linearizedBaseContracts": [
          130,
          22
        ],
        "name": "Ownable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 130,
            "src": "11929:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "11929:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 34,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "11985:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11985:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "12016:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12016:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11984:57:0"
            },
            "src": "11958:84:0"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "12168:135:0",
              "statements": [
                {
                  "assignments": [
                    39
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "msgSender",
                      "nodeType": "VariableDeclaration",
                      "scope": 55,
                      "src": "12178:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12178:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "12198:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12198:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12178:32:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "12220:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44,
                      "name": "msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "12229:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12220:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "12220:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12282:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12274:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12274:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12274:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 52,
                        "name": "msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "12286:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "12253:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12253:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "EmitStatement",
                  "src": "12248:48:0"
                }
              ]
            },
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "12048:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12156:2:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12168:0:0"
            },
            "scope": 130,
            "src": "12144:159:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "12434:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 62,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "12451:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 61,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "12444:13:0"
                }
              ]
            },
            "documentation": {
              "id": 57,
              "nodeType": "StructuredDocumentation",
              "src": "12309:65:0",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12393:2:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "12425:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12425:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12424:9:0"
            },
            "scope": 130,
            "src": "12379:85:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "12573:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 69,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "12591:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12591:7:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 71,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "12602:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12602:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "12591:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12616:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12583:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12583:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "12583:68:0"
                },
                {
                  "id": 77,
                  "nodeType": "PlaceholderStatement",
                  "src": "12661:1:0"
                }
              ]
            },
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "12470:77:0",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 79,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12570:2:0"
            },
            "src": "12552:117:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "13065:91:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "13101:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13117:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13109:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13109:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13109:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 85,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "13080:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13080:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "EmitStatement",
                  "src": "13075:45:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 93,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "13130:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13147:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13139:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13139:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13139:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "13130:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "13130:19:0"
                }
              ]
            },
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "12675:331:0",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 83,
                "modifierName": {
                  "id": 82,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 79,
                  "src": "13055:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13055:9:0"
              }
            ],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13037:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13065:0:0"
            },
            "scope": 130,
            "src": "13011:145:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "13375:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 110,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "13393:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13413:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13405:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 111,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13405:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13405:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "13393:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13417:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13385:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "13385:73:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "13494:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 121,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "13502:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 119,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "13473:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13473:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "EmitStatement",
                  "src": "13468:43:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "13521:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "13530:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13521:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "13521:17:0"
                }
              ]
            },
            "documentation": {
              "id": 102,
              "nodeType": "StructuredDocumentation",
              "src": "13162:138:0",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 107,
                "modifierName": {
                  "id": 106,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 79,
                  "src": "13365:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13365:9:0"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "13332:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13332:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13331:18:0"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13375:0:0"
            },
            "scope": 130,
            "src": "13305:240:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2279,
        "src": "11886:1661:0"
      },
      {
        "id": 131,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "13615:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 132,
          "nodeType": "StructuredDocumentation",
          "src": "13648:70:0",
          "text": " @dev Interface of the ERC20 standard as defined in the EIP."
        },
        "fullyImplemented": false,
        "id": 207,
        "linearizedBaseContracts": [
          207
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 133,
              "nodeType": "StructuredDocumentation",
              "src": "13742:66:0",
              "text": " @dev Returns the amount of tokens in existence."
            },
            "functionSelector": "18160ddd",
            "id": 138,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13833:2:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "13859:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13859:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13858:9:0"
            },
            "scope": 207,
            "src": "13813:55:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
              "src": "13874:72:0",
              "text": " @dev Returns the amount of tokens owned by `account`."
            },
            "functionSelector": "70a08231",
            "id": 146,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "13970:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13970:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13969:17:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "14010:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14010:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14009:9:0"
            },
            "scope": 207,
            "src": "13951:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "14025:209:0",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "a9059cbb",
            "id": 156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "14257:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14257:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "14276:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14276:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14256:35:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "14310:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14310:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14309:6:0"
            },
            "scope": 207,
            "src": "14239:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "14322:264:0",
              "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
            },
            "functionSelector": "dd62ed3e",
            "id": 166,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "14610:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14610:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "14625:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14625:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14609:32:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "14665:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14665:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14664:9:0"
            },
            "scope": 207,
            "src": "14591:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "14680:642:0",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 176,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "15344:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15344:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "15361:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15361:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15343:33:0"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "15395:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15395:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15394:6:0"
            },
            "scope": 207,
            "src": "15327:74:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "15407:296:0",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 188,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "15730:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15730:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "15746:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15746:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "15765:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15729:51:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "15799:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15799:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15798:6:0"
            },
            "scope": 207,
            "src": "15708:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "15811:158:0",
              "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
            },
            "id": 197,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "15989:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15989:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "16011:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16011:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "16031:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16031:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15988:57:0"
            },
            "src": "15974:72:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 198,
              "nodeType": "StructuredDocumentation",
              "src": "16052:148:0",
              "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
            },
            "id": 206,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "16220:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16220:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "16243:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16243:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "16268:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16268:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16219:63:0"
            },
            "src": "16205:78:0"
          }
        ],
        "scope": 2279,
        "src": "13719:2566:0"
      },
      {
        "id": 208,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "16348:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 209,
          "nodeType": "StructuredDocumentation",
          "src": "16381:563:0",
          "text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
        },
        "fullyImplemented": true,
        "id": 561,
        "linearizedBaseContracts": [
          561
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "17180:98:0",
              "statements": [
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "17190:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17190:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 223,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "17202:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 224,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "17206:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17202:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17190:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "17221:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 228,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "17225:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17221:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 234,
                  "nodeType": "IfStatement",
                  "src": "17217:28:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17236:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17243:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 232,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17235:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 220,
                    "id": 233,
                    "nodeType": "Return",
                    "src": "17228:17:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17263:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 236,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "17269:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 237,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17262:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "17255:16:0"
                }
              ]
            },
            "documentation": {
              "id": 210,
              "nodeType": "StructuredDocumentation",
              "src": "16968:131:0",
              "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
            },
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "17120:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17120:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "17131:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17131:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17119:22:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "17165:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17165:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "17171:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17171:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17164:15:0"
            },
            "scope": 561,
            "src": "17104:174:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "17500:75:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 252,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "17514:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 253,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "17518:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17514:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "17510:28:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17529:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17536:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 257,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17528:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 251,
                    "id": 258,
                    "nodeType": "Return",
                    "src": "17521:17:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17556:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 261,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "17562:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 262,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "17566:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17562:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 264,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17555:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 251,
                  "id": 265,
                  "nodeType": "Return",
                  "src": "17548:20:0"
                }
              ]
            },
            "documentation": {
              "id": 241,
              "nodeType": "StructuredDocumentation",
              "src": "17284:135:0",
              "text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
            },
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trySub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "17440:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17440:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "17451:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17439:22:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "17485:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17485:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "17491:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17491:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17484:15:0"
            },
            "scope": 561,
            "src": "17424:151:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "17799:359:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 279,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "18031:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18036:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18031:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 286,
                  "nodeType": "IfStatement",
                  "src": "18027:28:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "74727565",
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18047:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "30",
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18053:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 284,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18046:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 278,
                    "id": 285,
                    "nodeType": "Return",
                    "src": "18039:16:0"
                  }
                },
                {
                  "assignments": [
                    288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 288,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "18065:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18065:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 292,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 289,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "18077:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 290,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "18081:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18077:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18065:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 293,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "18096:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 294,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "18100:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18096:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 296,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "18105:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18096:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 302,
                  "nodeType": "IfStatement",
                  "src": "18092:33:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18116:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18123:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 300,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18115:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 278,
                    "id": 301,
                    "nodeType": "Return",
                    "src": "18108:17:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18143:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 304,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "18149:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 305,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18142:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 278,
                  "id": 306,
                  "nodeType": "Return",
                  "src": "18135:16:0"
                }
              ]
            },
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "17581:137:0",
              "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
            },
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "17739:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17739:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "17750:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17750:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17738:22:0"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "17784:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17784:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "17790:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17790:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17783:15:0"
            },
            "scope": 561,
            "src": "17723:435:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "18383:76:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 320,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "18397:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18402:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "IfStatement",
                  "src": "18393:29:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18413:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18420:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 325,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18412:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 319,
                    "id": 326,
                    "nodeType": "Return",
                    "src": "18405:17:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18440:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 329,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "18446:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 330,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "18450:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18446:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 332,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18439:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 319,
                  "id": 333,
                  "nodeType": "Return",
                  "src": "18432:20:0"
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "18164:138:0",
              "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
            },
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryDiv",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "18323:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18323:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "18334:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18334:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18322:22:0"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "18368:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18368:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "18374:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18367:15:0"
            },
            "scope": 561,
            "src": "18307:152:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "18694:76:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 347,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "18708:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18713:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18708:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 354,
                  "nodeType": "IfStatement",
                  "src": "18704:29:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18724:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18731:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 352,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18723:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 346,
                    "id": 353,
                    "nodeType": "Return",
                    "src": "18716:17:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18751:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 356,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "18757:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "id": 357,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "18761:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18757:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 359,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18750:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 346,
                  "id": 360,
                  "nodeType": "Return",
                  "src": "18743:20:0"
                }
              ]
            },
            "documentation": {
              "id": 336,
              "nodeType": "StructuredDocumentation",
              "src": "18465:148:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
            },
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "18634:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18634:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "18645:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18645:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18633:22:0"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "18679:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18679:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "18685:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18685:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18678:15:0"
            },
            "scope": 561,
            "src": "18618:152:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "19072:108:0",
              "statements": [
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 387,
                      "src": "19082:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 372,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19082:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 374,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "19094:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 375,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "19098:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19094:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19082:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 379,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "19117:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 380,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "19122:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19117:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19125:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        },
                        "value": "SafeMath: addition overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19109:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19109:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "19109:46:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 373,
                    "src": "19172:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 371,
                  "id": 386,
                  "nodeType": "Return",
                  "src": "19165:8:0"
                }
              ]
            },
            "documentation": {
              "id": 363,
              "nodeType": "StructuredDocumentation",
              "src": "18776:224:0",
              "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
            },
            "id": 388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "19018:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19018:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "19029:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19029:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19017:22:0"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "19063:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19063:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19062:9:0"
            },
            "scope": 561,
            "src": "19005:175:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "19518:88:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 399,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "19536:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 400,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 391,
                          "src": "19541:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19536:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19544:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        },
                        "value": "SafeMath: subtraction overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19528:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19528:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "19528:49:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 405,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "19594:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 406,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "19598:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19594:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 397,
                  "id": 408,
                  "nodeType": "Return",
                  "src": "19587:12:0"
                }
              ]
            },
            "documentation": {
              "id": 389,
              "nodeType": "StructuredDocumentation",
              "src": "19186:260:0",
              "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
            },
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "19464:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "19475:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19475:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19463:22:0"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "19509:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19509:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19508:9:0"
            },
            "scope": 561,
            "src": "19451:155:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "19920:148:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 420,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "19934:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19939:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19934:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "19930:20:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19949:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 419,
                    "id": 424,
                    "nodeType": "Return",
                    "src": "19942:8:0"
                  }
                },
                {
                  "assignments": [
                    427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 427,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "19960:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19960:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 431,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 428,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "19972:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 429,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "19976:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19972:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19960:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 433,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "19995:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 434,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "19999:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19995:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 436,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "20004:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19995:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20007:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        },
                        "value": "SafeMath: multiplication overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19987:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19987:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "19987:56:0"
                },
                {
                  "expression": {
                    "id": 441,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 427,
                    "src": "20060:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 419,
                  "id": 442,
                  "nodeType": "Return",
                  "src": "20053:8:0"
                }
              ]
            },
            "documentation": {
              "id": 411,
              "nodeType": "StructuredDocumentation",
              "src": "19612:236:0",
              "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
            },
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "19866:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "19877:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19877:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19865:22:0"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "19911:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19911:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19910:9:0"
            },
            "scope": 561,
            "src": "19853:215:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "20599:83:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 455,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 449,
                          "src": "20617:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20621:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20617:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20624:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        },
                        "value": "SafeMath: division by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20609:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20609:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "20609:44:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 461,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "20670:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 462,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "20674:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20670:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 453,
                  "id": 464,
                  "nodeType": "Return",
                  "src": "20663:12:0"
                }
              ]
            },
            "documentation": {
              "id": 445,
              "nodeType": "StructuredDocumentation",
              "src": "20074:453:0",
              "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "20545:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20545:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "20556:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20556:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20544:22:0"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "20590:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20590:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20589:9:0"
            },
            "scope": 561,
            "src": "20532:150:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "21202:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 477,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 471,
                          "src": "21220:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21224:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21220:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21227:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        },
                        "value": "SafeMath: modulo by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        }
                      ],
                      "id": 476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21212:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21212:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "21212:42:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 483,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "21271:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 484,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "21275:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21271:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 475,
                  "id": 486,
                  "nodeType": "Return",
                  "src": "21264:12:0"
                }
              ]
            },
            "documentation": {
              "id": 467,
              "nodeType": "StructuredDocumentation",
              "src": "20688:442:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "21148:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21148:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "21159:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21159:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21147:22:0"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "21193:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21193:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21192:9:0"
            },
            "scope": 561,
            "src": "21135:148:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "21842:68:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 501,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "21860:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 502,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "21865:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21860:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 504,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "21868:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21852:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21852:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "21852:29:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 507,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "21898:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 508,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "21902:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21898:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 499,
                  "id": 510,
                  "nodeType": "Return",
                  "src": "21891:12:0"
                }
              ]
            },
            "documentation": {
              "id": 489,
              "nodeType": "StructuredDocumentation",
              "src": "21289:453:0",
              "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
            },
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "21760:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21760:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "21771:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21771:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "21782:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21782:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21759:50:0"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "21833:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21832:9:0"
            },
            "scope": 561,
            "src": "21747:163:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 535,
              "nodeType": "Block",
              "src": "22662:67:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 525,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "22680:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22684:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "22680:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 528,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "22687:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 524,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22672:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22672:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "22672:28:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 531,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "22717:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 532,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "22721:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22717:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 523,
                  "id": 534,
                  "nodeType": "Return",
                  "src": "22710:12:0"
                }
              ]
            },
            "documentation": {
              "id": 513,
              "nodeType": "StructuredDocumentation",
              "src": "21916:646:0",
              "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "22580:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22580:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "22591:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22591:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "22602:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "22602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22579:50:0"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "22653:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22653:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22652:9:0"
            },
            "scope": 561,
            "src": "22567:162:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "23470:67:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 549,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "23488:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23492:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23488:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 552,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "23495:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23480:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23480:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "23480:28:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 555,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "23525:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 556,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "23529:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23525:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 547,
                  "id": 558,
                  "nodeType": "Return",
                  "src": "23518:12:0"
                }
              ]
            },
            "documentation": {
              "id": 537,
              "nodeType": "StructuredDocumentation",
              "src": "22735:635:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "23388:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23388:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "23399:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23399:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "23410:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23410:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23387:50:0"
            },
            "returnParameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "23461:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23461:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23460:9:0"
            },
            "scope": 561,
            "src": "23375:162:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2279,
        "src": "16945:6594:0"
      },
      {
        "id": 562,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".2",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "23602:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 563,
          "nodeType": "StructuredDocumentation",
          "src": "23635:67:0",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 856,
        "linearizedBaseContracts": [
          856
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "24361:347:0",
              "statements": [
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 579,
                      "src": "24558:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24558:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 573,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24558:12:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "24645:32:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "24647:28:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "24667:7:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "24655:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24655:20:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "24647:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 566,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "24667:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 572,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "24647:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 574,
                  "nodeType": "InlineAssembly",
                  "src": "24636:41:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 575,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "24693:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24700:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24693:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 570,
                  "id": 578,
                  "nodeType": "Return",
                  "src": "24686:15:0"
                }
              ]
            },
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "23725:565:0",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "24315:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24314:17:0"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "24355:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24354:6:0"
            },
            "scope": 856,
            "src": "24295:413:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "25696:320:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 591,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "25722:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$856",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$856",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25714:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 589,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25714:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25714:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "25714:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 594,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "25739:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25714:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25747:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        },
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25706:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "25706:73:0"
                },
                {
                  "assignments": [
                    600,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 613,
                      "src": "25868:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "25868:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 607,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25918:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 601,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "25886:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "25886:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 603,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "25909:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "25886:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25886:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25867:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 609,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "25939:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25948:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        },
                        "value": "Address: unable to send value, recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        }
                      ],
                      "id": 608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25931:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25931:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "25931:78:0"
                }
              ]
            },
            "documentation": {
              "id": 581,
              "nodeType": "StructuredDocumentation",
              "src": "24714:906:0",
              "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
            },
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "25644:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25644:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "25671:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25643:43:0"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25696:0:0"
            },
            "scope": 856,
            "src": "25625:391:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "26846:82:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 625,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "26874:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 626,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "26882:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26888:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        },
                        "value": "Address: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        }
                      ],
                      "id": 624,
                      "name": "functionCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        631,
                        651
                      ],
                      "referencedDeclaration": 651,
                      "src": "26861:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26861:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 623,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "26854:67:0"
                }
              ]
            },
            "documentation": {
              "id": 615,
              "nodeType": "StructuredDocumentation",
              "src": "26022:730:0",
              "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
            },
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "26779:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26779:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "26795:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26795:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26778:35:0"
            },
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "26832:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26832:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26831:14:0"
            },
            "scope": 856,
            "src": "26757:171:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "27267:76:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 644,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "27306:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 645,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "27314:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27320:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 647,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "27323:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 643,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        671,
                        721
                      ],
                      "referencedDeclaration": 721,
                      "src": "27284:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27284:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 642,
                  "id": 649,
                  "nodeType": "Return",
                  "src": "27277:59:0"
                }
              ]
            },
            "documentation": {
              "id": 632,
              "nodeType": "StructuredDocumentation",
              "src": "26934:211:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "27172:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27172:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "27188:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "27188:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "27207:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "27207:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27171:63:0"
            },
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "27253:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "27253:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27252:14:0"
            },
            "scope": 856,
            "src": "27150:193:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "27818:111:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 664,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "27857:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 665,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "27865:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 666,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "27871:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27878:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        },
                        "value": "Address: low-level call with value failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        }
                      ],
                      "id": 663,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        671,
                        721
                      ],
                      "referencedDeclaration": 721,
                      "src": "27835:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27835:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 662,
                  "id": 669,
                  "nodeType": "Return",
                  "src": "27828:94:0"
                }
              ]
            },
            "documentation": {
              "id": 652,
              "nodeType": "StructuredDocumentation",
              "src": "27349:351:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
            },
            "id": 671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "27736:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27736:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "27752:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "27752:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "27771:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27771:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27735:50:0"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "27804:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "27804:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27803:14:0"
            },
            "scope": 856,
            "src": "27705:224:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "28318:382:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 688,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "28344:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$856",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$856",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "28336:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 686,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "28336:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28336:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "28336:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 691,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 678,
                          "src": "28361:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28336:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28368:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        },
                        "value": "Address: insufficient balance for call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        }
                      ],
                      "id": 685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28328:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28328:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "28328:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 698,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 674,
                            "src": "28438:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 697,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "28427:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28427:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28447:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        },
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28419:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28419:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "28419:60:0"
                },
                {
                  "assignments": [
                    704,
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 720,
                      "src": "28550:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "28550:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 720,
                      "src": "28564:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "28564:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 713,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "28619:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 707,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 674,
                          "src": "28591:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "28591:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 709,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 678,
                          "src": "28611:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "28591:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28591:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28549:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 715,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "28659:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 716,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "28668:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 717,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "28680:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 714,
                      "name": "_verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "28641:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28641:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 684,
                  "id": 719,
                  "nodeType": "Return",
                  "src": "28634:59:0"
                }
              ]
            },
            "documentation": {
              "id": 672,
              "nodeType": "StructuredDocumentation",
              "src": "27935:237:0",
              "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "28208:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "28224:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "28224:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "28243:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28243:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "28258:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28258:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28207:78:0"
            },
            "returnParameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "28304:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "28304:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28303:14:0"
            },
            "scope": 856,
            "src": "28177:523:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 737,
              "nodeType": "Block",
              "src": "28977:97:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 732,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "29013:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 733,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "29021:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29027:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        },
                        "value": "Address: low-level static call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        }
                      ],
                      "id": 731,
                      "name": "functionStaticCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        738,
                        773
                      ],
                      "referencedDeclaration": 773,
                      "src": "28994:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28994:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 730,
                  "id": 736,
                  "nodeType": "Return",
                  "src": "28987:80:0"
                }
              ]
            },
            "documentation": {
              "id": 722,
              "nodeType": "StructuredDocumentation",
              "src": "28706:166:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "28905:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28905:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "28921:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "28921:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28904:35:0"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "28963:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "28963:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28962:14:0"
            },
            "scope": 856,
            "src": "28877:197:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "29386:288:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 752,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "29415:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 751,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "29404:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29404:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29424:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        },
                        "value": "Address: static call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        }
                      ],
                      "id": 750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29396:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29396:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "29396:67:0"
                },
                {
                  "assignments": [
                    758,
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 758,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "29534:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 757,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "29534:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "29548:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "29548:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 763,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "29593:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 761,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "29575:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "29575:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29575:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29533:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 767,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "29633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 768,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "29642:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 769,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "29654:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 766,
                      "name": "_verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "29615:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29615:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 749,
                  "id": 771,
                  "nodeType": "Return",
                  "src": "29608:59:0"
                }
              ]
            },
            "documentation": {
              "id": 739,
              "nodeType": "StructuredDocumentation",
              "src": "29080:173:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "29286:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29286:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "29302:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29302:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "29321:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "29321:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29285:63:0"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "29372:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29372:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29371:14:0"
            },
            "scope": 856,
            "src": "29258:416:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "29950:101:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 784,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "29988:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 785,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "29996:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30002:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        },
                        "value": "Address: low-level delegate call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        }
                      ],
                      "id": 783,
                      "name": "functionDelegateCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        790,
                        825
                      ],
                      "referencedDeclaration": 825,
                      "src": "29967:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29967:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 788,
                  "nodeType": "Return",
                  "src": "29960:84:0"
                }
              ]
            },
            "documentation": {
              "id": 774,
              "nodeType": "StructuredDocumentation",
              "src": "29680:168:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "29883:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29883:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "29899:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29899:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29882:35:0"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "29936:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29936:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29935:14:0"
            },
            "scope": 856,
            "src": "29853:198:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "30362:292:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 804,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "30391:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 803,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "30380:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30380:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30400:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        },
                        "value": "Address: delegate call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30372:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "30372:69:0"
                },
                {
                  "assignments": [
                    810,
                    812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 824,
                      "src": "30512:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "30512:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 824,
                      "src": "30526:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 811,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "30526:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 815,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "30573:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 813,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "30553:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "30553:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30553:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30511:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 819,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "30613:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 820,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "30622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 821,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "30634:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 818,
                      "name": "_verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "30595:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30595:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 801,
                  "id": 823,
                  "nodeType": "Return",
                  "src": "30588:59:0"
                }
              ]
            },
            "documentation": {
              "id": 791,
              "nodeType": "StructuredDocumentation",
              "src": "30057:175:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "30267:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30267:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "30283:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30283:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "30302:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "30302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30266:63:0"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "30348:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30348:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30347:14:0"
            },
            "scope": 856,
            "src": "30237:417:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 854,
              "nodeType": "Block",
              "src": "30789:596:0",
              "statements": [
                {
                  "condition": {
                    "id": 836,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 827,
                    "src": "30803:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 852,
                    "nodeType": "Block",
                    "src": "30860:519:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 840,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 829,
                              "src": "30944:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "30944:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30964:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "30944:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 850,
                          "nodeType": "Block",
                          "src": "31316:53:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 847,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 831,
                                    "src": "31341:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 846,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "31334:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "31334:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 849,
                              "nodeType": "ExpressionStatement",
                              "src": "31334:20:0"
                            }
                          ]
                        },
                        "id": 851,
                        "nodeType": "IfStatement",
                        "src": "30940:429:0",
                        "trueBody": {
                          "id": 845,
                          "nodeType": "Block",
                          "src": "30967:343:0",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "31151:145:0",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "31173:40:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "31202:10:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "31196:5:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31196:17:0"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "31177:15:0",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "31245:2:0",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "31249:10:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "31241:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "31241:19:0"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "31262:15:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "31234:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31234:44:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31234:44:0"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 829,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "31202:10:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 829,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "31249:10:0",
                                  "valueSize": 1
                                }
                              ],
                              "id": 844,
                              "nodeType": "InlineAssembly",
                              "src": "31142:154:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 853,
                  "nodeType": "IfStatement",
                  "src": "30799:580:0",
                  "trueBody": {
                    "id": 839,
                    "nodeType": "Block",
                    "src": "30812:42:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 837,
                          "name": "returndata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "30833:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 835,
                        "id": 838,
                        "nodeType": "Return",
                        "src": "30826:17:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 855,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyCallResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "30687:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30687:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "returndata",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "30701:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30701:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "30726:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "30726:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30686:67:0"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "30775:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30775:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30774:14:0"
            },
            "scope": 856,
            "src": "30660:725:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2279,
        "src": "23703:7684:0"
      },
      {
        "id": 857,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31458:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 858,
          "nodeType": "StructuredDocumentation",
          "src": "31493:457:0",
          "text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
        },
        "fullyImplemented": true,
        "id": 1065,
        "linearizedBaseContracts": [
          1065
        ],
        "name": "SafeERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 861,
            "libraryName": {
              "id": 859,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 561,
              "src": "31981:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$561",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "31975:27:0",
            "typeName": {
              "id": 860,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "31994:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 864,
            "libraryName": {
              "id": 862,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 856,
              "src": "32013:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$856",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "32007:26:0",
            "typeName": {
              "id": 863,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "32025:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "32111:103:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 874,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "32141:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 877,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 866,
                                "src": "32171:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 156,
                              "src": "32171:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "32171:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 880,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "32196:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 881,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "32200:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 875,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "32148:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "32148:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32148:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 873,
                      "name": "_callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "32121:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32121:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "32121:86:0"
                }
              ]
            },
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "32061:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "32061:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "32075:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32075:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "32087:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32087:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32060:41:0"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32111:0:0"
            },
            "scope": 1065,
            "src": "32039:175:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "32310:113:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 898,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "32340:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 901,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 888,
                                "src": "32370:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 188,
                              "src": "32370:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "32370:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 904,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "32399:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 905,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "32405:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 906,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "32409:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 899,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "32347:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "32347:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32347:68:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 897,
                      "name": "_callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "32320:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32320:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "32320:96:0"
                }
              ]
            },
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "32246:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "32246:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "32260:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32260:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "32274:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "32286:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32286:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32245:55:0"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32310:0:0"
            },
            "scope": 1065,
            "src": "32220:203:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 953,
              "nodeType": "Block",
              "src": "32759:537:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 922,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 918,
                                "src": "33048:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "33057:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "33048:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 925,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "33047:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 930,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "33088:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SafeERC20_$1065",
                                          "typeString": "library SafeERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SafeERC20_$1065",
                                          "typeString": "library SafeERC20"
                                        }
                                      ],
                                      "id": 929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "33080:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 928,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "33080:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 931,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "33080:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 932,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 916,
                                    "src": "33095:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 926,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 914,
                                    "src": "33064:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$207",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 166,
                                  "src": "33064:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33064:39:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "33107:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "33064:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 936,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "33063:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "33047:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33123:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                          "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                        },
                        "value": "SafeERC20: approve from non-zero to non-zero allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                          "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                        }
                      ],
                      "id": 921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33039:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33039:150:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "33039:150:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 942,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "33219:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 945,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 914,
                                "src": "33249:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 176,
                              "src": "33249:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "33249:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 948,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "33273:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 949,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "33282:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 943,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "33226:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "33226:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33226:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 941,
                      "name": "_callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "33199:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33199:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 952,
                  "nodeType": "ExpressionStatement",
                  "src": "33199:90:0"
                }
              ]
            },
            "documentation": {
              "id": 912,
              "nodeType": "StructuredDocumentation",
              "src": "32429:249:0",
              "text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
            },
            "id": 954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "32704:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "32704:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "32718:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32718:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "32735:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32735:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32703:46:0"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32759:0:0"
            },
            "scope": 1065,
            "src": "32683:613:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 989,
              "nodeType": "Block",
              "src": "33388:197:0",
              "statements": [
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "newAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 989,
                      "src": "33398:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33398:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 974,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "33465:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 969,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "33445:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1065",
                                  "typeString": "library SafeERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1065",
                                  "typeString": "library SafeERC20"
                                }
                              ],
                              "id": 968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "33437:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 967,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "33437:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "33437:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 971,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "33452:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 965,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "33421:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 166,
                          "src": "33421:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33421:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "33421:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33421:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33398:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 978,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "33501:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 981,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 956,
                                "src": "33531:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 176,
                              "src": "33531:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "33531:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 984,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "33555:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 985,
                            "name": "newAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "33564:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 979,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "33508:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "33508:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33508:69:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 977,
                      "name": "_callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "33481:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33481:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "33481:97:0"
                }
              ]
            },
            "id": 990,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeIncreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "33333:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "33333:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "33347:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33347:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "33364:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33364:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33332:46:0"
            },
            "returnParameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33388:0:0"
            },
            "scope": 1065,
            "src": "33302:283:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "33677:242:0",
              "statements": [
                {
                  "assignments": [
                    1000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "newAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "33687:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1013,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1010,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "33754:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33761:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                          "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                        },
                        "value": "SafeERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                          "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1005,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "33734:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1065",
                                  "typeString": "library SafeERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1065",
                                  "typeString": "library SafeERC20"
                                }
                              ],
                              "id": 1004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "33726:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1003,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "33726:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "33726:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1007,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "33741:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1001,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "33710:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 166,
                          "src": "33710:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33710:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 512,
                      "src": "33710:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33710:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33687:118:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1015,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "33835:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 1018,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 992,
                                "src": "33865:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 176,
                              "src": "33865:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "33865:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 1021,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "33889:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1022,
                            "name": "newAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "33898:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1016,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "33842:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "33842:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33842:69:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1014,
                      "name": "_callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "33815:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33815:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "33815:97:0"
                }
              ]
            },
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeDecreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "33622:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "33622:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "33636:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33636:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "33653:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33653:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33621:46:0"
            },
            "returnParameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33677:0:0"
            },
            "scope": 1065,
            "src": "33591:328:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "34372:681:0",
              "statements": [
                {
                  "assignments": [
                    1036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1036,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "34721:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1035,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "34721:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1045,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1042,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "34775:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34781:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                          "typeString": "literal_string \"SafeERC20: low-level call failed\""
                        },
                        "value": "SafeERC20: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                          "typeString": "literal_string \"SafeERC20: low-level call failed\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1039,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "34755:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "34747:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "34747:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34747:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "34747:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34747:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34721:95:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1046,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "34830:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "34830:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34850:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "34830:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1062,
                  "nodeType": "IfStatement",
                  "src": "34826:221:0",
                  "trueBody": {
                    "id": 1061,
                    "nodeType": "Block",
                    "src": "34853:194:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1053,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1036,
                                  "src": "34970:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1055,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "34983:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": {
                                        "id": 1054,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "34983:4:0",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 1056,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "34982:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "id": 1051,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "34959:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "34959:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34959:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34991:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                              },
                              "value": "SafeERC20: ERC20 operation did not succeed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                              }
                            ],
                            "id": 1050,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "34951:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34951:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "34951:85:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1028,
              "nodeType": "StructuredDocumentation",
              "src": "33925:372:0",
              "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
            },
            "id": 1064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callOptionalReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "34331:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "34331:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "34345:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "34345:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34330:33:0"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34372:0:0"
            },
            "scope": 1065,
            "src": "34302:751:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2279,
        "src": "31951:3104:0"
      },
      {
        "id": 1066,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35100:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1282,
        "linearizedBaseContracts": [
          1282
        ],
        "name": "UniERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1069,
            "libraryName": {
              "id": 1067,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 561,
              "src": "35163:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$561",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "35157:27:0",
            "typeName": {
              "id": 1068,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "35176:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 1074,
            "mutability": "constant",
            "name": "_ETH_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1282,
            "src": "35190:89:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$207",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1070,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 207,
              "src": "35190:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                  "id": 1072,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "35236:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1071,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 207,
                "src": "35229:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$207_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 1073,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "35229:50:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1079,
            "mutability": "constant",
            "name": "_ZERO_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1282,
            "src": "35285:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$207",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1075,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 207,
              "src": "35285:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 1077,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "35332:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1076,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 207,
                "src": "35325:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$207_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 1078,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "35325:9:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "35399:73:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$207",
                            "typeString": "contract IERC20"
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1086,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "35417:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1087,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "35426:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "35417:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$207",
                            "typeString": "contract IERC20"
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1089,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "35443:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1090,
                            "name": "_ETH_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "35452:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "35443:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "35417:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1093,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "35416:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1085,
                  "id": 1094,
                  "nodeType": "Return",
                  "src": "35409:56:0"
                }
              ]
            },
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "35356:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "35356:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35355:14:0"
            },
            "returnParameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "35393:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "35393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35392:6:0"
            },
            "scope": 1282,
            "src": "35341:131:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1119,
              "nodeType": "Block",
              "src": "35563:143:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1106,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "35583:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1105,
                      "name": "isETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "35577:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$207_$returns$_t_bool_$",
                        "typeString": "function (contract IERC20) pure returns (bool)"
                      }
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35577:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1117,
                    "nodeType": "Block",
                    "src": "35644:56:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1114,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1100,
                              "src": "35681:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1112,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1098,
                              "src": "35665:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 146,
                            "src": "35665:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35665:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1104,
                        "id": 1116,
                        "nodeType": "Return",
                        "src": "35658:31:0"
                      }
                    ]
                  },
                  "id": 1118,
                  "nodeType": "IfStatement",
                  "src": "35573:127:0",
                  "trueBody": {
                    "id": 1111,
                    "nodeType": "Block",
                    "src": "35591:47:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1108,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "35612:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "35612:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1104,
                        "id": 1110,
                        "nodeType": "Return",
                        "src": "35605:22:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniBalanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "35500:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "35500:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1100,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "35514:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35514:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35499:31:0"
            },
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "35554:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35554:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35553:9:0"
            },
            "scope": 1282,
            "src": "35478:228:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1158,
              "nodeType": "Block",
              "src": "35792:252:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1129,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "35806:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35815:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "35806:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1157,
                  "nodeType": "IfStatement",
                  "src": "35802:236:0",
                  "trueBody": {
                    "id": 1156,
                    "nodeType": "Block",
                    "src": "35818:220:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 1133,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "35842:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1132,
                            "name": "isETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1096,
                            "src": "35836:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$207_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20) pure returns (bool)"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35836:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1154,
                          "nodeType": "Block",
                          "src": "35908:120:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1143,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1122,
                                    "src": "35946:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$207",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 1146,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1122,
                                            "src": "35976:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$207",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 1147,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "transfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 156,
                                          "src": "35976:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 1148,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "35976:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      {
                                        "id": 1149,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1124,
                                        "src": "36001:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "id": 1150,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1126,
                                        "src": "36005:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1144,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "35953:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1145,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodeWithSelector",
                                      "nodeType": "MemberAccess",
                                      "src": "35953:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "35953:59:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$207",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1142,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "35926:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35926:87:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1153,
                              "nodeType": "ExpressionStatement",
                              "src": "35926:87:0"
                            }
                          ]
                        },
                        "id": 1155,
                        "nodeType": "IfStatement",
                        "src": "35832:196:0",
                        "trueBody": {
                          "id": 1141,
                          "nodeType": "Block",
                          "src": "35850:52:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1138,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1126,
                                    "src": "35880:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1135,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1124,
                                    "src": "35868:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "35868:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35868:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1140,
                              "nodeType": "ExpressionStatement",
                              "src": "35868:19:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "35733:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "35733:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "35747:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35747:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "35767:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35767:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35732:50:0"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35792:0:0"
            },
            "scope": 1282,
            "src": "35712:332:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1238,
              "nodeType": "Block",
              "src": "36121:547:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "36139:13:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1170,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "36146:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1169,
                            "name": "isETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1096,
                            "src": "36140:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$207_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20) pure returns (bool)"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36140:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417070726f76652063616c6c6564206f6e20455448",
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36154:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65c04b471d9d1a5bfab6c69dc6ac81fe60a6f432d60c04212cb50b1c9f8796ac",
                          "typeString": "literal_string \"Approve called on ETH\""
                        },
                        "value": "Approve called on ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65c04b471d9d1a5bfab6c69dc6ac81fe60a6f432d60c04212cb50b1c9f8796ac",
                          "typeString": "literal_string \"Approve called on ETH\""
                        }
                      ],
                      "id": 1168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36131:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "36131:47:0"
                },
                {
                  "assignments": [
                    1177,
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1177,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1238,
                      "src": "36249:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1176,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "36249:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 1238,
                      "src": "36263:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "36263:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1194,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 1187,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1161,
                                "src": "36333:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 176,
                              "src": "36333:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "36333:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 1190,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "36357:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1191,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1165,
                            "src": "36361:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1185,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "36310:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "36310:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36310:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1182,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "36298:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "36290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "36290:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36290:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "36290:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36290:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36248:121:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "36384:8:0",
                      "subExpression": {
                        "id": 1195,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "36385:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1197,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1179,
                                "src": "36397:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "36397:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36417:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "36397:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "36422:31:0",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1203,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "36434:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "36447:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": {
                                        "id": 1204,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "36447:4:0",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 1206,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "36446:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "id": 1201,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "36423:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "36423:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36423:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "36397:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1210,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "36396:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "36384:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1237,
                  "nodeType": "IfStatement",
                  "src": "36380:282:0",
                  "trueBody": {
                    "id": 1236,
                    "nodeType": "Block",
                    "src": "36456:206:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "36490:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1216,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1161,
                                      "src": "36520:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$207",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1217,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 176,
                                    "src": "36520:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "36520:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 1219,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1163,
                                  "src": "36544:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "36548:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 1214,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "36497:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "36497:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36497:53:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1212,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1281,
                            "src": "36470:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36470:81:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1223,
                        "nodeType": "ExpressionStatement",
                        "src": "36470:81:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1225,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "36585:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1228,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1161,
                                      "src": "36615:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$207",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 176,
                                    "src": "36615:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "36615:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 1231,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1163,
                                  "src": "36639:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1232,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1165,
                                  "src": "36643:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1226,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "36592:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "36592:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36592:58:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1224,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1281,
                            "src": "36565:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36565:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1235,
                        "nodeType": "ExpressionStatement",
                        "src": "36565:86:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "36070:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "36070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1163,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "36084:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36084:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "36096:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36096:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36069:42:0"
            },
            "returnParameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36121:0:0"
            },
            "scope": 1282,
            "src": "36050:618:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1280,
              "nodeType": "Block",
              "src": "36744:357:0",
              "statements": [
                {
                  "assignments": [
                    1247,
                    1249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1280,
                      "src": "36814:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1246,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "36814:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 1280,
                      "src": "36828:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1248,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "36828:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1257,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1255,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "36875:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1252,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "36863:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$207",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "36855:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1250,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "36855:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36855:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "36855:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36855:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36813:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "36898:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36907:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7455455ebc3d8002a87ccc3c2d6fb1530ab8608860804f157f572d9ed48c0d7",
                          "typeString": "literal_string \"low-level call failed\""
                        },
                        "value": "low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7455455ebc3d8002a87ccc3c2d6fb1530ab8608860804f157f572d9ed48c0d7",
                          "typeString": "literal_string \"low-level call failed\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36890:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36890:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "36890:41:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1263,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "36946:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "36946:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "36966:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "36946:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1279,
                  "nodeType": "IfStatement",
                  "src": "36942:153:0",
                  "trueBody": {
                    "id": 1278,
                    "nodeType": "Block",
                    "src": "36969:126:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1270,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1249,
                                  "src": "37029:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "37042:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": {
                                        "id": 1271,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "37042:4:0",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 1273,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "37041:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "id": 1268,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "37018:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "37018:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "37018:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230206f7065726174696f6e20646964206e6f742073756363656564",
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37050:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9a0804dbe00133dac858bd4e3d60209ca63df75dd7dee99498f690e529a048b7",
                                "typeString": "literal_string \"ERC20 operation did not succeed\""
                              },
                              "value": "ERC20 operation did not succeed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9a0804dbe00133dac858bd4e3d60209ca63df75dd7dee99498f690e529a048b7",
                                "typeString": "literal_string \"ERC20 operation did not succeed\""
                              }
                            ],
                            "id": 1267,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "37010:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37010:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "37010:74:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callOptionalReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1241,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "36703:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1240,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "36703:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "36717:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "36717:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36702:33:0"
            },
            "returnParameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36744:0:0"
            },
            "scope": 1282,
            "src": "36674:427:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2279,
        "src": "35134:1969:0"
      },
      {
        "id": 1283,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37147:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1284,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 207,
              "src": "37198:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            },
            "id": 1285,
            "nodeType": "InheritanceSpecifier",
            "src": "37198:6:0"
          }
        ],
        "contractDependencies": [
          207
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1307,
        "linearizedBaseContracts": [
          1307,
          207
        ],
        "name": "IChi",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a0712d68",
            "id": 1290,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1290,
                  "src": "37225:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37224:15:0"
            },
            "returnParameters": {
              "id": 1289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37248:0:0"
            },
            "scope": 1307,
            "src": "37211:38:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d8ccd0f3",
            "id": 1297,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "free",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "37268:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37268:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37267:15:0"
            },
            "returnParameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "freed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "37301:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37301:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37300:15:0"
            },
            "scope": 1307,
            "src": "37254:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "079d229f",
            "id": 1306,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freeFromUpTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "37343:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37343:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "37357:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37342:29:0"
            },
            "returnParameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "freed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "37390:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37390:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37389:15:0"
            },
            "scope": 1307,
            "src": "37321:84:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2279,
        "src": "37180:227:0"
      },
      {
        "id": 1308,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37468:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1322,
        "linearizedBaseContracts": [
          1322
        ],
        "name": "IGasDiscountExtension",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "1d97832e",
            "id": 1321,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "gasUsed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "37561:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37561:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "37578:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37578:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "calldataLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "37593:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37593:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37560:56:0"
            },
            "returnParameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "37640:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IChi_$1307",
                    "typeString": "contract IChi"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "IChi",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1307,
                    "src": "37640:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IChi_$1307",
                      "typeString": "contract IChi"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1319,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "37646:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37646:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37639:15:0"
            },
            "scope": 1322,
            "src": "37539:116:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2279,
        "src": "37501:156:0"
      },
      {
        "id": 1323,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37717:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1324,
              "name": "IGasDiscountExtension",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1322,
              "src": "37784:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGasDiscountExtension_$1322",
                "typeString": "contract IGasDiscountExtension"
              }
            },
            "id": 1325,
            "nodeType": "InheritanceSpecifier",
            "src": "37784:21:0"
          }
        ],
        "contractDependencies": [
          1322
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1331,
        "linearizedBaseContracts": [
          1331,
          1322
        ],
        "name": "IAggregationExecutor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d9c45357",
            "id": 1330,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "callBytes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "37831:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1326,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "37831:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37830:21:0"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37868:0:0"
            },
            "scope": 1331,
            "src": "37812:57:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2279,
        "src": "37750:136:0"
      },
      {
        "id": 1332,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37941:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1569,
        "linearizedBaseContracts": [
          1569
        ],
        "name": "RevertReasonParser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "38102:1783:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1341,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "38352:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "38352:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "hexValue": "3638",
                              "id": 1343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38367:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_68_by_1",
                                "typeString": "int_const 68"
                              },
                              "value": "68"
                            },
                            "src": "38352:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1345,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "38373:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1347,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "38378:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "38373:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "08",
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38384:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d33e25809fcaa2b6900567812852539da8559dc8b76a7ce3fc5ddd77e8d19a69",
                                "typeString": "literal_string hex\"08\""
                              },
                              "value": "\b"
                            },
                            "src": "38373:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "38352:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          },
                          "id": 1355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1351,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "38394:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1353,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38399:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "38394:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "c3",
                            "id": 1354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "38405:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_34b984bb8ad9619731ba292d52940b27feea9e0105c13a05037d1153b80c926f",
                              "typeString": "literal_string hex\"c3\""
                            }
                          },
                          "src": "38394:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "38352:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1357,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "38415:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1359,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "38420:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "38415:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "79",
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "38426:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                            "typeString": "literal_string \"y\""
                          },
                          "value": "y"
                        },
                        "src": "38415:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "38352:80:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      },
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1363,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "38436:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1365,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "38441:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "38436:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "a0",
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38447:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fec18a9ddb06077929803cdc92f56c05e3eaa46edb2fa1ae550563b37906c77c",
                          "typeString": "literal_string hex\"a0\""
                        }
                      },
                      "src": "38436:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "38352:101:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1399,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "39381:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39381:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3336",
                                "id": 1401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39396:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_36_by_1",
                                  "typeString": "int_const 36"
                                },
                                "value": "36"
                              },
                              "src": "39381:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1403,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "39402:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1405,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "39407:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "39402:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "4e",
                                "id": 1406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39413:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c1e3133c5e040bb7fc55cda56e3c1998a2e33373c0850e92b53c932b65ceb44",
                                  "typeString": "literal_string \"N\""
                                },
                                "value": "N"
                              },
                              "src": "39402:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "39381:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            "id": 1413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1409,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "39423:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1411,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 1410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39428:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "39423:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "48",
                              "id": 1412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39434:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_321c2cb0b0673952956a3bfa56cf1ce4df0cd3371ad51a2c5524561250b01836",
                                "typeString": "literal_string \"H\""
                              },
                              "value": "H"
                            },
                            "src": "39423:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "39381:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          },
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1415,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "39444:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1417,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39449:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "39444:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "7b",
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39455:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                              "typeString": "literal_string \"{\""
                            },
                            "value": "{"
                          },
                          "src": "39444:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "39381:80:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1421,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "39465:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1423,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 1422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39470:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "39465:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "71",
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39476:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3ff269d37634c240a40e1b0de0d61faffb6bbb3c251727e2ef176a979d8b95ff",
                            "typeString": "literal_string \"q\""
                          },
                          "value": "q"
                        },
                        "src": "39465:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "39381:101:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1445,
                    "nodeType": "IfStatement",
                    "src": "39377:421:0",
                    "trueBody": {
                      "id": 1444,
                      "nodeType": "Block",
                      "src": "39484:314:0",
                      "statements": [
                        {
                          "assignments": [
                            1428
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1428,
                              "mutability": "mutable",
                              "name": "code",
                              "nodeType": "VariableDeclaration",
                              "scope": 1444,
                              "src": "39498:12:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1427,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "39498:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1429,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "39498:12:0"
                        },
                        {
                          "AST": {
                            "nodeType": "YulBlock",
                            "src": "39583:123:0",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "39664:28:0",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "39682:4:0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39688:2:0",
                                          "type": "",
                                          "value": "36"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "39678:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39678:13:0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "39672:5:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "39672:20:0"
                                },
                                "variableNames": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "39664:4:0"
                                  }
                                ]
                              }
                            ]
                          },
                          "evmVersion": "istanbul",
                          "externalReferences": [
                            {
                              "declaration": 1428,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "39664:4:0",
                              "valueSize": 1
                            },
                            {
                              "declaration": 1334,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "39682:4:0",
                              "valueSize": 1
                            }
                          ],
                          "id": 1430,
                          "nodeType": "InlineAssembly",
                          "src": "39574:132:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1435,
                                    "name": "prefix",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1336,
                                    "src": "39750:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "50616e696328",
                                    "id": 1436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "39758:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6beaf3ae4f274fd261ebef990a244fea7e5f0bd6f66cb1b2f715c478bf326563",
                                      "typeString": "literal_string \"Panic(\""
                                    },
                                    "value": "Panic("
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1438,
                                        "name": "code",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1428,
                                        "src": "39775:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1437,
                                      "name": "_toHex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1476,
                                        1568
                                      ],
                                      "referencedDeclaration": 1476,
                                      "src": "39768:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 1439,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "39768:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "29",
                                    "id": 1440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "39782:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed",
                                      "typeString": "literal_string \")\""
                                    },
                                    "value": ")"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6beaf3ae4f274fd261ebef990a244fea7e5f0bd6f66cb1b2f715c478bf326563",
                                      "typeString": "literal_string \"Panic(\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed",
                                      "typeString": "literal_string \")\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 1433,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "39733:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "39733:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "39733:53:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "39726:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1431,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "39726:6:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "39726:61:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "functionReturnParameters": 1340,
                          "id": 1443,
                          "nodeType": "Return",
                          "src": "39719:68:0"
                        }
                      ]
                    }
                  },
                  "id": 1446,
                  "nodeType": "IfStatement",
                  "src": "38348:1450:0",
                  "trueBody": {
                    "id": 1398,
                    "nodeType": "Block",
                    "src": "38455:846:0",
                    "statements": [
                      {
                        "assignments": [
                          1370
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1370,
                            "mutability": "mutable",
                            "name": "reason",
                            "nodeType": "VariableDeclaration",
                            "scope": 1398,
                            "src": "38469:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1369,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "38469:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1371,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "38469:20:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "38562:136:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38661:23:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "38675:4:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38681:2:0",
                                    "type": "",
                                    "value": "68"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38671:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38671:13:0"
                              },
                              "variableNames": [
                                {
                                  "name": "reason",
                                  "nodeType": "YulIdentifier",
                                  "src": "38661:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1334,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "38675:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1370,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "38661:6:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 1372,
                        "nodeType": "InlineAssembly",
                        "src": "38553:145:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1374,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "39148:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39148:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3638",
                                  "id": 1376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "39163:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_68_by_1",
                                    "typeString": "int_const 68"
                                  },
                                  "value": "68"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1379,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1370,
                                        "src": "39174:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 1378,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "39168:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 1377,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "39168:5:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "39168:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "39168:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "39163:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "39148:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072657665727420726561736f6e",
                              "id": 1384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39190:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aa61454cec725b58b51b8f36b2252c265722a9d0eb721dea6ff49ff11e20ba1f",
                                "typeString": "literal_string \"Invalid revert reason\""
                              },
                              "value": "Invalid revert reason"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aa61454cec725b58b51b8f36b2252c265722a9d0eb721dea6ff49ff11e20ba1f",
                                "typeString": "literal_string \"Invalid revert reason\""
                              }
                            ],
                            "id": 1373,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "39140:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39140:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1386,
                        "nodeType": "ExpressionStatement",
                        "src": "39140:74:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1391,
                                  "name": "prefix",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "39259:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "4572726f7228",
                                  "id": 1392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "39267:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f027e7613d9bdaae789584b09bbb30b6b9fdb158c392ba5b26c372d4ac073ff2",
                                    "typeString": "literal_string \"Error(\""
                                  },
                                  "value": "Error("
                                },
                                {
                                  "id": 1393,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1370,
                                  "src": "39277:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "29",
                                  "id": 1394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "39285:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed",
                                    "typeString": "literal_string \")\""
                                  },
                                  "value": ")"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_f027e7613d9bdaae789584b09bbb30b6b9fdb158c392ba5b26c372d4ac073ff2",
                                    "typeString": "literal_string \"Error(\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed",
                                    "typeString": "literal_string \")\""
                                  }
                                ],
                                "expression": {
                                  "id": 1389,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "39242:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "39242:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "39242:47:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "39235:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1387,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "39235:6:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39235:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1340,
                        "id": 1397,
                        "nodeType": "Return",
                        "src": "39228:62:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1451,
                            "name": "prefix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "39839:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "556e6b6e6f776e28",
                            "id": 1452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39847:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9487e8e91a05d874de6275525e0f59e05aaf46a8f1c80e85205c40a6360a1f2c",
                              "typeString": "literal_string \"Unknown(\""
                            },
                            "value": "Unknown("
                          },
                          {
                            "arguments": [
                              {
                                "id": 1454,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "39866:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1453,
                              "name": "_toHex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1476,
                                1568
                              ],
                              "referencedDeclaration": 1568,
                              "src": "39859:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 1455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "39859:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "29",
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39873:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed",
                              "typeString": "literal_string \")\""
                            },
                            "value": ")"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9487e8e91a05d874de6275525e0f59e05aaf46a8f1c80e85205c40a6360a1f2c",
                              "typeString": "literal_string \"Unknown(\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed",
                              "typeString": "literal_string \")\""
                            }
                          ],
                          "expression": {
                            "id": 1449,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "39822:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "39822:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39822:55:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "39815:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1447,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "39815:6:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39815:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1340,
                  "id": 1459,
                  "nodeType": "Return",
                  "src": "39808:70:0"
                }
              ]
            },
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "38023:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "38023:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "prefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "38042:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "38042:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38022:41:0"
            },
            "returnParameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "38087:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "38087:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38086:15:0"
            },
            "scope": 1569,
            "src": "38008:1877:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1475,
              "nodeType": "Block",
              "src": "39958:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1471,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1463,
                            "src": "39999:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1469,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "39982:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "39982:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39982:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1468,
                      "name": "_toHex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1476,
                        1568
                      ],
                      "referencedDeclaration": 1568,
                      "src": "39975:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (string memory)"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39975:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1467,
                  "id": 1474,
                  "nodeType": "Return",
                  "src": "39968:38:0"
                }
              ]
            },
            "id": 1476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toHex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "39907:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39907:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39906:15:0"
            },
            "returnParameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1466,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "39943:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "39943:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39942:15:0"
            },
            "scope": 1569,
            "src": "39891:122:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1567,
              "nodeType": "Block",
              "src": "40090:385:0",
              "statements": [
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "alphabet",
                      "nodeType": "VariableDeclaration",
                      "scope": 1567,
                      "src": "40100:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "bytes16",
                        "nodeType": "ElementaryTypeName",
                        "src": "40100:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1486,
                  "initialValue": {
                    "hexValue": "30783330333133323333333433353336333733383339363136323633363436353636",
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "40119:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_64058384521018188869745042196707698022_by_1",
                      "typeString": "int_const 6405...(30 digits omitted)...8022"
                    },
                    "value": "0x30313233343536373839616263646566"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "40100:53:0"
                },
                {
                  "assignments": [
                    1488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1488,
                      "mutability": "mutable",
                      "name": "str",
                      "nodeType": "VariableDeclaration",
                      "scope": 1567,
                      "src": "40163:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1487,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "40163:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1498,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "40192:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1492,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1478,
                              "src": "40196:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "40196:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "40210:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "40196:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "40192:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "40182:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1489,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "40186:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40182:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "40163:49:0"
                },
                {
                  "expression": {
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1499,
                        "name": "str",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "40222:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1501,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40226:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "40222:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "40231:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                        "typeString": "literal_string \"0\""
                      },
                      "value": "0"
                    },
                    "src": "40222:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "40222:12:0"
                },
                {
                  "expression": {
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1505,
                        "name": "str",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "40244:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1507,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40248:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "40244:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "78",
                      "id": 1508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "40253:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                        "typeString": "literal_string \"x\""
                      },
                      "value": "x"
                    },
                    "src": "40244:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1510,
                  "nodeType": "ExpressionStatement",
                  "src": "40244:12:0"
                },
                {
                  "body": {
                    "id": 1560,
                    "nodeType": "Block",
                    "src": "40308:133:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1522,
                              "name": "str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1488,
                              "src": "40322:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1528,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "40326:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1524,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1512,
                                  "src": "40330:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "40326:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "40334:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "40326:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "40322:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1529,
                              "name": "alphabet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "40339:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "id": 1538,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  },
                                  "id": 1536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1532,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1478,
                                      "src": "40354:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1534,
                                    "indexExpression": {
                                      "id": 1533,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1512,
                                      "src": "40359:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "40354:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">>",
                                  "rightExpression": {
                                    "hexValue": "34",
                                    "id": 1535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "40365:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "src": "40354:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 1531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "40348:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 1530,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "40348:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "40348:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "40339:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "40322:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1540,
                        "nodeType": "ExpressionStatement",
                        "src": "40322:46:0"
                      },
                      {
                        "expression": {
                          "id": 1558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1541,
                              "name": "str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1488,
                              "src": "40382:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1547,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "40386:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1543,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1512,
                                  "src": "40390:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "40386:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 1545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "40394:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "40386:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "40382:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1548,
                              "name": "alphabet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "40399:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "id": 1557,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  },
                                  "id": 1555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1551,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1478,
                                      "src": "40414:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1553,
                                    "indexExpression": {
                                      "id": 1552,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1512,
                                      "src": "40419:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "40414:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&",
                                  "rightExpression": {
                                    "hexValue": "30783066",
                                    "id": 1554,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "40424:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_15_by_1",
                                      "typeString": "int_const 15"
                                    },
                                    "value": "0x0f"
                                  },
                                  "src": "40414:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 1550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "40408:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 1549,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "40408:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "40408:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "40399:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "40382:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1559,
                        "nodeType": "ExpressionStatement",
                        "src": "40382:48:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1515,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1512,
                      "src": "40286:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1516,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "40290:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "40290:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "40286:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1561,
                  "initializationExpression": {
                    "assignments": [
                      1512
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1512,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1561,
                        "src": "40271:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "40271:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1514,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "40283:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "40271:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "40303:3:0",
                      "subExpression": {
                        "id": 1519,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1512,
                        "src": "40303:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1521,
                    "nodeType": "ExpressionStatement",
                    "src": "40303:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "40266:175:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1564,
                        "name": "str",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "40464:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "40457:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "40457:6:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40457:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1482,
                  "id": 1566,
                  "nodeType": "Return",
                  "src": "40450:18:0"
                }
              ]
            },
            "id": 1568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toHex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1568,
                  "src": "40035:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "40035:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40034:19:0"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1568,
                  "src": "40075:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "40075:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40074:15:0"
            },
            "scope": 1569,
            "src": "40019:456:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2279,
        "src": "37975:2502:0"
      },
      {
        "id": 1570,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40529:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1588,
        "linearizedBaseContracts": [
          1588
        ],
        "name": "IERC20Permit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d505accf",
            "id": 1587,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40608:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40608:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40623:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40623:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1576,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40640:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40640:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40656:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40656:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40674:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "40674:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40683:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "40683:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "40694:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "40694:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40607:97:0"
            },
            "returnParameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40713:0:0"
            },
            "scope": 1588,
            "src": "40592:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2279,
        "src": "40563:153:0"
      },
      {
        "id": 1589,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40763:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1664,
        "linearizedBaseContracts": [
          1664
        ],
        "name": "Permitable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1593,
            "name": "Error",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "40845:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "40845:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40835:29:0"
            },
            "src": "40824:41:0"
          },
          {
            "body": {
              "id": 1662,
              "nodeType": "Block",
              "src": "40950:579:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1602,
                        "name": "permit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "40964:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 1603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "40964:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_224_by_1",
                        "typeString": "int_const 224"
                      },
                      "id": 1606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3332",
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40981:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32_by_1",
                          "typeString": "int_const 32"
                        },
                        "value": "32"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "37",
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40986:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "src": "40981:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_224_by_1",
                        "typeString": "int_const 224"
                      }
                    },
                    "src": "40964:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1661,
                  "nodeType": "IfStatement",
                  "src": "40960:563:0",
                  "trueBody": {
                    "id": 1660,
                    "nodeType": "Block",
                    "src": "40989:534:0",
                    "statements": [
                      {
                        "assignments": [
                          1609,
                          1611
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1609,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1660,
                            "src": "41067:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1608,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "41067:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1611,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 1660,
                            "src": "41081:19:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1610,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "41081:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1625,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1619,
                                      "name": "IERC20Permit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1588,
                                      "src": "41141:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$1588_$",
                                        "typeString": "type(contract IERC20Permit)"
                                      }
                                    },
                                    "id": 1620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "permit",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1587,
                                    "src": "41141:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                                      "typeString": "function IERC20Permit.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
                                    }
                                  },
                                  "id": 1621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "41141:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 1622,
                                  "name": "permit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1599,
                                  "src": "41171:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 1617,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "41124:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "41124:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "41124:54:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1614,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1595,
                                  "src": "41112:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$207",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$207",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "41104:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1612,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "41104:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "41104:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "41104:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "41104:75:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "41066:113:0"
                      },
                      {
                        "condition": {
                          "id": 1627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "41197:8:0",
                          "subExpression": {
                            "id": 1626,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1609,
                            "src": "41198:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1659,
                        "nodeType": "IfStatement",
                        "src": "41193:320:0",
                        "trueBody": {
                          "id": 1658,
                          "nodeType": "Block",
                          "src": "41207:306:0",
                          "statements": [
                            {
                              "assignments": [
                                1629
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1629,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1658,
                                  "src": "41225:20:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 1628,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "41225:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1635,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1632,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1611,
                                    "src": "41273:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "hexValue": "5065726d69742063616c6c206661696c65643a20",
                                    "id": 1633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "41281:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3e6396267a502a1f06db5c3cfd16b507e342dd1546a123bb495c72dcb15ceef5",
                                      "typeString": "literal_string \"Permit call failed: \""
                                    },
                                    "value": "Permit call failed: "
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3e6396267a502a1f06db5c3cfd16b507e342dd1546a123bb495c72dcb15ceef5",
                                      "typeString": "literal_string \"Permit call failed: \""
                                    }
                                  ],
                                  "expression": {
                                    "id": 1630,
                                    "name": "RevertReasonParser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1569,
                                    "src": "41248:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_RevertReasonParser_$1569_$",
                                      "typeString": "type(library RevertReasonParser)"
                                    }
                                  },
                                  "id": 1631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "parse",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1461,
                                  "src": "41248:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (bytes memory,string memory) pure returns (string memory)"
                                  }
                                },
                                "id": 1634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "41248:56:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "41225:79:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1638,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "41342:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1639,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "41342:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 1642,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "41362:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Permitable_$1664",
                                            "typeString": "contract Permitable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Permitable_$1664",
                                            "typeString": "contract Permitable"
                                          }
                                        ],
                                        "id": 1641,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "41354:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1640,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "41354:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1643,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "41354:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1636,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1595,
                                      "src": "41326:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$207",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allowance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 166,
                                    "src": "41326:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address,address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "41326:42:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1645,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1597,
                                  "src": "41371:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "41326:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1656,
                                "nodeType": "Block",
                                "src": "41440:59:0",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 1653,
                                          "name": "reason",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1629,
                                          "src": "41473:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1652,
                                        "name": "Error",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1593,
                                        "src": "41467:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory)"
                                        }
                                      },
                                      "id": 1654,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "41467:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1655,
                                    "nodeType": "EmitStatement",
                                    "src": "41462:18:0"
                                  }
                                ]
                              },
                              "id": 1657,
                              "nodeType": "IfStatement",
                              "src": "41322:177:0",
                              "trueBody": {
                                "id": 1651,
                                "nodeType": "Block",
                                "src": "41379:55:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1648,
                                          "name": "reason",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1629,
                                          "src": "41408:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1647,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "41401:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 1649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "41401:14:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1650,
                                    "nodeType": "ExpressionStatement",
                                    "src": "41401:14:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_permit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "40888:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "40888:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "40902:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40902:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "permit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "40918:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "40918:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40887:53:0"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40950:0:0"
            },
            "scope": 1664,
            "src": "40871:658:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2279,
        "src": "40798:733:0"
      },
      {
        "id": 1665,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "41573:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1666,
              "name": "Permitable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1664,
              "src": "41632:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Permitable_$1664",
                "typeString": "contract Permitable"
              }
            },
            "id": 1667,
            "nodeType": "InheritanceSpecifier",
            "src": "41632:10:0"
          }
        ],
        "contractDependencies": [
          1664
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1766,
        "linearizedBaseContracts": [
          1766,
          1664
        ],
        "name": "UnoswapRouter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1670,
            "mutability": "constant",
            "name": "_TRANSFER_FROM_CALL_SELECTOR_32",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "41649:125:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1668,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "41649:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307832336238373264643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1669,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "41708:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                "typeString": "int_const 1615...(69 digits omitted)...8224"
              },
              "value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1673,
            "mutability": "constant",
            "name": "_WETH_DEPOSIT_CALL_SELECTOR_32",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "41780:124:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1671,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "41780:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307864306533306462303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "41838:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_94482241256677223720308674365448432550660581809977780367718865401173155774464_by_1",
                "typeString": "int_const 9448...(69 digits omitted)...4464"
              },
              "value": "0xd0e30db000000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1676,
            "mutability": "constant",
            "name": "_WETH_WITHDRAW_CALL_SELECTOR_32",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "41910:125:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1674,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "41910:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307832653161376434643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "41969:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20853193852723734048814770637610870652489083209607696777694672748161462697984_by_1",
                "typeString": "int_const 2085...(69 digits omitted)...7984"
              },
              "value": "0x2e1a7d4d00000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1679,
            "mutability": "constant",
            "name": "_ERC20_TRANSFER_CALL_SELECTOR_32",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42041:126:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1677,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42041:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307861393035396362623030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1678,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42101:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_76450787359836037641860180984291677749980919077056822294353438043884394381312_by_1",
                "typeString": "int_const 7645...(69 digits omitted)...1312"
              },
              "value": "0xa9059cbb00000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1682,
            "mutability": "constant",
            "name": "_ADDRESS_MASK",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42173:109:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1680,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42173:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303066666666666666666666666666666666666666666666666666666666666666666666666666666666",
              "id": 1681,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42216:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
                "typeString": "int_const 1461...(41 digits omitted)...2975"
              },
              "value": "0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1685,
            "mutability": "constant",
            "name": "_REVERSE_MASK",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42288:109:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1683,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42288:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307838303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1684,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42331:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9968"
              },
              "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1688,
            "mutability": "constant",
            "name": "_WETH_MASK",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42403:109:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1686,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42403:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307834303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1687,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42446:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1",
                "typeString": "int_const 2894...(69 digits omitted)...9984"
              },
              "value": "0x4000000000000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1691,
            "mutability": "constant",
            "name": "_NUMERATOR_MASK",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42518:109:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1689,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42518:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030666666666666666630303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1690,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42561:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6277101733925179126504886505003981583386072424808101969920_by_1",
                "typeString": "int_const 6277...(50 digits omitted)...9920"
              },
              "value": "0x0000000000000000ffffffff0000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1694,
            "mutability": "constant",
            "name": "_WETH",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42633:99:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1692,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42633:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303043303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 1693,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42666:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1097077688018008265106216665536940668749033598146_by_1",
                "typeString": "int_const 1097...(41 digits omitted)...8146"
              },
              "value": "0x000000000000000000000000C02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1697,
            "mutability": "constant",
            "name": "_UNISWAP_PAIR_RESERVES_CALL_SELECTOR_32",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42738:133:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1695,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42738:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307830393032663161633030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1696,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42805:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4076017289359357539801900495602573828008694449046311057566684818339679698944_by_1",
                "typeString": "int_const 4076...(68 digits omitted)...8944"
              },
              "value": "0x0902f1ac00000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1700,
            "mutability": "constant",
            "name": "_UNISWAP_PAIR_SWAP_CALL_SELECTOR_32",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "42877:129:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1698,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "42877:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307830323263306439663030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 1699,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "42940:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_982460977350810041529277414294671132252240019385445539691854656207635611648_by_1",
                "typeString": "int_const 9824...(67 digits omitted)...1648"
              },
              "value": "0x022c0d9f00000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1703,
            "mutability": "constant",
            "name": "_DENOMINATOR",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "43012:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1701,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "43012:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030",
              "id": 1702,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "43052:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1000000000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1706,
            "mutability": "constant",
            "name": "_NUMERATOR_OFFSET",
            "nodeType": "VariableDeclaration",
            "scope": 1766,
            "src": "43068:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1704,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "43068:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313630",
              "id": 1705,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "43113:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_160_by_1",
                "typeString": "int_const 160"
              },
              "value": "160"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "43150:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1710,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "43221:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "43221:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 1712,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "43235:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "43235:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "43221:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455448206465706f7369742072656a6563746564",
                        "id": 1715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "43246:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f102301ae94a288fb815c6b9692938d1ebc27b1fea4a0eb9a0e6a90a983c14b",
                          "typeString": "literal_string \"ETH deposit rejected\""
                        },
                        "value": "ETH deposit rejected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f102301ae94a288fb815c6b9692938d1ebc27b1fea4a0eb9a0e6a90a983c14b",
                          "typeString": "literal_string \"ETH deposit rejected\""
                        }
                      ],
                      "id": 1709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "43213:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43213:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1717,
                  "nodeType": "ExpressionStatement",
                  "src": "43213:56:0"
                }
              ]
            },
            "id": 1719,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43130:2:0"
            },
            "returnParameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43150:0:0"
            },
            "scope": 1766,
            "src": "43123:153:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1748,
              "nodeType": "Block",
              "src": "43503:110:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1736,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1721,
                        "src": "43521:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 1737,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "43531:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1738,
                        "name": "permit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "43539:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1735,
                      "name": "_permit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "43513:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,bytes calldata)"
                      }
                    },
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43513:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1740,
                  "nodeType": "ExpressionStatement",
                  "src": "43513:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1742,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1721,
                        "src": "43571:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 1743,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "43581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1744,
                        "name": "minReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1725,
                        "src": "43589:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1745,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "43600:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 1741,
                      "name": "unoswap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "43563:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,uint256,uint256,bytes32[] calldata) returns (uint256)"
                      }
                    },
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43563:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1734,
                  "id": 1747,
                  "nodeType": "Return",
                  "src": "43556:50:0"
                }
              ]
            },
            "functionSelector": "a1251d75",
            "id": 1749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unoswapWithPermit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1721,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "43318:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1720,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "43318:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1723,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "43343:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43343:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "minReturn",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "43367:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43367:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1728,
                  "mutability": "mutable",
                  "name": "pools",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "43394:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1726,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "43394:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1727,
                    "nodeType": "ArrayTypeName",
                    "src": "43394:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "permit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "43428:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "43428:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43308:147:0"
            },
            "returnParameters": {
              "id": 1734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1733,
                  "mutability": "mutable",
                  "name": "returnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "43481:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43480:22:0"
            },
            "scope": 1766,
            "src": "43282:331:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1764,
              "nodeType": "Block",
              "src": "43803:5594:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "43822:5569:0",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43900:114:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43933:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43936:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "43939:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43939:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "43918:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43918:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43918:38:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43980:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "43983:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43983:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "43973:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43973:27:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43973:27:0"
                            }
                          ]
                        },
                        "name": "reRevert",
                        "nodeType": "YulFunctionDefinition",
                        "src": "43880:134:0"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44062:269:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44087:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44090:66:0",
                                    "type": "",
                                    "value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44080:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44080:77:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44080:77:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44181:4:0",
                                    "type": "",
                                    "value": "0x20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44187:66:0",
                                    "type": "",
                                    "value": "0x0000002000000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44174:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44174:80:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44174:80:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44278:4:0",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "name": "m",
                                    "nodeType": "YulIdentifier",
                                    "src": "44284:1:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44271:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44271:15:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44271:15:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44310:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "44313:3:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "44303:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44303:14:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44303:14:0"
                            }
                          ]
                        },
                        "name": "revertWithReason",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "m",
                            "nodeType": "YulTypedName",
                            "src": "44054:1:0",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "44057:3:0",
                            "type": ""
                          }
                        ],
                        "src": "44028:303:0"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44420:1296:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "emptyPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "44445:8:0"
                                  },
                                  {
                                    "name": "_UNISWAP_PAIR_RESERVES_CALL_SELECTOR_32",
                                    "nodeType": "YulIdentifier",
                                    "src": "44455:39:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44438:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44438:57:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44438:57:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "44578:50:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "reRevert",
                                        "nodeType": "YulIdentifier",
                                        "src": "44600:8:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "44600:10:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "44600:10:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "gas",
                                          "nodeType": "YulIdentifier",
                                          "src": "44533:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "44533:5:0"
                                      },
                                      {
                                        "name": "pair",
                                        "nodeType": "YulIdentifier",
                                        "src": "44540:4:0"
                                      },
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44546:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44556:3:0",
                                        "type": "",
                                        "value": "0x4"
                                      },
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44561:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44571:4:0",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "staticcall",
                                      "nodeType": "YulIdentifier",
                                      "src": "44522:10:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44522:54:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "44515:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44515:62:0"
                              },
                              "nodeType": "YulIf",
                              "src": "44512:2:0"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "44646:31:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "emptyPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "44668:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "44662:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44662:15:0"
                              },
                              "variables": [
                                {
                                  "name": "reserve0",
                                  "nodeType": "YulTypedName",
                                  "src": "44650:8:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "44694:42:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44720:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44730:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44716:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44716:19:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "44710:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44710:26:0"
                              },
                              "variables": [
                                {
                                  "name": "reserve1",
                                  "nodeType": "YulTypedName",
                                  "src": "44698:8:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "44765:136:0",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "44787:19:0",
                                    "value": {
                                      "name": "reserve0",
                                      "nodeType": "YulIdentifier",
                                      "src": "44798:8:0"
                                    },
                                    "variables": [
                                      {
                                        "name": "tmp",
                                        "nodeType": "YulTypedName",
                                        "src": "44791:3:0",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "44827:20:0",
                                    "value": {
                                      "name": "reserve1",
                                      "nodeType": "YulIdentifier",
                                      "src": "44839:8:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "reserve0",
                                        "nodeType": "YulIdentifier",
                                        "src": "44827:8:0"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "44868:15:0",
                                    "value": {
                                      "name": "tmp",
                                      "nodeType": "YulIdentifier",
                                      "src": "44880:3:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "reserve1",
                                        "nodeType": "YulIdentifier",
                                        "src": "44868:8:0"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "name": "reversed",
                                "nodeType": "YulIdentifier",
                                "src": "44756:8:0"
                              },
                              "nodeType": "YulIf",
                              "src": "44753:2:0"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "44918:33:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "swapAmount",
                                    "nodeType": "YulIdentifier",
                                    "src": "44929:10:0"
                                  },
                                  {
                                    "name": "numerator",
                                    "nodeType": "YulIdentifier",
                                    "src": "44941:9:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "44925:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44925:26:0"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "44918:3:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "44968:69:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ret",
                                        "nodeType": "YulIdentifier",
                                        "src": "44983:3:0"
                                      },
                                      {
                                        "name": "reserve1",
                                        "nodeType": "YulIdentifier",
                                        "src": "44988:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "44979:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44979:18:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ret",
                                        "nodeType": "YulIdentifier",
                                        "src": "45003:3:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "reserve0",
                                            "nodeType": "YulIdentifier",
                                            "src": "45012:8:0"
                                          },
                                          {
                                            "name": "_DENOMINATOR",
                                            "nodeType": "YulIdentifier",
                                            "src": "45022:12:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "45008:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "45008:27:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44999:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44999:37:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "44975:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44975:62:0"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "44968:3:0"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "emptyPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "45062:8:0"
                                  },
                                  {
                                    "name": "_UNISWAP_PAIR_SWAP_CALL_SELECTOR_32",
                                    "nodeType": "YulIdentifier",
                                    "src": "45072:35:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45055:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45055:53:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45055:53:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "45164:123:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "emptyPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "45197:8:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "45207:4:0",
                                                  "type": "",
                                                  "value": "0x04"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "45193:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "45193:19:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "45214:1:0",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "45186:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "45186:30:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "45186:30:0"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "emptyPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "45248:8:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "45258:4:0",
                                                  "type": "",
                                                  "value": "0x24"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "45244:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "45244:19:0"
                                            },
                                            {
                                              "name": "ret",
                                              "nodeType": "YulIdentifier",
                                              "src": "45265:3:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "45237:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "45237:32:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "45237:32:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "45157:130:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45162:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "45312:123:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "emptyPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "45345:8:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "45355:4:0",
                                                  "type": "",
                                                  "value": "0x04"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "45341:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "45341:19:0"
                                            },
                                            {
                                              "name": "ret",
                                              "nodeType": "YulIdentifier",
                                              "src": "45362:3:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "45334:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "45334:32:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "45334:32:0"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "emptyPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "45398:8:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "45408:4:0",
                                                  "type": "",
                                                  "value": "0x24"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "45394:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "45394:19:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "45415:1:0",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "45387:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "45387:30:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "45387:30:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "45304:131:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "reversed",
                                "nodeType": "YulIdentifier",
                                "src": "45132:8:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "45125:310:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45463:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45473:4:0",
                                        "type": "",
                                        "value": "0x44"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45459:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45459:19:0"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "45480:3:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45452:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45452:32:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45452:32:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45512:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45522:4:0",
                                        "type": "",
                                        "value": "0x64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45508:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45508:19:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45529:4:0",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45501:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45501:33:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45501:33:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45562:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45572:4:0",
                                        "type": "",
                                        "value": "0x84"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45558:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45558:19:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45579:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45551:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45551:30:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45551:30:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "45652:50:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "reRevert",
                                        "nodeType": "YulIdentifier",
                                        "src": "45674:8:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "45674:10:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "45674:10:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "gas",
                                          "nodeType": "YulIdentifier",
                                          "src": "45613:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "45613:5:0"
                                      },
                                      {
                                        "name": "pair",
                                        "nodeType": "YulIdentifier",
                                        "src": "45620:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45626:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45629:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45639:4:0",
                                        "type": "",
                                        "value": "0xa4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45645:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45648:1:0",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "call",
                                      "nodeType": "YulIdentifier",
                                      "src": "45608:4:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45608:42:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "45601:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45601:50:0"
                              },
                              "nodeType": "YulIf",
                              "src": "45598:2:0"
                            }
                          ]
                        },
                        "name": "swap",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "emptyPtr",
                            "nodeType": "YulTypedName",
                            "src": "44359:8:0",
                            "type": ""
                          },
                          {
                            "name": "swapAmount",
                            "nodeType": "YulTypedName",
                            "src": "44369:10:0",
                            "type": ""
                          },
                          {
                            "name": "pair",
                            "nodeType": "YulTypedName",
                            "src": "44381:4:0",
                            "type": ""
                          },
                          {
                            "name": "reversed",
                            "nodeType": "YulTypedName",
                            "src": "44387:8:0",
                            "type": ""
                          },
                          {
                            "name": "numerator",
                            "nodeType": "YulTypedName",
                            "src": "44397:9:0",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "44408:3:0",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "44416:3:0",
                            "type": ""
                          }
                        ],
                        "src": "44345:1371:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "45730:27:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "45752:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "45746:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "45746:11:0"
                        },
                        "variables": [
                          {
                            "name": "emptyPtr",
                            "nodeType": "YulTypedName",
                            "src": "45734:8:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "45777:4:0",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "emptyPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "45787:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "45797:4:0",
                                  "type": "",
                                  "value": "0xc0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "45783:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "45783:19:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "45770:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "45770:33:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "45770:33:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "45817:47:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "45853:4:0",
                                  "type": "",
                                  "value": "0x64"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "45840:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "45840:18:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "45860:3:0",
                              "type": "",
                              "value": "0x4"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "45836:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "45836:28:0"
                        },
                        "variables": [
                          {
                            "name": "poolsOffset",
                            "nodeType": "YulTypedName",
                            "src": "45821:11:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "45877:47:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "poolsOffset",
                              "nodeType": "YulIdentifier",
                              "src": "45912:11:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "45899:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "45899:25:0"
                        },
                        "variables": [
                          {
                            "name": "poolsEndOffset",
                            "nodeType": "YulTypedName",
                            "src": "45881:14:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "45937:37:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "poolsOffset",
                              "nodeType": "YulIdentifier",
                              "src": "45956:11:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "45969:4:0",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "45952:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "45952:22:0"
                        },
                        "variableNames": [
                          {
                            "name": "poolsOffset",
                            "nodeType": "YulIdentifier",
                            "src": "45937:11:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "45987:61:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "poolsOffset",
                              "nodeType": "YulIdentifier",
                              "src": "46009:11:0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "46026:4:0",
                                  "type": "",
                                  "value": "0x20"
                                },
                                {
                                  "name": "poolsEndOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "46032:14:0"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nodeType": "YulIdentifier",
                                "src": "46022:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "46022:25:0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "46005:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "46005:43:0"
                        },
                        "variableNames": [
                          {
                            "name": "poolsEndOffset",
                            "nodeType": "YulIdentifier",
                            "src": "45987:14:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "46061:40:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "poolsOffset",
                              "nodeType": "YulIdentifier",
                              "src": "46089:11:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "46076:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "46076:25:0"
                        },
                        "variables": [
                          {
                            "name": "rawPair",
                            "nodeType": "YulTypedName",
                            "src": "46065:7:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "46149:727:0",
                              "statements": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "46202:154:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "46241:66:0",
                                              "type": "",
                                              "value": "0x00000011696e76616c6964206d73672e76616c75650000000000000000000000"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "46309:4:0",
                                              "type": "",
                                              "value": "0x55"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revertWithReason",
                                            "nodeType": "YulIdentifier",
                                            "src": "46224:16:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "46224:90:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "46224:90:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "amount",
                                            "nodeType": "YulIdentifier",
                                            "src": "46180:6:0"
                                          },
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "callvalue",
                                              "nodeType": "YulIdentifier",
                                              "src": "46188:9:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "46188:11:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nodeType": "YulIdentifier",
                                          "src": "46177:2:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "46177:23:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "46170:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46170:31:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "46167:2:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46381:8:0"
                                      },
                                      {
                                        "name": "_WETH_DEPOSIT_CALL_SELECTOR_32",
                                        "nodeType": "YulIdentifier",
                                        "src": "46391:30:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "46374:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46374:48:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "46374:48:0"
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "46498:50:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "reRevert",
                                            "nodeType": "YulIdentifier",
                                            "src": "46520:8:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "46520:10:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "46520:10:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "gas",
                                              "nodeType": "YulIdentifier",
                                              "src": "46454:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "46454:5:0"
                                          },
                                          {
                                            "name": "_WETH",
                                            "nodeType": "YulIdentifier",
                                            "src": "46461:5:0"
                                          },
                                          {
                                            "name": "amount",
                                            "nodeType": "YulIdentifier",
                                            "src": "46468:6:0"
                                          },
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "46476:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46486:3:0",
                                            "type": "",
                                            "value": "0x4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46491:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46494:1:0",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "call",
                                          "nodeType": "YulIdentifier",
                                          "src": "46449:4:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "46449:47:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "46442:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46442:55:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "46439:2:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46573:8:0"
                                      },
                                      {
                                        "name": "_ERC20_TRANSFER_CALL_SELECTOR_32",
                                        "nodeType": "YulIdentifier",
                                        "src": "46583:32:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "46566:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46566:50:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "46566:50:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "46644:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46654:3:0",
                                            "type": "",
                                            "value": "0x4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "46640:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "46640:18:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "46664:7:0"
                                          },
                                          {
                                            "name": "_ADDRESS_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "46673:13:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "46660:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "46660:27:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "46633:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46633:55:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "46633:55:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "46716:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46726:4:0",
                                            "type": "",
                                            "value": "0x24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "46712:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "46712:19:0"
                                      },
                                      {
                                        "name": "amount",
                                        "nodeType": "YulIdentifier",
                                        "src": "46733:6:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "46705:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46705:35:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "46705:35:0"
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "46812:50:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "reRevert",
                                            "nodeType": "YulIdentifier",
                                            "src": "46834:8:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "46834:10:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "46834:10:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "gas",
                                              "nodeType": "YulIdentifier",
                                              "src": "46772:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "46772:5:0"
                                          },
                                          {
                                            "name": "_WETH",
                                            "nodeType": "YulIdentifier",
                                            "src": "46779:5:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46786:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "46789:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46799:4:0",
                                            "type": "",
                                            "value": "0x44"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46805:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "46808:1:0",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "call",
                                          "nodeType": "YulIdentifier",
                                          "src": "46767:4:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "46767:43:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "46760:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46760:51:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "46757:2:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "46142:734:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "46147:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "46897:571:0",
                              "statements": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "46930:154:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "46969:66:0",
                                              "type": "",
                                              "value": "0x00000011696e76616c6964206d73672e76616c75650000000000000000000000"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "47037:4:0",
                                              "type": "",
                                              "value": "0x55"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revertWithReason",
                                            "nodeType": "YulIdentifier",
                                            "src": "46952:16:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "46952:90:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "46952:90:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "callvalue",
                                      "nodeType": "YulIdentifier",
                                      "src": "46918:9:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46918:11:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "46915:2:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47109:8:0"
                                      },
                                      {
                                        "name": "_TRANSFER_FROM_CALL_SELECTOR_32",
                                        "nodeType": "YulIdentifier",
                                        "src": "47119:31:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "47102:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47102:49:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "47102:49:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "47179:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47189:3:0",
                                            "type": "",
                                            "value": "0x4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "47175:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47175:18:0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "caller",
                                          "nodeType": "YulIdentifier",
                                          "src": "47195:6:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47195:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "47168:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47168:36:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "47168:36:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "47232:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47242:4:0",
                                            "type": "",
                                            "value": "0x24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "47228:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47228:19:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "47253:7:0"
                                          },
                                          {
                                            "name": "_ADDRESS_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "47262:13:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "47249:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47249:27:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "47221:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47221:56:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "47221:56:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "47305:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47315:4:0",
                                            "type": "",
                                            "value": "0x44"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "47301:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47301:19:0"
                                      },
                                      {
                                        "name": "amount",
                                        "nodeType": "YulIdentifier",
                                        "src": "47322:6:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "47294:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47294:35:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "47294:35:0"
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "47404:50:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "reRevert",
                                            "nodeType": "YulIdentifier",
                                            "src": "47426:8:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "47426:10:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "47426:10:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "gas",
                                              "nodeType": "YulIdentifier",
                                              "src": "47361:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "47361:5:0"
                                          },
                                          {
                                            "name": "srcToken",
                                            "nodeType": "YulIdentifier",
                                            "src": "47368:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47378:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "47381:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47391:4:0",
                                            "type": "",
                                            "value": "0x64"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47397:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "47400:1:0",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "call",
                                          "nodeType": "YulIdentifier",
                                          "src": "47356:4:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47356:46:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "47349:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47349:54:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "47346:2:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "46889:579:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "srcToken",
                          "nodeType": "YulIdentifier",
                          "src": "46121:8:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "46114:1354:0"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "47482:22:0",
                        "value": {
                          "name": "amount",
                          "nodeType": "YulIdentifier",
                          "src": "47498:6:0"
                        },
                        "variableNames": [
                          {
                            "name": "returnAmount",
                            "nodeType": "YulIdentifier",
                            "src": "47482:12:0"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47598:452:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "47616:34:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "47648:1:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "47635:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47635:15:0"
                              },
                              "variables": [
                                {
                                  "name": "nextRawPair",
                                  "nodeType": "YulTypedName",
                                  "src": "47620:11:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "47668:328:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "emptyPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "47710:8:0"
                                  },
                                  {
                                    "name": "returnAmount",
                                    "nodeType": "YulIdentifier",
                                    "src": "47740:12:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "rawPair",
                                        "nodeType": "YulIdentifier",
                                        "src": "47778:7:0"
                                      },
                                      {
                                        "name": "_ADDRESS_MASK",
                                        "nodeType": "YulIdentifier",
                                        "src": "47787:13:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "47774:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47774:27:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "rawPair",
                                        "nodeType": "YulIdentifier",
                                        "src": "47827:7:0"
                                      },
                                      {
                                        "name": "_REVERSE_MASK",
                                        "nodeType": "YulIdentifier",
                                        "src": "47836:13:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "47823:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47823:27:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_NUMERATOR_OFFSET",
                                        "nodeType": "YulIdentifier",
                                        "src": "47876:17:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "47899:7:0"
                                          },
                                          {
                                            "name": "_NUMERATOR_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "47908:15:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "47895:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47895:29:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shr",
                                      "nodeType": "YulIdentifier",
                                      "src": "47872:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47872:53:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "nextRawPair",
                                        "nodeType": "YulIdentifier",
                                        "src": "47951:11:0"
                                      },
                                      {
                                        "name": "_ADDRESS_MASK",
                                        "nodeType": "YulIdentifier",
                                        "src": "47964:13:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "47947:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47947:31:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "swap",
                                  "nodeType": "YulIdentifier",
                                  "src": "47684:4:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47684:312:0"
                              },
                              "variableNames": [
                                {
                                  "name": "returnAmount",
                                  "nodeType": "YulIdentifier",
                                  "src": "47668:12:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "48014:22:0",
                              "value": {
                                "name": "nextRawPair",
                                "nodeType": "YulIdentifier",
                                "src": "48025:11:0"
                              },
                              "variableNames": [
                                {
                                  "name": "rawPair",
                                  "nodeType": "YulIdentifier",
                                  "src": "48014:7:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "47559:1:0"
                            },
                            {
                              "name": "poolsEndOffset",
                              "nodeType": "YulIdentifier",
                              "src": "47562:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "47556:2:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "47556:21:0"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "47578:19:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "47579:17:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "47588:1:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "47591:4:0",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "47584:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47584:12:0"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "47579:1:0"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "47522:33:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "47523:31:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "poolsOffset",
                                    "nodeType": "YulIdentifier",
                                    "src": "47536:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "47549:4:0",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "47532:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47532:22:0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "47527:1:0",
                                  "type": ""
                                }
                              ]
                            }
                          ]
                        },
                        "src": "47518:532:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "48115:337:0",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "48133:305:0",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48175:8:0"
                                      },
                                      {
                                        "name": "returnAmount",
                                        "nodeType": "YulIdentifier",
                                        "src": "48205:12:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "48243:7:0"
                                          },
                                          {
                                            "name": "_ADDRESS_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "48252:13:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "48239:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48239:27:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "48292:7:0"
                                          },
                                          {
                                            "name": "_REVERSE_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "48301:13:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "48288:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48288:27:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "_NUMERATOR_OFFSET",
                                            "nodeType": "YulIdentifier",
                                            "src": "48341:17:0"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "rawPair",
                                                "nodeType": "YulIdentifier",
                                                "src": "48364:7:0"
                                              },
                                              {
                                                "name": "_NUMERATOR_MASK",
                                                "nodeType": "YulIdentifier",
                                                "src": "48373:15:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "48360:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48360:29:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shr",
                                          "nodeType": "YulIdentifier",
                                          "src": "48337:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48337:53:0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "caller",
                                          "nodeType": "YulIdentifier",
                                          "src": "48412:6:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48412:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "swap",
                                      "nodeType": "YulIdentifier",
                                      "src": "48149:4:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48149:289:0"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "returnAmount",
                                      "nodeType": "YulIdentifier",
                                      "src": "48133:12:0"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "48108:344:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48113:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "48473:712:0",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "48491:306:0",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48533:8:0"
                                      },
                                      {
                                        "name": "returnAmount",
                                        "nodeType": "YulIdentifier",
                                        "src": "48563:12:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "48601:7:0"
                                          },
                                          {
                                            "name": "_ADDRESS_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "48610:13:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "48597:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48597:27:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "rawPair",
                                            "nodeType": "YulIdentifier",
                                            "src": "48650:7:0"
                                          },
                                          {
                                            "name": "_REVERSE_MASK",
                                            "nodeType": "YulIdentifier",
                                            "src": "48659:13:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "48646:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48646:27:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "_NUMERATOR_OFFSET",
                                            "nodeType": "YulIdentifier",
                                            "src": "48699:17:0"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "rawPair",
                                                "nodeType": "YulIdentifier",
                                                "src": "48722:7:0"
                                              },
                                              {
                                                "name": "_NUMERATOR_MASK",
                                                "nodeType": "YulIdentifier",
                                                "src": "48731:15:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "48718:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48718:29:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shr",
                                          "nodeType": "YulIdentifier",
                                          "src": "48695:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48695:53:0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "address",
                                          "nodeType": "YulIdentifier",
                                          "src": "48770:7:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48770:9:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "swap",
                                      "nodeType": "YulIdentifier",
                                      "src": "48507:4:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48507:290:0"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "returnAmount",
                                      "nodeType": "YulIdentifier",
                                      "src": "48491:12:0"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "emptyPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48822:8:0"
                                      },
                                      {
                                        "name": "_WETH_WITHDRAW_CALL_SELECTOR_32",
                                        "nodeType": "YulIdentifier",
                                        "src": "48832:31:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "48815:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48815:49:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "48815:49:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "48892:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "48902:4:0",
                                            "type": "",
                                            "value": "0x04"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "48888:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48888:19:0"
                                      },
                                      {
                                        "name": "returnAmount",
                                        "nodeType": "YulIdentifier",
                                        "src": "48909:12:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "48881:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48881:41:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "48881:41:0"
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "48994:50:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "reRevert",
                                            "nodeType": "YulIdentifier",
                                            "src": "49016:8:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "49016:10:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "49016:10:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "gas",
                                              "nodeType": "YulIdentifier",
                                              "src": "48954:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48954:5:0"
                                          },
                                          {
                                            "name": "_WETH",
                                            "nodeType": "YulIdentifier",
                                            "src": "48961:5:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "48968:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "name": "emptyPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "48971:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "48981:4:0",
                                            "type": "",
                                            "value": "0x24"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "48987:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "48990:1:0",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "call",
                                          "nodeType": "YulIdentifier",
                                          "src": "48949:4:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48949:43:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "48942:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48942:51:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "48939:2:0"
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "49121:50:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "reRevert",
                                            "nodeType": "YulIdentifier",
                                            "src": "49143:8:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "49143:10:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "49143:10:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "gas",
                                              "nodeType": "YulIdentifier",
                                              "src": "49077:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "49077:5:0"
                                          },
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "caller",
                                              "nodeType": "YulIdentifier",
                                              "src": "49084:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "49084:8:0"
                                          },
                                          {
                                            "name": "returnAmount",
                                            "nodeType": "YulIdentifier",
                                            "src": "49094:12:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "49108:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "49111:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "49114:1:0",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "49117:1:0",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "call",
                                          "nodeType": "YulIdentifier",
                                          "src": "49072:4:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "49072:47:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "49065:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "49065:55:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "49062:2:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "48465:720:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "name": "rawPair",
                              "nodeType": "YulIdentifier",
                              "src": "48075:7:0"
                            },
                            {
                              "name": "_WETH_MASK",
                              "nodeType": "YulIdentifier",
                              "src": "48084:10:0"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "48071:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "48071:24:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "48064:1121:0"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49230:151:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "49265:66:0",
                                    "type": "",
                                    "value": "0x000000164d696e2072657475726e206e6f742072656163686564000000000000"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "49333:4:0",
                                    "type": "",
                                    "value": "0x5a"
                                  }
                                ],
                                "functionName": {
                                  "name": "revertWithReason",
                                  "nodeType": "YulIdentifier",
                                  "src": "49248:16:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49248:90:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "49248:90:0"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "returnAmount",
                              "nodeType": "YulIdentifier",
                              "src": "49205:12:0"
                            },
                            {
                              "name": "minReturn",
                              "nodeType": "YulIdentifier",
                              "src": "49219:9:0"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "49202:2:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "49202:27:0"
                        },
                        "nodeType": "YulIf",
                        "src": "49199:2:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46673:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47262:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47787:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47964:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48252:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48610:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1703,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "45022:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1679,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46583:32:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1691,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47908:15:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1691,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48373:15:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1691,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48731:15:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1706,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47876:17:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1706,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48341:17:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1706,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48699:17:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1685,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47836:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1685,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48301:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1685,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48659:13:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1670,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47119:31:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1697,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "44455:39:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1700,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "45072:35:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1694,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46461:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1694,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46779:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1694,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48961:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1673,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46391:30:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1688,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48084:10:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1676,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48832:31:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1753,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46180:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1753,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46468:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1753,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46733:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1753,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47322:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1753,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47498:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1755,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "49219:9:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47482:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47668:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47740:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48133:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48205:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48491:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48563:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48909:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "49094:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1761,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "49205:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1751,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "46121:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1751,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47368:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 1763,
                  "nodeType": "InlineAssembly",
                  "src": "43813:5578:0"
                }
              ]
            },
            "functionSelector": "2e95b6c8",
            "id": 1765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unoswap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "43645:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "43645:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "43670:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43670:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1755,
                  "mutability": "mutable",
                  "name": "minReturn",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "43694:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43694:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1758,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "43721:18:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1756,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "43721:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1757,
                    "nodeType": "ArrayTypeName",
                    "src": "43721:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43635:122:0"
            },
            "returnParameters": {
              "id": 1762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1761,
                  "mutability": "mutable",
                  "name": "returnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "43781:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43780:22:0"
            },
            "scope": 1766,
            "src": "43619:5778:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2279,
        "src": "41606:7793:0"
      },
      {
        "id": 1767,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "49447:31:0"
      },
      {
        "id": 1768,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "49479:33:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1769,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 130,
              "src": "49551:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$130",
                "typeString": "contract Ownable"
              }
            },
            "id": 1770,
            "nodeType": "InheritanceSpecifier",
            "src": "49551:7:0"
          },
          {
            "baseName": {
              "id": 1771,
              "name": "UnoswapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "49560:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UnoswapRouter_$1766",
                "typeString": "contract UnoswapRouter"
              }
            },
            "id": 1772,
            "nodeType": "InheritanceSpecifier",
            "src": "49560:13:0"
          }
        ],
        "contractDependencies": [
          22,
          130,
          1664,
          1766
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2278,
        "linearizedBaseContracts": [
          2278,
          1766,
          1664,
          130,
          22
        ],
        "name": "AggregationRouterV3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1775,
            "libraryName": {
              "id": 1773,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 561,
              "src": "49586:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$561",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "49580:27:0",
            "typeName": {
              "id": 1774,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49599:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1778,
            "libraryName": {
              "id": 1776,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1065,
              "src": "49618:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$1065",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "49612:27:0",
            "typeName": {
              "id": 1777,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 207,
              "src": "49632:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1781,
            "libraryName": {
              "id": 1779,
              "name": "UniERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1282,
              "src": "49650:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniERC20_$1282",
                "typeString": "library UniERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "49644:26:0",
            "typeName": {
              "id": 1780,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 207,
              "src": "49663:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 1784,
            "mutability": "constant",
            "name": "_PARTIAL_FILL",
            "nodeType": "VariableDeclaration",
            "scope": 2278,
            "src": "49676:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1782,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49676:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783031",
              "id": 1783,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "49717:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "0x01"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1787,
            "mutability": "constant",
            "name": "_REQUIRES_EXTRA_ETH",
            "nodeType": "VariableDeclaration",
            "scope": 2278,
            "src": "49727:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1785,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49727:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783032",
              "id": 1786,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "49774:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "0x02"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1790,
            "mutability": "constant",
            "name": "_SHOULD_CLAIM",
            "nodeType": "VariableDeclaration",
            "scope": 2278,
            "src": "49784:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1788,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49784:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783034",
              "id": 1789,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "49825:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "0x04"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1793,
            "mutability": "constant",
            "name": "_BURN_FROM_MSG_SENDER",
            "nodeType": "VariableDeclaration",
            "scope": 2278,
            "src": "49835:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1791,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49835:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783038",
              "id": 1792,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "49884:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "0x08"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1796,
            "mutability": "constant",
            "name": "_BURN_FROM_TX_ORIGIN",
            "nodeType": "VariableDeclaration",
            "scope": 2278,
            "src": "49894:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1794,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49894:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783130",
              "id": 1795,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "49942:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16_by_1",
                "typeString": "int_const 16"
              },
              "value": "0x10"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "AggregationRouterV3.SwapDescription",
            "id": 1813,
            "members": [
              {
                "constant": false,
                "id": 1798,
                "mutability": "mutable",
                "name": "srcToken",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "49986:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$207",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 1797,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 207,
                  "src": "49986:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1800,
                "mutability": "mutable",
                "name": "dstToken",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50011:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$207",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 1799,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 207,
                  "src": "50011:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1802,
                "mutability": "mutable",
                "name": "srcReceiver",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50036:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1801,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "50036:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1804,
                "mutability": "mutable",
                "name": "dstReceiver",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50065:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1803,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "50065:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1806,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50094:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1805,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "50094:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1808,
                "mutability": "mutable",
                "name": "minReturnAmount",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50118:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1807,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "50118:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1810,
                "mutability": "mutable",
                "name": "flags",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50151:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1809,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "50151:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1812,
                "mutability": "mutable",
                "name": "permit",
                "nodeType": "VariableDeclaration",
                "scope": 1813,
                "src": "50174:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 1811,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "50174:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapDescription",
            "nodeType": "StructDefinition",
            "scope": 2278,
            "src": "49953:240:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1827,
            "name": "Swapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "50222:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50222:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1817,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "50246:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1816,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "50246:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "50271:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "50271:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1821,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "50296:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50296:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1823,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "spentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "50325:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50325:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1825,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "returnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "50354:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50354:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50212:168:0"
            },
            "src": "50199:182:0"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "50633:1130:0",
              "statements": [
                {
                  "assignments": [
                    1843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1843,
                      "mutability": "mutable",
                      "name": "initialGas",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "50643:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "50643:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1846,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1844,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "50664:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50664:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "50643:30:0"
                },
                {
                  "assignments": [
                    1848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1848,
                      "mutability": "mutable",
                      "name": "chiSource",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "50684:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1847,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "50684:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1853,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50712:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "50704:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1849,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "50704:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50704:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "50684:30:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1854,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "50728:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                            "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                          }
                        },
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flags",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1810,
                        "src": "50728:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 1856,
                        "name": "_BURN_FROM_MSG_SENDER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1793,
                        "src": "50741:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "50728:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "50766:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "50728:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1866,
                            "name": "desc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "50826:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                              "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                            }
                          },
                          "id": 1867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "flags",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1810,
                          "src": "50826:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "id": 1868,
                          "name": "_BURN_FROM_TX_ORIGIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1796,
                          "src": "50839:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "50826:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50863:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "50826:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1882,
                      "nodeType": "Block",
                      "src": "50958:59:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "496e636f727265637420434849206275726e20666c616773",
                                "id": 1879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "50979:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6a076ff87d66687d06fea1d1d4a0ea81b3456025c61abe4829c628536f7ed40f",
                                  "typeString": "literal_string \"Incorrect CHI burn flags\""
                                },
                                "value": "Incorrect CHI burn flags"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_6a076ff87d66687d06fea1d1d4a0ea81b3456025c61abe4829c628536f7ed40f",
                                  "typeString": "literal_string \"Incorrect CHI burn flags\""
                                }
                              ],
                              "id": 1878,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "50972:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 1880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "50972:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1881,
                          "nodeType": "ExpressionStatement",
                          "src": "50972:34:0"
                        }
                      ]
                    },
                    "id": 1883,
                    "nodeType": "IfStatement",
                    "src": "50822:195:0",
                    "trueBody": {
                      "id": 1877,
                      "nodeType": "Block",
                      "src": "50866:86:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 1875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1872,
                              "name": "chiSource",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "50880:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 1873,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "50892:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "50892:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "50880:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1876,
                          "nodeType": "ExpressionStatement",
                          "src": "50880:21:0"
                        }
                      ]
                    }
                  },
                  "id": 1884,
                  "nodeType": "IfStatement",
                  "src": "50724:293:0",
                  "trueBody": {
                    "id": 1865,
                    "nodeType": "Block",
                    "src": "50769:47:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1860,
                            "name": "chiSource",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1848,
                            "src": "50783:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1861,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "50795:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "50795:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "50783:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1864,
                        "nodeType": "ExpressionStatement",
                        "src": "50783:22:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1886,
                    1888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1886,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "51087:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1885,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "51087:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1888,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "51101:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1887,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "51101:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1904,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 1896,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "51178:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregationRouterV3_$2278",
                                  "typeString": "contract AggregationRouterV3"
                                }
                              },
                              "id": 1897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2248,
                              "src": "51178:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_contract$_IAggregationExecutor_$1331_$_t_struct$_SwapDescription_$1813_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (contract IAggregationExecutor,struct AggregationRouterV3.SwapDescription memory,bytes memory) payable external returns (uint256,uint256)"
                              }
                            },
                            "id": 1898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "51178:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 1899,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1829,
                            "src": "51198:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                              "typeString": "contract IAggregationExecutor"
                            }
                          },
                          {
                            "id": 1900,
                            "name": "desc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "51206:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                              "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                            }
                          },
                          {
                            "id": 1901,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1833,
                            "src": "51212:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                              "typeString": "contract IAggregationExecutor"
                            },
                            {
                              "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                              "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 1894,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "51155:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "51155:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "51155:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1891,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "51136:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregationRouterV3_$2278",
                              "typeString": "contract AggregationRouterV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AggregationRouterV3_$2278",
                              "typeString": "contract AggregationRouterV3"
                            }
                          ],
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "51128:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "51128:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "51128:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "51128:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51128:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "51086:132:0"
                },
                {
                  "condition": {
                    "id": 1905,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1886,
                    "src": "51232:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1943,
                    "nodeType": "Block",
                    "src": "51332:185:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1920,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "51350:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "51350:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "51362:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "51350:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1934,
                        "nodeType": "IfStatement",
                        "src": "51346:82:0",
                        "trueBody": {
                          "id": 1933,
                          "nodeType": "Block",
                          "src": "51365:63:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1929,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "51403:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "51403:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 1924,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "51383:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "51383:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "51383:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "51383:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1932,
                              "nodeType": "ExpressionStatement",
                              "src": "51383:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1938,
                                  "name": "returnData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1888,
                                  "src": "51477:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "hexValue": "53776170206661696c65643a20",
                                  "id": 1939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "51489:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8f794c7178979e3349b786e66fd2a1abd4b301d3e2681c8f0a04e6b08efb8887",
                                    "typeString": "literal_string \"Swap failed: \""
                                  },
                                  "value": "Swap failed: "
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_8f794c7178979e3349b786e66fd2a1abd4b301d3e2681c8f0a04e6b08efb8887",
                                    "typeString": "literal_string \"Swap failed: \""
                                  }
                                ],
                                "expression": {
                                  "id": 1936,
                                  "name": "RevertReasonParser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1569,
                                  "src": "51452:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RevertReasonParser_$1569_$",
                                    "typeString": "type(library RevertReasonParser)"
                                  }
                                },
                                "id": 1937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "parse",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1461,
                                "src": "51452:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory,string memory) pure returns (string memory)"
                                }
                              },
                              "id": 1940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "51452:53:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1935,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "51446:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "51446:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1942,
                        "nodeType": "EmitStatement",
                        "src": "51441:65:0"
                      }
                    ]
                  },
                  "id": 1944,
                  "nodeType": "IfStatement",
                  "src": "51228:289:0",
                  "trueBody": {
                    "id": 1919,
                    "nodeType": "Block",
                    "src": "51241:85:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1906,
                                "name": "returnAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1836,
                                "src": "51256:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              null
                            ],
                            "id": 1907,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "51255:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$__$",
                              "typeString": "tuple(uint256,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1910,
                                "name": "returnData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1888,
                                "src": "51284:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 1912,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "51297:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1911,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "51297:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  {
                                    "id": 1914,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "51306:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1913,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "51306:7:0",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 1915,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "51296:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                  "typeString": "tuple(type(uint256),type(uint256))"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                  "typeString": "tuple(type(uint256),type(uint256))"
                                }
                              ],
                              "expression": {
                                "id": 1908,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "51273:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "51273:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51273:42:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "51255:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1918,
                        "nodeType": "ExpressionStatement",
                        "src": "51255:60:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1946,
                    1948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1946,
                      "mutability": "mutable",
                      "name": "chi",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "51528:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IChi_$1307",
                        "typeString": "contract IChi"
                      },
                      "typeName": {
                        "id": 1945,
                        "name": "IChi",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1307,
                        "src": "51528:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IChi_$1307",
                          "typeString": "contract IChi"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1948,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "51538:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1947,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "51538:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1962,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1953,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "51591:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51591:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1951,
                            "name": "initialGas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "51576:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 410,
                          "src": "51576:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "51576:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1956,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "51603:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                            "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                          }
                        },
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flags",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1810,
                        "src": "51603:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1958,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "51615:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "51615:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "51615:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1949,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1829,
                        "src": "51556:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                          "typeString": "contract IAggregationExecutor"
                        }
                      },
                      "id": 1950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1321,
                      "src": "51556:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_IChi_$1307_$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view external returns (contract IChi,uint256)"
                      }
                    },
                    "id": 1961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51556:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IChi_$1307_$_t_uint256_$",
                      "typeString": "tuple(contract IChi,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "51527:104:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1963,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1948,
                      "src": "51645:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "51654:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "51645:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1975,
                  "nodeType": "IfStatement",
                  "src": "51641:87:0",
                  "trueBody": {
                    "id": 1974,
                    "nodeType": "Block",
                    "src": "51657:71:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1966,
                            "name": "chiSpent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "51671:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1969,
                                "name": "chiSource",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1848,
                                "src": "51699:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1970,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1948,
                                "src": "51710:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1967,
                                "name": "chi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1946,
                                "src": "51682:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IChi_$1307",
                                  "typeString": "contract IChi"
                                }
                              },
                              "id": 1968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "freeFromUpTo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1306,
                              "src": "51682:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) external returns (uint256)"
                              }
                            },
                            "id": 1971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51682:35:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "51671:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1973,
                        "nodeType": "ExpressionStatement",
                        "src": "51671:46:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1976,
                      "name": "gasLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "51737:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1977,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "51747:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "51747:9:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "51737:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "51737:19:0"
                }
              ]
            },
            "functionSelector": "6c4a483e",
            "id": 1982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "discountedSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "50420:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                    "typeString": "contract IAggregationExecutor"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "IAggregationExecutor",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1331,
                    "src": "50420:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                      "typeString": "contract IAggregationExecutor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "50457:29:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                    "typeString": "struct AggregationRouterV3.SwapDescription"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "SwapDescription",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1813,
                    "src": "50457:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapDescription_$1813_storage_ptr",
                      "typeString": "struct AggregationRouterV3.SwapDescription"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "50496:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "50496:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50410:111:0"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "returnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "50572:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50572:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "gasLeft",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "50594:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50594:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "chiSpent",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "50611:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50611:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50571:57:0"
            },
            "scope": 2278,
            "src": "50387:1376:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2247,
              "nodeType": "Block",
              "src": "51987:2115:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1996,
                            "name": "desc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1986,
                            "src": "52005:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                              "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                            }
                          },
                          "id": 1997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minReturnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1808,
                          "src": "52005:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "52028:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "52005:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e2072657475726e2073686f756c64206e6f742062652030",
                        "id": 2000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "52031:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_854277779ddeb99ad0eb4ee788b188fc9274736a9d4256e147e4b97e2043d535",
                          "typeString": "literal_string \"Min return should not be 0\""
                        },
                        "value": "Min return should not be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_854277779ddeb99ad0eb4ee788b188fc9274736a9d4256e147e4b97e2043d535",
                          "typeString": "literal_string \"Min return should not be 0\""
                        }
                      ],
                      "id": 1995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "51997:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51997:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "51997:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2004,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1988,
                            "src": "52078:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "52078:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "52092:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "52078:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646174612073686f756c64206265206e6f74207a65726f",
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "52095:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a57d5396b1dd370778ffe28b794ca61ee43457e2403884502ed8cf372dd22ee6",
                          "typeString": "literal_string \"data should be not zero\""
                        },
                        "value": "data should be not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a57d5396b1dd370778ffe28b794ca61ee43457e2403884502ed8cf372dd22ee6",
                          "typeString": "literal_string \"data should be not zero\""
                        }
                      ],
                      "id": 2003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "52070:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "52070:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2010,
                  "nodeType": "ExpressionStatement",
                  "src": "52070:51:0"
                },
                {
                  "assignments": [
                    2012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2012,
                      "mutability": "mutable",
                      "name": "flags",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "52132:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52132:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2015,
                  "initialValue": {
                    "expression": {
                      "id": 2013,
                      "name": "desc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "52148:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                      }
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "flags",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1810,
                    "src": "52148:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52132:26:0"
                },
                {
                  "assignments": [
                    2017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "mutability": "mutable",
                      "name": "srcToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "52168:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$207",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2016,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 207,
                        "src": "52168:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2020,
                  "initialValue": {
                    "expression": {
                      "id": 2018,
                      "name": "desc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "52186:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                      }
                    },
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "srcToken",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1798,
                    "src": "52186:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52168:31:0"
                },
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "mutability": "mutable",
                      "name": "dstToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "52209:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$207",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 207,
                        "src": "52209:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2025,
                  "initialValue": {
                    "expression": {
                      "id": 2023,
                      "name": "desc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "52227:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dstToken",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1800,
                    "src": "52227:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52209:31:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2026,
                        "name": "flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "52255:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 2027,
                        "name": "_REQUIRES_EXTRA_ETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1787,
                        "src": "52263:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "52255:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "52286:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "52255:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2062,
                    "nodeType": "Block",
                    "src": "52398:104:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2048,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "52420:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "52420:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "components": [
                                  {
                                    "condition": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 2050,
                                          "name": "srcToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2017,
                                          "src": "52434:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$207",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2051,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isETH",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1096,
                                        "src": "52434:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$207_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$207_$",
                                          "typeString": "function (contract IERC20) pure returns (bool)"
                                        }
                                      },
                                      "id": 2052,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "52434:16:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "hexValue": "30",
                                      "id": 2055,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "52467:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "id": 2056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "52434:34:0",
                                    "trueExpression": {
                                      "expression": {
                                        "id": 2053,
                                        "name": "desc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1986,
                                        "src": "52453:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                          "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                        }
                                      },
                                      "id": 2054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1806,
                                      "src": "52453:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2057,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "52433:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "52420:49:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206d73672e76616c7565",
                              "id": 2059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "52471:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_451a76ad253fd02f08bdcebbcd53536ea422d4cb50c40883eee65396d269d3b6",
                                "typeString": "literal_string \"Invalid msg.value\""
                              },
                              "value": "Invalid msg.value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_451a76ad253fd02f08bdcebbcd53536ea422d4cb50c40883eee65396d269d3b6",
                                "typeString": "literal_string \"Invalid msg.value\""
                              }
                            ],
                            "id": 2047,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "52412:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52412:79:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2061,
                        "nodeType": "ExpressionStatement",
                        "src": "52412:79:0"
                      }
                    ]
                  },
                  "id": 2063,
                  "nodeType": "IfStatement",
                  "src": "52251:251:0",
                  "trueBody": {
                    "id": 2046,
                    "nodeType": "Block",
                    "src": "52289:103:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2032,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "52311:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "52311:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "components": [
                                  {
                                    "condition": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 2034,
                                          "name": "srcToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2017,
                                          "src": "52324:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$207",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2035,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isETH",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1096,
                                        "src": "52324:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$207_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$207_$",
                                          "typeString": "function (contract IERC20) pure returns (bool)"
                                        }
                                      },
                                      "id": 2036,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "52324:16:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "hexValue": "30",
                                      "id": 2039,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "52357:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "id": 2040,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "52324:34:0",
                                    "trueExpression": {
                                      "expression": {
                                        "id": 2037,
                                        "name": "desc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1986,
                                        "src": "52343:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                          "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                        }
                                      },
                                      "id": 2038,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1806,
                                      "src": "52343:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2041,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "52323:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "52311:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206d73672e76616c7565",
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "52361:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_451a76ad253fd02f08bdcebbcd53536ea422d4cb50c40883eee65396d269d3b6",
                                "typeString": "literal_string \"Invalid msg.value\""
                              },
                              "value": "Invalid msg.value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_451a76ad253fd02f08bdcebbcd53536ea422d4cb50c40883eee65396d269d3b6",
                                "typeString": "literal_string \"Invalid msg.value\""
                              }
                            ],
                            "id": 2031,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "52303:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52303:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2045,
                        "nodeType": "ExpressionStatement",
                        "src": "52303:78:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2064,
                        "name": "flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "52516:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 2065,
                        "name": "_SHOULD_CLAIM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "52524:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "52516:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "52541:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "52516:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2097,
                  "nodeType": "IfStatement",
                  "src": "52512:244:0",
                  "trueBody": {
                    "id": 2096,
                    "nodeType": "Block",
                    "src": "52544:212:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "52566:17:0",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2070,
                                    "name": "srcToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2017,
                                    "src": "52567:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$207",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isETH",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1096,
                                  "src": "52567:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$207_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$207_$",
                                    "typeString": "function (contract IERC20) pure returns (bool)"
                                  }
                                },
                                "id": 2072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "52567:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d20746f6b656e20697320455448",
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "52585:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_060dcda1dda692db4ceb47833a6172a070950331454021c44b07d79872597515",
                                "typeString": "literal_string \"Claim token is ETH\""
                              },
                              "value": "Claim token is ETH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_060dcda1dda692db4ceb47833a6172a070950331454021c44b07d79872597515",
                                "typeString": "literal_string \"Claim token is ETH\""
                              }
                            ],
                            "id": 2069,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "52558:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52558:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2076,
                        "nodeType": "ExpressionStatement",
                        "src": "52558:48:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2078,
                              "name": "srcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "52628:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 2079,
                                "name": "desc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1986,
                                "src": "52638:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                  "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                }
                              },
                              "id": 2080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1806,
                              "src": "52638:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2081,
                                "name": "desc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1986,
                                "src": "52651:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                  "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                }
                              },
                              "id": 2082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "permit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1812,
                              "src": "52651:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 2077,
                            "name": "_permit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1663,
                            "src": "52620:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,bytes calldata)"
                            }
                          },
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52620:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2084,
                        "nodeType": "ExpressionStatement",
                        "src": "52620:43:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2088,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "52703:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "52703:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 2090,
                                "name": "desc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1986,
                                "src": "52715:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                  "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                }
                              },
                              "id": 2091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "srcReceiver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1802,
                              "src": "52715:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2092,
                                "name": "desc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1986,
                                "src": "52733:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                  "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                }
                              },
                              "id": 2093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1806,
                              "src": "52733:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2085,
                              "name": "srcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "52677:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 911,
                            "src": "52677:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$207_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52677:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2095,
                        "nodeType": "ExpressionStatement",
                        "src": "52677:68:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2099,
                      "mutability": "mutable",
                      "name": "dstReceiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "52766:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2098,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "52766:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2113,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2100,
                              "name": "desc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1986,
                              "src": "52789:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dstReceiver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1804,
                            "src": "52789:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "52817:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "52809:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2102,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "52809:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "52809:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "52789:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2107,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "52788:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 2110,
                        "name": "desc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1986,
                        "src": "52836:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                          "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                        }
                      },
                      "id": 2111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dstReceiver",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1804,
                      "src": "52836:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "52788:64:0",
                    "trueExpression": {
                      "expression": {
                        "id": 2108,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "52823:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "52823:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52766:86:0"
                },
                {
                  "assignments": [
                    2115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2115,
                      "mutability": "mutable",
                      "name": "initialSrcBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "52862:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52862:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2129,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2116,
                              "name": "flags",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2012,
                              "src": "52891:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "id": 2117,
                              "name": "_PARTIAL_FILL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "52899:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "52891:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "52916:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "52891:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2121,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "52890:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "52957:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "52890:68:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "52943:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "52943:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 2122,
                          "name": "srcToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "52921:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$207",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uniBalanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1120,
                        "src": "52921:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$207_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$207_$",
                          "typeString": "function (contract IERC20,address) view returns (uint256)"
                        }
                      },
                      "id": 2126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "52921:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52862:96:0"
                },
                {
                  "assignments": [
                    2131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2131,
                      "mutability": "mutable",
                      "name": "initialDstBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "52968:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52968:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2134,
                        "name": "dstReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2099,
                        "src": "53018:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2132,
                        "name": "dstToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "52996:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uniBalanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1120,
                      "src": "52996:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$207_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$207_$",
                        "typeString": "function (contract IERC20,address) view returns (uint256)"
                      }
                    },
                    "id": 2135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "52996:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52968:62:0"
                },
                {
                  "id": 2170,
                  "nodeType": "Block",
                  "src": "53041:337:0",
                  "statements": [
                    {
                      "assignments": [
                        2138,
                        2140
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2138,
                          "mutability": "mutable",
                          "name": "success",
                          "nodeType": "VariableDeclaration",
                          "scope": 2170,
                          "src": "53119:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2137,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "53119:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2140,
                          "mutability": "mutable",
                          "name": "result",
                          "nodeType": "VariableDeclaration",
                          "scope": 2170,
                          "src": "53133:19:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2139,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "53133:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2157,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 2151,
                                    "name": "caller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1984,
                                    "src": "53212:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                                      "typeString": "contract IAggregationExecutor"
                                    }
                                  },
                                  "id": 2152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "callBytes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1330,
                                  "src": "53212:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) payable external"
                                  }
                                },
                                "id": 2153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "53212:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 2154,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1988,
                                "src": "53239:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "id": 2149,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "53195:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "53195:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "53195:49:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2143,
                                  "name": "caller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1984,
                                  "src": "53164:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                                    "typeString": "contract IAggregationExecutor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                                    "typeString": "contract IAggregationExecutor"
                                  }
                                ],
                                "id": 2142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "53156:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2141,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "53156:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "53156:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "53156:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "id": 2146,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "53184:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "53184:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "53156:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "53156:89:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "53118:127:0"
                    },
                    {
                      "condition": {
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "53263:8:0",
                        "subExpression": {
                          "id": 2158,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2138,
                          "src": "53264:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2169,
                      "nodeType": "IfStatement",
                      "src": "53259:109:0",
                      "trueBody": {
                        "id": 2168,
                        "nodeType": "Block",
                        "src": "53273:95:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2163,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2140,
                                      "src": "53323:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "hexValue": "63616c6c4279746573206661696c65643a20",
                                      "id": 2164,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "53331:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_1ccb682edfffada7fca4947e613bee4835c49cf1d1fcbf40eba1faf66b86e4ba",
                                        "typeString": "literal_string \"callBytes failed: \""
                                      },
                                      "value": "callBytes failed: "
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_1ccb682edfffada7fca4947e613bee4835c49cf1d1fcbf40eba1faf66b86e4ba",
                                        "typeString": "literal_string \"callBytes failed: \""
                                      }
                                    ],
                                    "expression": {
                                      "id": 2161,
                                      "name": "RevertReasonParser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1569,
                                      "src": "53298:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_RevertReasonParser_$1569_$",
                                        "typeString": "type(library RevertReasonParser)"
                                      }
                                    },
                                    "id": 2162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "parse",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1461,
                                    "src": "53298:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (bytes memory,string memory) pure returns (string memory)"
                                    }
                                  },
                                  "id": 2165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "53298:54:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2160,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "53291:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 2166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "53291:62:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2167,
                            "nodeType": "ExpressionStatement",
                            "src": "53291:62:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    2172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2172,
                      "mutability": "mutable",
                      "name": "spentAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "53388:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "53388:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2175,
                  "initialValue": {
                    "expression": {
                      "id": 2173,
                      "name": "desc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "53410:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                      }
                    },
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1806,
                    "src": "53410:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "53388:33:0"
                },
                {
                  "expression": {
                    "id": 2184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2176,
                      "name": "returnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "53431:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2182,
                          "name": "initialDstBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2131,
                          "src": "53485:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2179,
                              "name": "dstReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2099,
                              "src": "53468:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2177,
                              "name": "dstToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "53446:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uniBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1120,
                            "src": "53446:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$207_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$207_$",
                              "typeString": "function (contract IERC20,address) view returns (uint256)"
                            }
                          },
                          "id": 2180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "53446:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 410,
                        "src": "53446:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "53446:57:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "53431:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2185,
                  "nodeType": "ExpressionStatement",
                  "src": "53431:72:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2186,
                        "name": "flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "53518:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 2187,
                        "name": "_PARTIAL_FILL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "53526:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "53518:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "53543:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "53518:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2230,
                    "nodeType": "Block",
                    "src": "53788:101:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2223,
                                "name": "returnAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1991,
                                "src": "53810:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2224,
                                  "name": "desc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1986,
                                  "src": "53826:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                    "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                  }
                                },
                                "id": 2225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "minReturnAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1808,
                                "src": "53826:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "53810:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657475726e20616d6f756e74206973206e6f7420656e6f756768",
                              "id": 2227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "53848:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80eb608a741e85e55a2d17aa331ec7d0fb1f45f66f6a4d3a8d9674737c5774d9",
                                "typeString": "literal_string \"Return amount is not enough\""
                              },
                              "value": "Return amount is not enough"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80eb608a741e85e55a2d17aa331ec7d0fb1f45f66f6a4d3a8d9674737c5774d9",
                                "typeString": "literal_string \"Return amount is not enough\""
                              }
                            ],
                            "id": 2222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "53802:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "53802:76:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2229,
                        "nodeType": "ExpressionStatement",
                        "src": "53802:76:0"
                      }
                    ]
                  },
                  "id": 2231,
                  "nodeType": "IfStatement",
                  "src": "53514:375:0",
                  "trueBody": {
                    "id": 2221,
                    "nodeType": "Block",
                    "src": "53546:236:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2191,
                            "name": "spentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2172,
                            "src": "53560:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2200,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "53635:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2201,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "53635:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2198,
                                    "name": "srcToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2017,
                                    "src": "53613:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$207",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "uniBalanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1120,
                                  "src": "53613:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$207_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$207_$",
                                    "typeString": "function (contract IERC20,address) view returns (uint256)"
                                  }
                                },
                                "id": 2202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "53613:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2194,
                                      "name": "desc",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1986,
                                      "src": "53596:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                      }
                                    },
                                    "id": 2195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1806,
                                    "src": "53596:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2192,
                                    "name": "initialSrcBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2115,
                                    "src": "53574:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 388,
                                  "src": "53574:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "53574:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 410,
                              "src": "53574:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "53574:73:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "53560:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2205,
                        "nodeType": "ExpressionStatement",
                        "src": "53560:87:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2209,
                                      "name": "desc",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1986,
                                      "src": "53686:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                      }
                                    },
                                    "id": 2210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1806,
                                    "src": "53686:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2207,
                                    "name": "returnAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1991,
                                    "src": "53669:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 444,
                                  "src": "53669:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "53669:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2215,
                                    "name": "spentAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2172,
                                    "src": "53727:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 2212,
                                      "name": "desc",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1986,
                                      "src": "53702:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                                        "typeString": "struct AggregationRouterV3.SwapDescription calldata"
                                      }
                                    },
                                    "id": 2213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "minReturnAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1808,
                                    "src": "53702:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 444,
                                  "src": "53702:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "53702:37:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "53669:70:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657475726e20616d6f756e74206973206e6f7420656e6f756768",
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "53741:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80eb608a741e85e55a2d17aa331ec7d0fb1f45f66f6a4d3a8d9674737c5774d9",
                                "typeString": "literal_string \"Return amount is not enough\""
                              },
                              "value": "Return amount is not enough"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80eb608a741e85e55a2d17aa331ec7d0fb1f45f66f6a4d3a8d9674737c5774d9",
                                "typeString": "literal_string \"Return amount is not enough\""
                              }
                            ],
                            "id": 2206,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "53661:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "53661:110:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2220,
                        "nodeType": "ExpressionStatement",
                        "src": "53661:110:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2233,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "53925:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "53925:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2235,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "53949:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2236,
                        "name": "dstToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "53971:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2237,
                        "name": "dstReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2099,
                        "src": "53993:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2238,
                        "name": "spentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "54018:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2239,
                        "name": "returnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "54043:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2232,
                      "name": "Swapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "53904:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$207_$_t_contract$_IERC20_$207_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract IERC20,address,uint256,uint256)"
                      }
                    },
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "53904:161:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2241,
                  "nodeType": "EmitStatement",
                  "src": "53899:166:0"
                },
                {
                  "expression": {
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2242,
                      "name": "gasLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "54076:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2243,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "54086:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "54086:9:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "54076:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "54076:19:0"
                }
              ]
            },
            "functionSelector": "7c025200",
            "id": 2248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "mutable",
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "51792:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                    "typeString": "contract IAggregationExecutor"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "IAggregationExecutor",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1331,
                    "src": "51792:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAggregationExecutor_$1331",
                      "typeString": "contract IAggregationExecutor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "51829:29:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapDescription_$1813_calldata_ptr",
                    "typeString": "struct AggregationRouterV3.SwapDescription"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "SwapDescription",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1813,
                    "src": "51829:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapDescription_$1813_storage_ptr",
                      "typeString": "struct AggregationRouterV3.SwapDescription"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1988,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "51868:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1987,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "51868:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "51782:111:0"
            },
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "returnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "51944:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "51944:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "gasLeft",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "51966:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "51966:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "51943:39:0"
            },
            "scope": 2278,
            "src": "51769:2333:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2265,
              "nodeType": "Block",
              "src": "54178:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "54206:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "54206:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2262,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "54218:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2257,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2250,
                        "src": "54188:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$207",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uniTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1159,
                      "src": "54188:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$207_$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$207_$",
                        "typeString": "function (contract IERC20,address payable,uint256)"
                      }
                    },
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "54188:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2264,
                  "nodeType": "ExpressionStatement",
                  "src": "54188:37:0"
                }
              ]
            },
            "functionSelector": "78e3214f",
            "id": 2266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2255,
                "modifierName": {
                  "id": 2254,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 79,
                  "src": "54168:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "54168:9:0"
              }
            ],
            "name": "rescueFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2266,
                  "src": "54129:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$207",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 207,
                    "src": "54129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$207",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2266,
                  "src": "54143:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "54143:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54128:30:0"
            },
            "returnParameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54178:0:0"
            },
            "scope": 2278,
            "src": "54108:124:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2276,
              "nodeType": "Block",
              "src": "54276:41:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "54299:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "54299:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2271,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "54286:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "54286:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "54286:24:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 2277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2269,
                "modifierName": {
                  "id": 2268,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 79,
                  "src": "54266:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "54266:9:0"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54254:2:0"
            },
            "returnParameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54276:0:0"
            },
            "scope": 2278,
            "src": "54238:79:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2279,
        "src": "49519:4800:0"
      }
    ],
    "src": "10387:43932:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6123368061007d6000396000f3fe60806040526004361061008a5760003560e01c80637c025200116100595780637c0252001461013f57806383197ef0146101605780638da5cb5b14610175578063a1251d7514610197578063f2fde38b146101aa576100ba565b80632e95b6c8146100bf5780636c4a483e146100e8578063715018a61461010a57806378e3214f1461011f576100ba565b366100ba57333214156100b85760405162461bcd60e51b81526004016100af90611ed0565b60405180910390fd5b005b600080fd5b6100d26100cd3660046119ef565b6101ca565b6040516100df9190611c71565b60405180910390f35b6100fb6100f6366004611919565b610521565b6040516100df9392919061221c565b34801561011657600080fd5b506100b861080c565b34801561012b57600080fd5b506100b861013a3660046119c4565b610895565b61015261014d366004611919565b6108ec565b6040516100df92919061220e565b34801561016c57600080fd5b506100b8610cd0565b34801561018157600080fd5b5061018a610d12565b6040516100df9190611c7a565b6100d26101a5366004611a57565b610d21565b3480156101b657600080fd5b506100b86101c53660046118dd565b610d48565b60006102a0565b3d6000803e3d6000fd5b62461bcd60e51b600052600160e51b60205280604052816000fd5b6000630240bc6b60e21b8252604082600484875afa610217576102176101d1565b81516020830151861561022657905b63022c0d9f60e01b8452878502633b9aca00929092028201910204905084801561025c578160048401526000602484015261026a565b600060048401528160248401525b50866044830152608060648301526000608483015260008060a4846000885af1610296576102966101d1565b9695505050505050565b60405160c0810160405260046064350180356020820191508060200282019050813589600081146103325734156102f1576102f160557111696e76616c6964206d73672e76616c756560581b6101db565b6323b872dd60e01b85523360048601526001600160a01b038216602486015289604486015260008060648760008f5af161032d5761032d6101d1565b6103d7565b348a146103595761035960557111696e76616c6964206d73672e76616c756560581b6101db565b630d0e30db60e41b85526000806004878d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161038d5761038d6101d1565b63a9059cbb60e01b85526001600160a01b0382166004860152896024860152600080604487600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16103d7576103d76101d1565b50889450602083015b8281101561042857803561041c6001600160a01b03821663ffffffff60a01b851660a01c600160ff1b86166001600160a01b0387168b8b6101f6565b965091506020016103e0565b50600160fe1b811680156104b75761045f3063ffffffff60a01b841660a01c600160ff1b85166001600160a01b0386168a8a6101f6565b9550632e1a7d4d60e01b8552856004860152600080602487600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161049c5761049c6101d1565b60008060008089335af16104b2576104b26101d1565b6104e3565b6104e03363ffffffff60a01b841660a01c600160ff1b85166001600160a01b0386168a8a6101f6565b95505b50505050508381101561051857610518605a7c164d696e2072657475726e206e6f7420726561636865640000000000006101db565b95945050505050565b6000806000805a9050600060c08801356008161561054057503361056c565b60c08801356010161561055457503261056c565b60405162461bcd60e51b81526004016100af90611fa6565b600080306001600160a01b0316637c02520060e01b8c8c8c8c6040516024016105989493929190611d1f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516105d69190611b80565b600060405180830381855af49150503d8060008114610611576040519150601f19603f3d011682016040523d82523d6000602084013e610616565b606091505b5091509150811561063d57808060200190518101906106359190611b02565b5096506106d7565b34156106715760405133903480156108fc02916000818181858888f1935050505015801561066f573d6000803e3d6000fd5b505b7f08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa6106c1826040518060400160405280600d81526020016c029bbb0b8103330b4b632b21d1609d1b815250610e08565b6040516106ce9190611df4565b60405180910390a15b6000808c6001600160a01b0316631d97832e6106f45a8990611021565b8e60c0013560003690506040518463ffffffff1660e01b815260040161071c9392919061221c565b604080518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611997565b909250905080156107f95760405163079d229f60e01b81526001600160a01b0383169063079d229f906107a49088908590600401611ce2565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190611aea565b96505b5a97505050505050509450945094915050565b610814611049565b6001600160a01b0316610825610d12565b6001600160a01b03161461084b5760405162461bcd60e51b81526004016100af9061208c565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61089d611049565b6001600160a01b03166108ae610d12565b6001600160a01b0316146108d45760405162461bcd60e51b81526004016100af9061208c565b6108e86001600160a01b038316338361104d565b5050565b60008060008560a00135116109135760405162461bcd60e51b81526004016100af90612014565b826109305760405162461bcd60e51b81526004016100af906120f8565b60c0850135600061094460208801886118dd565b905060006109586040890160208a016118dd565b905060028316156109a957610975826001600160a01b03166110f8565b610980576000610986565b87608001355b34116109a45760405162461bcd60e51b81526004016100af90611efe565b6109ea565b6109bb826001600160a01b03166110f8565b6109c65760006109cc565b87608001355b34146109ea5760405162461bcd60e51b81526004016100af90611efe565b6004831615610a6757610a05826001600160a01b03166110f8565b15610a225760405162461bcd60e51b81526004016100af90611e27565b610a3d8260808a0135610a3860e08c018c612232565b611134565b610a6733610a5160608b0160408c016118dd565b6001600160a01b038516919060808c01356112e7565b600080610a7a60808b0160608c016118dd565b6001600160a01b031614610a9d57610a9860808a0160608b016118dd565b610a9f565b335b9050600060018516610ab2576000610ac5565b610ac56001600160a01b0385163361133f565b90506000610adc6001600160a01b0385168461133f565b90506000808d6001600160a01b03163463d9c4535760e01b8e8e604051602001610b0893929190611b5c565b60408051601f1981840301815290829052610b2291611b80565b60006040518083038185875af1925050503d8060008114610b5f576040519150601f19603f3d011682016040523d82523d6000602084013e610b64565b606091505b509150915081610bbb57610ba28160405180604001604052806012815260200171031b0b636213cba32b9903330b4b632b21d160751b815250610e08565b60405162461bcd60e51b81526004016100af9190611df4565b505060808b0135610bdf82610bd96001600160a01b0388168761133f565b90611021565b98506001871615610c5857610c17610c006001600160a01b0388163361133f565b610bd98e60800135866113e390919063ffffffff16565b9050610c2760a08d01358261140f565b610c358a60808f013561140f565b1015610c535760405162461bcd60e51b81526004016100af90611fdd565b610c7c565b8b60a00135891015610c7c5760405162461bcd60e51b81526004016100af90611fdd565b7fd6d4f5681c246c9f42c203e287975af1601f8df8035a9251f79aab5c8f09e2f833878787858e604051610cb596959493929190611ca8565b60405180910390a15a97505050505050505094509492505050565b610cd8611049565b6001600160a01b0316610ce9610d12565b6001600160a01b031614610d0f5760405162461bcd60e51b81526004016100af9061208c565b33ff5b6000546001600160a01b031690565b6000610d2f88888585611134565b610d3c88888888886101ca565b98975050505050505050565b610d50611049565b6001600160a01b0316610d61610d12565b6001600160a01b031614610d875760405162461bcd60e51b81526004016100af9061208c565b6001600160a01b038116610dad5760405162461bcd60e51b81526004016100af90611e53565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60606044835110158015610e3b575082600081518110610e2457fe5b6020910101516001600160f81b031916600160fb1b145b8015610e66575082600181518110610e4f57fe5b6020910101516001600160f81b03191660c360f81b145b8015610e91575082600281518110610e7a57fe5b6020910101516001600160f81b031916607960f81b145b8015610ebc575082600381518110610ea557fe5b6020910101516001600160f81b031916600560fd1b145b15610f18576060604484019050805160440184511015610eee5760405162461bcd60e51b81526004016100af9061212f565b8281604051602001610f01929190611c3c565b60405160208183030381529060405291505061101b565b82516024148015610f48575082600081518110610f3157fe5b6020910101516001600160f81b031916602760f91b145b8015610f73575082600181518110610f5c57fe5b6020910101516001600160f81b031916600960fb1b145b8015610f9e575082600281518110610f8757fe5b6020910101516001600160f81b031916607b60f81b145b8015610fc9575082600381518110610fb257fe5b6020910101516001600160f81b031916607160f81b145b15610fee57602483015182610fdd82611449565b604051602001610f01929190611b9c565b81610ff88461146f565b604051602001611009929190611beb565b60405160208183030381529060405290505b92915050565b6000828211156110435760405162461bcd60e51b81526004016100af90611f29565b50900390565b3390565b80156110f35761105c836110f8565b1561109d576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015611097573d6000803e3d6000fd5b506110f3565b6110f38363a9059cbb60e01b84846040516024016110bc929190611ce2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115ee565b505050565b60006001600160a01b038216158061112c57506001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee145b90505b919050565b60e08114156112e157600080856001600160a01b031663d505accf60e01b858560405160200161116693929190611b5c565b60408051601f198184030181529082905261118091611b80565b6000604051808303816000865af19150503d80600081146111bd576040519150601f19603f3d011682016040523d82523d6000602084013e6111c2565b606091505b5091509150816112de576000611204826040518060400160405280601481526020017302832b936b4ba1031b0b636103330b4b632b21d160651b815250610e08565b905085876001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b8152600401611235929190611c8e565b60206040518083038186803b15801561124d57600080fd5b505afa158015611261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112859190611aea565b10156112a5578060405162461bcd60e51b81526004016100af9190611df4565b7f08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa816040516112d49190611df4565b60405180910390a1505b50505b50505050565b6112e1846323b872dd60e01b85858560405160240161130893929190611cfb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116a4565b600061134a836110f8565b1561136057506001600160a01b0381163161101b565b6040516370a0823160e01b81526001600160a01b038416906370a082319061138c908590600401611c7a565b60206040518083038186803b1580156113a457600080fd5b505afa1580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dc9190611aea565b905061101b565b6000828201838110156114085760405162461bcd60e51b81526004016100af90611e99565b9392505050565b60008261141e5750600061101b565b8282028284828161142b57fe5b04146114085760405162461bcd60e51b81526004016100af9061204b565b606061112c8260405160200161145f9190611c71565b6040516020818303038152906040525b80516060906f181899199a1a9b1b9c1cb0b131b232b360811b9060009060029081020167ffffffffffffffff811180156114a857600080fd5b506040519080825280601f01601f1916602001820160405280156114d3576020820181803683370190505b509050600360fc1b816000815181106114e857fe5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061151157fe5b60200101906001600160f81b031916908160001a90535060005b84518110156115e65782600486838151811061154357fe5b01602001516001600160f81b031916901c60f81c6010811061156157fe5b1a60f81b82826002026002018151811061157757fe5b60200101906001600160f81b031916908160001a9053508285828151811061159b57fe5b60209101015160f81c600f16601081106115b157fe5b1a60f81b8282600202600301815181106115c757fe5b60200101906001600160f81b031916908160001a90535060010161152b565b509392505050565b600080836001600160a01b0316836040516116099190611b80565b6000604051808303816000865af19150503d8060008114611646576040519150601f19603f3d011682016040523d82523d6000602084013e61164b565b606091505b50915091508161166d5760405162461bcd60e51b81526004016100af9061215e565b8051156112e1578080602001905181019061168891906118f9565b6112e15760405162461bcd60e51b81526004016100af906120c1565b60006116f9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117339092919063ffffffff16565b8051909150156110f3578080602001905181019061171791906118f9565b6110f35760405162461bcd60e51b81526004016100af906121c4565b6060611742848460008561174a565b949350505050565b60608247101561176c5760405162461bcd60e51b81526004016100af90611f60565b6117758561180a565b6117915760405162461bcd60e51b81526004016100af9061218d565b600080866001600160a01b031685876040516117ad9190611b80565b60006040518083038185875af1925050503d80600081146117ea576040519150601f19603f3d011682016040523d82523d6000602084013e6117ef565b606091505b50915091506117ff828286611810565b979650505050505050565b3b151590565b6060831561181f575081611408565b82511561182f5782518084602001fd5b8160405162461bcd60e51b81526004016100af9190611df4565b803561112f816122e8565b60008083601f840112611865578182fd5b50813567ffffffffffffffff81111561187c578182fd5b602083019150836020808302850101111561189657600080fd5b9250929050565b60008083601f8401126118ae578182fd5b50813567ffffffffffffffff8111156118c5578182fd5b60208301915083602082850101111561189657600080fd5b6000602082840312156118ee578081fd5b8135611408816122e8565b60006020828403121561190a578081fd5b81518015158114611408578182fd5b6000806000806060858703121561192e578283fd5b8435611939816122e8565b9350602085013567ffffffffffffffff80821115611955578485fd5b908601906101008289031215611969578485fd5b9093506040860135908082111561197e578384fd5b5061198b8782880161189d565b95989497509550505050565b600080604083850312156119a9578182fd5b82516119b4816122e8565b6020939093015192949293505050565b600080604083850312156119d6578182fd5b82356119e1816122e8565b946020939093013593505050565b600080600080600060808688031215611a06578081fd5b8535611a11816122e8565b94506020860135935060408601359250606086013567ffffffffffffffff811115611a3a578182fd5b611a4688828901611854565b969995985093965092949392505050565b600080600080600080600060a0888a031215611a71578182fd5b8735611a7c816122e8565b96506020880135955060408801359450606088013567ffffffffffffffff80821115611aa6578384fd5b611ab28b838c01611854565b909650945060808a0135915080821115611aca578384fd5b50611ad78a828b0161189d565b989b979a50959850939692959293505050565b600060208284031215611afb578081fd5b5051919050565b60008060408385031215611b14578182fd5b505080516020909101519092909150565b6001600160a01b03169052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6001600160e01b031984168152600082846004840137910160040190815292915050565b60008251611b928184602087016122bc565b9190910192915050565b60008351611bae8184602088016122bc565b650a0c2dcd2c6560d31b9083019081528351611bd18160068401602088016122bc565b602960f81b60069290910191820152600701949350505050565b60008351611bfd8184602088016122bc565b670aadcd6dcdeeedc560c31b9083019081528351611c228160088401602088016122bc565b602960f81b60089290910191820152600901949350505050565b60008351611c4e8184602088016122bc565b6508ae4e4dee4560d31b9083019081528351611bd18160068401602088016122bc565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0396871681529486166020860152928516604085015293166060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0385168152606060208201819052600090611d4b908301611d4687611849565b611b25565b611d5760208601611849565b611d646080840182611b25565b50611d7160408601611849565b611d7e60a0840182611b25565b50611d8b60608601611849565b611d9860c0840182611b25565b50608085013560e083015261010060a08601358184015260c0860135610120840152611dc760e0870187612277565b82610140860152611ddd61016086018284611b32565b9250505082810360408401526117ff818587611b32565b6000602082528251806020840152611e138160408501602087016122bc565b601f01601f19169190910160400192915050565b602080825260129082015271086d8c2d2da40e8ded6cadc40d2e6408aa8960731b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601490820152731155120819195c1bdcda5d081c995a9958dd195960621b604082015260600190565b602080825260119082015270496e76616c6964206d73672e76616c756560781b604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526018908201527f496e636f727265637420434849206275726e20666c6167730000000000000000604082015260600190565b6020808252601b908201527f52657475726e20616d6f756e74206973206e6f7420656e6f7567680000000000604082015260600190565b6020808252601a908201527f4d696e2072657475726e2073686f756c64206e6f742062652030000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f4552433230206f7065726174696f6e20646964206e6f74207375636365656400604082015260600190565b60208082526017908201527f646174612073686f756c64206265206e6f74207a65726f000000000000000000604082015260600190565b60208082526015908201527424b73b30b634b2103932bb32b93a103932b0b9b7b760591b604082015260600190565b6020808252601590820152741b1bddcb5b195d995b0818d85b1b0819985a5b1959605a1b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b6000808335601e19843603018112612248578283fd5b83018035915067ffffffffffffffff821115612262578283fd5b60200191503681900382131561189657600080fd5b6000808335601e1984360301811261228d578283fd5b830160208101925035905067ffffffffffffffff8111156122ad57600080fd5b80360383131561189657600080fd5b60005b838110156122d75781810151838201526020016122bf565b838111156112e15750506000910152565b6001600160a01b03811681146122fd57600080fd5b5056fea2646970667358221220e8d4eda14c075e3d3bf4a4025646a31c4c0d8a91b27a27005f720b77f7cf153a64736f6c63430007060033",
  "bytecodeSha1": "d84f36c3f572fc4d80633afb3bd1e7deefb0b50e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "AggregationRouterV3",
  "coverageMap": {
    "branches": {
      "0": {
        "Address._verifyCallResult": {
          "118": [
            30803,
            30810,
            false
          ],
          "119": [
            30944,
            30965,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "116": [
            28336,
            28366,
            true
          ],
          "117": [
            28427,
            28445,
            true
          ]
        },
        "AggregationRouterV3.discountedSwap": {
          "70": [
            50728,
            50767,
            false
          ],
          "71": [
            50826,
            50864,
            false
          ],
          "72": [
            51232,
            51239,
            false
          ],
          "73": [
            51350,
            51363,
            false
          ],
          "74": [
            51645,
            51655,
            false
          ]
        },
        "AggregationRouterV3.swap": {
          "75": [
            52005,
            52029,
            true
          ],
          "76": [
            52078,
            52093,
            true
          ],
          "77": [
            52255,
            52287,
            false
          ],
          "78": [
            52324,
            52340,
            true
          ],
          "79": [
            52311,
            52359,
            true
          ],
          "80": [
            52434,
            52450,
            true
          ],
          "81": [
            52420,
            52469,
            true
          ],
          "82": [
            52516,
            52542,
            false
          ],
          "83": [
            52566,
            52583,
            true
          ],
          "84": [
            53264,
            53271,
            false
          ],
          "85": [
            53518,
            53544,
            false
          ],
          "86": [
            53669,
            53739,
            true
          ],
          "87": [
            53810,
            53846,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "88": [
            12591,
            12614,
            true
          ],
          "89": [
            13393,
            13415,
            true
          ]
        },
        "Permitable._permit": {
          "104": [
            40964,
            40987,
            false
          ],
          "105": [
            41198,
            41205,
            false
          ],
          "106": [
            41326,
            41377,
            false
          ]
        },
        "RevertReasonParser.parse": {
          "90": [
            38352,
            38369,
            false
          ],
          "91": [
            38373,
            38390,
            false
          ],
          "92": [
            38394,
            38411,
            false
          ],
          "93": [
            38415,
            38432,
            false
          ],
          "94": [
            38436,
            38453,
            false
          ],
          "95": [
            39148,
            39188,
            true
          ],
          "96": [
            39381,
            39398,
            false
          ],
          "97": [
            39402,
            39419,
            false
          ],
          "98": [
            39423,
            39440,
            false
          ],
          "99": [
            39444,
            39461,
            false
          ],
          "100": [
            39465,
            39482,
            false
          ]
        },
        "SafeERC20._callOptionalReturn": {
          "114": [
            34830,
            34851,
            false
          ],
          "115": [
            34959,
            34989,
            true
          ]
        },
        "SafeMath.add": {
          "108": [
            19117,
            19123,
            true
          ]
        },
        "SafeMath.mul": {
          "109": [
            19934,
            19940,
            false
          ],
          "110": [
            19995,
            20005,
            true
          ]
        },
        "SafeMath.sub": {
          "101": [
            19536,
            19542,
            true
          ]
        },
        "UniERC20._callOptionalReturn": {
          "111": [
            36898,
            36905,
            true
          ],
          "112": [
            36946,
            36967,
            false
          ],
          "113": [
            37018,
            37048,
            true
          ]
        },
        "UniERC20.uniBalanceOf": {
          "107": [
            35577,
            35589,
            false
          ]
        },
        "UniERC20.uniTransfer": {
          "102": [
            35806,
            35816,
            false
          ],
          "103": [
            35836,
            35848,
            false
          ]
        },
        "UnoswapRouter.<receive>": {
          "69": [
            43221,
            43244,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Address._verifyCallResult": {
          "67": [
            30826,
            30843
          ],
          "68": [
            31334,
            31354
          ]
        },
        "Address.functionCall": {
          "62": [
            27277,
            27336
          ]
        },
        "Address.functionCallWithValue": {
          "63": [
            28328,
            28409
          ],
          "64": [
            28419,
            28479
          ],
          "65": [
            28634,
            28693
          ]
        },
        "Address.isContract": {
          "66": [
            24686,
            24701
          ]
        },
        "AggregationRouterV3.destroy": {
          "26": [
            54286,
            54310
          ]
        },
        "AggregationRouterV3.discountedSwap": {
          "1": [
            50783,
            50805
          ],
          "2": [
            50880,
            50901
          ],
          "3": [
            50972,
            51006
          ],
          "4": [
            51255,
            51315
          ],
          "5": [
            51383,
            51413
          ],
          "6": [
            51441,
            51506
          ],
          "7": [
            51671,
            51717
          ],
          "8": [
            51737,
            51756
          ]
        },
        "AggregationRouterV3.rescueFunds": {
          "11": [
            54188,
            54225
          ]
        },
        "AggregationRouterV3.swap": {
          "12": [
            51997,
            52060
          ],
          "13": [
            52070,
            52121
          ],
          "14": [
            52303,
            52381
          ],
          "15": [
            52412,
            52491
          ],
          "16": [
            52558,
            52606
          ],
          "17": [
            52620,
            52663
          ],
          "18": [
            52677,
            52745
          ],
          "19": [
            53291,
            53353
          ],
          "20": [
            53431,
            53503
          ],
          "21": [
            53560,
            53647
          ],
          "22": [
            53661,
            53771
          ],
          "23": [
            53802,
            53878
          ],
          "24": [
            53899,
            54065
          ],
          "25": [
            54076,
            54095
          ]
        },
        "Context._msgSender": {
          "39": [
            11032,
            11049
          ]
        },
        "Ownable.owner": {
          "27": [
            12444,
            12457
          ]
        },
        "Ownable.renounceOwnership": {
          "9": [
            13075,
            13120
          ],
          "10": [
            13130,
            13149
          ]
        },
        "Ownable.transferOwnership": {
          "30": [
            13385,
            13458
          ],
          "31": [
            13468,
            13511
          ],
          "32": [
            13521,
            13538
          ]
        },
        "Permitable._permit": {
          "43": [
            41401,
            41415
          ],
          "44": [
            41462,
            41480
          ]
        },
        "RevertReasonParser._toHex": {
          "52": [
            39968,
            40006
          ],
          "53": [
            40222,
            40234
          ],
          "54": [
            40244,
            40256
          ],
          "55": [
            40322,
            40368
          ],
          "56": [
            40382,
            40430
          ],
          "57": [
            40303,
            40306
          ],
          "58": [
            40450,
            40468
          ]
        },
        "RevertReasonParser.parse": {
          "33": [
            39140,
            39214
          ],
          "34": [
            39228,
            39290
          ],
          "35": [
            39719,
            39787
          ],
          "36": [
            39808,
            39878
          ]
        },
        "SafeERC20._callOptionalReturn": {
          "61": [
            34951,
            35036
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "45": [
            32320,
            32416
          ]
        },
        "SafeMath.add": {
          "48": [
            19109,
            19155
          ],
          "49": [
            19165,
            19173
          ]
        },
        "SafeMath.mul": {
          "50": [
            19942,
            19950
          ],
          "51": [
            19987,
            20043
          ]
        },
        "SafeMath.sub": {
          "37": [
            19528,
            19577
          ],
          "38": [
            19587,
            19599
          ]
        },
        "UniERC20._callOptionalReturn": {
          "59": [
            36890,
            36931
          ],
          "60": [
            37010,
            37084
          ]
        },
        "UniERC20.isETH": {
          "42": [
            35409,
            35465
          ]
        },
        "UniERC20.uniBalanceOf": {
          "46": [
            35605,
            35627
          ],
          "47": [
            35658,
            35689
          ]
        },
        "UniERC20.uniTransfer": {
          "40": [
            35868,
            35887
          ],
          "41": [
            35926,
            36013
          ]
        },
        "UnoswapRouter.<receive>": {
          "0": [
            43213,
            43269
          ]
        },
        "UnoswapRouter.unoswapWithPermit": {
          "28": [
            43513,
            43546
          ],
          "29": [
            43556,
            43606
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IAggregationExecutor",
    "IChi",
    "IERC20",
    "IGasDiscountExtension",
    "Ownable",
    "Permitable",
    "RevertReasonParser",
    "SafeERC20",
    "SafeMath",
    "UniERC20",
    "UnoswapRouter"
  ],
  "deployedBytecode": "60806040526004361061008a5760003560e01c80637c025200116100595780637c0252001461013f57806383197ef0146101605780638da5cb5b14610175578063a1251d7514610197578063f2fde38b146101aa576100ba565b80632e95b6c8146100bf5780636c4a483e146100e8578063715018a61461010a57806378e3214f1461011f576100ba565b366100ba57333214156100b85760405162461bcd60e51b81526004016100af90611ed0565b60405180910390fd5b005b600080fd5b6100d26100cd3660046119ef565b6101ca565b6040516100df9190611c71565b60405180910390f35b6100fb6100f6366004611919565b610521565b6040516100df9392919061221c565b34801561011657600080fd5b506100b861080c565b34801561012b57600080fd5b506100b861013a3660046119c4565b610895565b61015261014d366004611919565b6108ec565b6040516100df92919061220e565b34801561016c57600080fd5b506100b8610cd0565b34801561018157600080fd5b5061018a610d12565b6040516100df9190611c7a565b6100d26101a5366004611a57565b610d21565b3480156101b657600080fd5b506100b86101c53660046118dd565b610d48565b60006102a0565b3d6000803e3d6000fd5b62461bcd60e51b600052600160e51b60205280604052816000fd5b6000630240bc6b60e21b8252604082600484875afa610217576102176101d1565b81516020830151861561022657905b63022c0d9f60e01b8452878502633b9aca00929092028201910204905084801561025c578160048401526000602484015261026a565b600060048401528160248401525b50866044830152608060648301526000608483015260008060a4846000885af1610296576102966101d1565b9695505050505050565b60405160c0810160405260046064350180356020820191508060200282019050813589600081146103325734156102f1576102f160557111696e76616c6964206d73672e76616c756560581b6101db565b6323b872dd60e01b85523360048601526001600160a01b038216602486015289604486015260008060648760008f5af161032d5761032d6101d1565b6103d7565b348a146103595761035960557111696e76616c6964206d73672e76616c756560581b6101db565b630d0e30db60e41b85526000806004878d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161038d5761038d6101d1565b63a9059cbb60e01b85526001600160a01b0382166004860152896024860152600080604487600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16103d7576103d76101d1565b50889450602083015b8281101561042857803561041c6001600160a01b03821663ffffffff60a01b851660a01c600160ff1b86166001600160a01b0387168b8b6101f6565b965091506020016103e0565b50600160fe1b811680156104b75761045f3063ffffffff60a01b841660a01c600160ff1b85166001600160a01b0386168a8a6101f6565b9550632e1a7d4d60e01b8552856004860152600080602487600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161049c5761049c6101d1565b60008060008089335af16104b2576104b26101d1565b6104e3565b6104e03363ffffffff60a01b841660a01c600160ff1b85166001600160a01b0386168a8a6101f6565b95505b50505050508381101561051857610518605a7c164d696e2072657475726e206e6f7420726561636865640000000000006101db565b95945050505050565b6000806000805a9050600060c08801356008161561054057503361056c565b60c08801356010161561055457503261056c565b60405162461bcd60e51b81526004016100af90611fa6565b600080306001600160a01b0316637c02520060e01b8c8c8c8c6040516024016105989493929190611d1f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516105d69190611b80565b600060405180830381855af49150503d8060008114610611576040519150601f19603f3d011682016040523d82523d6000602084013e610616565b606091505b5091509150811561063d57808060200190518101906106359190611b02565b5096506106d7565b34156106715760405133903480156108fc02916000818181858888f1935050505015801561066f573d6000803e3d6000fd5b505b7f08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa6106c1826040518060400160405280600d81526020016c029bbb0b8103330b4b632b21d1609d1b815250610e08565b6040516106ce9190611df4565b60405180910390a15b6000808c6001600160a01b0316631d97832e6106f45a8990611021565b8e60c0013560003690506040518463ffffffff1660e01b815260040161071c9392919061221c565b604080518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611997565b909250905080156107f95760405163079d229f60e01b81526001600160a01b0383169063079d229f906107a49088908590600401611ce2565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190611aea565b96505b5a97505050505050509450945094915050565b610814611049565b6001600160a01b0316610825610d12565b6001600160a01b03161461084b5760405162461bcd60e51b81526004016100af9061208c565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61089d611049565b6001600160a01b03166108ae610d12565b6001600160a01b0316146108d45760405162461bcd60e51b81526004016100af9061208c565b6108e86001600160a01b038316338361104d565b5050565b60008060008560a00135116109135760405162461bcd60e51b81526004016100af90612014565b826109305760405162461bcd60e51b81526004016100af906120f8565b60c0850135600061094460208801886118dd565b905060006109586040890160208a016118dd565b905060028316156109a957610975826001600160a01b03166110f8565b610980576000610986565b87608001355b34116109a45760405162461bcd60e51b81526004016100af90611efe565b6109ea565b6109bb826001600160a01b03166110f8565b6109c65760006109cc565b87608001355b34146109ea5760405162461bcd60e51b81526004016100af90611efe565b6004831615610a6757610a05826001600160a01b03166110f8565b15610a225760405162461bcd60e51b81526004016100af90611e27565b610a3d8260808a0135610a3860e08c018c612232565b611134565b610a6733610a5160608b0160408c016118dd565b6001600160a01b038516919060808c01356112e7565b600080610a7a60808b0160608c016118dd565b6001600160a01b031614610a9d57610a9860808a0160608b016118dd565b610a9f565b335b9050600060018516610ab2576000610ac5565b610ac56001600160a01b0385163361133f565b90506000610adc6001600160a01b0385168461133f565b90506000808d6001600160a01b03163463d9c4535760e01b8e8e604051602001610b0893929190611b5c565b60408051601f1981840301815290829052610b2291611b80565b60006040518083038185875af1925050503d8060008114610b5f576040519150601f19603f3d011682016040523d82523d6000602084013e610b64565b606091505b509150915081610bbb57610ba28160405180604001604052806012815260200171031b0b636213cba32b9903330b4b632b21d160751b815250610e08565b60405162461bcd60e51b81526004016100af9190611df4565b505060808b0135610bdf82610bd96001600160a01b0388168761133f565b90611021565b98506001871615610c5857610c17610c006001600160a01b0388163361133f565b610bd98e60800135866113e390919063ffffffff16565b9050610c2760a08d01358261140f565b610c358a60808f013561140f565b1015610c535760405162461bcd60e51b81526004016100af90611fdd565b610c7c565b8b60a00135891015610c7c5760405162461bcd60e51b81526004016100af90611fdd565b7fd6d4f5681c246c9f42c203e287975af1601f8df8035a9251f79aab5c8f09e2f833878787858e604051610cb596959493929190611ca8565b60405180910390a15a97505050505050505094509492505050565b610cd8611049565b6001600160a01b0316610ce9610d12565b6001600160a01b031614610d0f5760405162461bcd60e51b81526004016100af9061208c565b33ff5b6000546001600160a01b031690565b6000610d2f88888585611134565b610d3c88888888886101ca565b98975050505050505050565b610d50611049565b6001600160a01b0316610d61610d12565b6001600160a01b031614610d875760405162461bcd60e51b81526004016100af9061208c565b6001600160a01b038116610dad5760405162461bcd60e51b81526004016100af90611e53565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60606044835110158015610e3b575082600081518110610e2457fe5b6020910101516001600160f81b031916600160fb1b145b8015610e66575082600181518110610e4f57fe5b6020910101516001600160f81b03191660c360f81b145b8015610e91575082600281518110610e7a57fe5b6020910101516001600160f81b031916607960f81b145b8015610ebc575082600381518110610ea557fe5b6020910101516001600160f81b031916600560fd1b145b15610f18576060604484019050805160440184511015610eee5760405162461bcd60e51b81526004016100af9061212f565b8281604051602001610f01929190611c3c565b60405160208183030381529060405291505061101b565b82516024148015610f48575082600081518110610f3157fe5b6020910101516001600160f81b031916602760f91b145b8015610f73575082600181518110610f5c57fe5b6020910101516001600160f81b031916600960fb1b145b8015610f9e575082600281518110610f8757fe5b6020910101516001600160f81b031916607b60f81b145b8015610fc9575082600381518110610fb257fe5b6020910101516001600160f81b031916607160f81b145b15610fee57602483015182610fdd82611449565b604051602001610f01929190611b9c565b81610ff88461146f565b604051602001611009929190611beb565b60405160208183030381529060405290505b92915050565b6000828211156110435760405162461bcd60e51b81526004016100af90611f29565b50900390565b3390565b80156110f35761105c836110f8565b1561109d576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015611097573d6000803e3d6000fd5b506110f3565b6110f38363a9059cbb60e01b84846040516024016110bc929190611ce2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115ee565b505050565b60006001600160a01b038216158061112c57506001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee145b90505b919050565b60e08114156112e157600080856001600160a01b031663d505accf60e01b858560405160200161116693929190611b5c565b60408051601f198184030181529082905261118091611b80565b6000604051808303816000865af19150503d80600081146111bd576040519150601f19603f3d011682016040523d82523d6000602084013e6111c2565b606091505b5091509150816112de576000611204826040518060400160405280601481526020017302832b936b4ba1031b0b636103330b4b632b21d160651b815250610e08565b905085876001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b8152600401611235929190611c8e565b60206040518083038186803b15801561124d57600080fd5b505afa158015611261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112859190611aea565b10156112a5578060405162461bcd60e51b81526004016100af9190611df4565b7f08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa816040516112d49190611df4565b60405180910390a1505b50505b50505050565b6112e1846323b872dd60e01b85858560405160240161130893929190611cfb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116a4565b600061134a836110f8565b1561136057506001600160a01b0381163161101b565b6040516370a0823160e01b81526001600160a01b038416906370a082319061138c908590600401611c7a565b60206040518083038186803b1580156113a457600080fd5b505afa1580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dc9190611aea565b905061101b565b6000828201838110156114085760405162461bcd60e51b81526004016100af90611e99565b9392505050565b60008261141e5750600061101b565b8282028284828161142b57fe5b04146114085760405162461bcd60e51b81526004016100af9061204b565b606061112c8260405160200161145f9190611c71565b6040516020818303038152906040525b80516060906f181899199a1a9b1b9c1cb0b131b232b360811b9060009060029081020167ffffffffffffffff811180156114a857600080fd5b506040519080825280601f01601f1916602001820160405280156114d3576020820181803683370190505b509050600360fc1b816000815181106114e857fe5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061151157fe5b60200101906001600160f81b031916908160001a90535060005b84518110156115e65782600486838151811061154357fe5b01602001516001600160f81b031916901c60f81c6010811061156157fe5b1a60f81b82826002026002018151811061157757fe5b60200101906001600160f81b031916908160001a9053508285828151811061159b57fe5b60209101015160f81c600f16601081106115b157fe5b1a60f81b8282600202600301815181106115c757fe5b60200101906001600160f81b031916908160001a90535060010161152b565b509392505050565b600080836001600160a01b0316836040516116099190611b80565b6000604051808303816000865af19150503d8060008114611646576040519150601f19603f3d011682016040523d82523d6000602084013e61164b565b606091505b50915091508161166d5760405162461bcd60e51b81526004016100af9061215e565b8051156112e1578080602001905181019061168891906118f9565b6112e15760405162461bcd60e51b81526004016100af906120c1565b60006116f9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117339092919063ffffffff16565b8051909150156110f3578080602001905181019061171791906118f9565b6110f35760405162461bcd60e51b81526004016100af906121c4565b6060611742848460008561174a565b949350505050565b60608247101561176c5760405162461bcd60e51b81526004016100af90611f60565b6117758561180a565b6117915760405162461bcd60e51b81526004016100af9061218d565b600080866001600160a01b031685876040516117ad9190611b80565b60006040518083038185875af1925050503d80600081146117ea576040519150601f19603f3d011682016040523d82523d6000602084013e6117ef565b606091505b50915091506117ff828286611810565b979650505050505050565b3b151590565b6060831561181f575081611408565b82511561182f5782518084602001fd5b8160405162461bcd60e51b81526004016100af9190611df4565b803561112f816122e8565b60008083601f840112611865578182fd5b50813567ffffffffffffffff81111561187c578182fd5b602083019150836020808302850101111561189657600080fd5b9250929050565b60008083601f8401126118ae578182fd5b50813567ffffffffffffffff8111156118c5578182fd5b60208301915083602082850101111561189657600080fd5b6000602082840312156118ee578081fd5b8135611408816122e8565b60006020828403121561190a578081fd5b81518015158114611408578182fd5b6000806000806060858703121561192e578283fd5b8435611939816122e8565b9350602085013567ffffffffffffffff80821115611955578485fd5b908601906101008289031215611969578485fd5b9093506040860135908082111561197e578384fd5b5061198b8782880161189d565b95989497509550505050565b600080604083850312156119a9578182fd5b82516119b4816122e8565b6020939093015192949293505050565b600080604083850312156119d6578182fd5b82356119e1816122e8565b946020939093013593505050565b600080600080600060808688031215611a06578081fd5b8535611a11816122e8565b94506020860135935060408601359250606086013567ffffffffffffffff811115611a3a578182fd5b611a4688828901611854565b969995985093965092949392505050565b600080600080600080600060a0888a031215611a71578182fd5b8735611a7c816122e8565b96506020880135955060408801359450606088013567ffffffffffffffff80821115611aa6578384fd5b611ab28b838c01611854565b909650945060808a0135915080821115611aca578384fd5b50611ad78a828b0161189d565b989b979a50959850939692959293505050565b600060208284031215611afb578081fd5b5051919050565b60008060408385031215611b14578182fd5b505080516020909101519092909150565b6001600160a01b03169052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6001600160e01b031984168152600082846004840137910160040190815292915050565b60008251611b928184602087016122bc565b9190910192915050565b60008351611bae8184602088016122bc565b650a0c2dcd2c6560d31b9083019081528351611bd18160068401602088016122bc565b602960f81b60069290910191820152600701949350505050565b60008351611bfd8184602088016122bc565b670aadcd6dcdeeedc560c31b9083019081528351611c228160088401602088016122bc565b602960f81b60089290910191820152600901949350505050565b60008351611c4e8184602088016122bc565b6508ae4e4dee4560d31b9083019081528351611bd18160068401602088016122bc565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0396871681529486166020860152928516604085015293166060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0385168152606060208201819052600090611d4b908301611d4687611849565b611b25565b611d5760208601611849565b611d646080840182611b25565b50611d7160408601611849565b611d7e60a0840182611b25565b50611d8b60608601611849565b611d9860c0840182611b25565b50608085013560e083015261010060a08601358184015260c0860135610120840152611dc760e0870187612277565b82610140860152611ddd61016086018284611b32565b9250505082810360408401526117ff818587611b32565b6000602082528251806020840152611e138160408501602087016122bc565b601f01601f19169190910160400192915050565b602080825260129082015271086d8c2d2da40e8ded6cadc40d2e6408aa8960731b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601490820152731155120819195c1bdcda5d081c995a9958dd195960621b604082015260600190565b602080825260119082015270496e76616c6964206d73672e76616c756560781b604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526018908201527f496e636f727265637420434849206275726e20666c6167730000000000000000604082015260600190565b6020808252601b908201527f52657475726e20616d6f756e74206973206e6f7420656e6f7567680000000000604082015260600190565b6020808252601a908201527f4d696e2072657475726e2073686f756c64206e6f742062652030000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f4552433230206f7065726174696f6e20646964206e6f74207375636365656400604082015260600190565b60208082526017908201527f646174612073686f756c64206265206e6f74207a65726f000000000000000000604082015260600190565b60208082526015908201527424b73b30b634b2103932bb32b93a103932b0b9b7b760591b604082015260600190565b6020808252601590820152741b1bddcb5b195d995b0818d85b1b0819985a5b1959605a1b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b6000808335601e19843603018112612248578283fd5b83018035915067ffffffffffffffff821115612262578283fd5b60200191503681900382131561189657600080fd5b6000808335601e1984360301811261228d578283fd5b830160208101925035905067ffffffffffffffff8111156122ad57600080fd5b80360383131561189657600080fd5b60005b838110156122d75781810151838201526020016122bf565b838111156112e15750506000910152565b6001600160a01b03811681146122fd57600080fd5b5056fea2646970667358221220e8d4eda14c075e3d3bf4a4025646a31c4c0d8a91b27a27005f720b77f7cf153a64736f6c63430007060033",
  "deployedSourceMap": "49519:4800:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43221:10;43235:9;43221:23;;43213:56;;;;-1:-1:-1;;;43213:56:0;;;;;;;:::i;:::-;;;;;;;;;49519:4800;;;;;43619:5778;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;50387:1376;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;13011:145::-;;;;;;;;;;;;;:::i;54108:124::-;;;;;;;;;;-1:-1:-1;54108:124:0;;;;;:::i;:::-;;:::i;51769:2333::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;54238:79::-;;;;;;;;;;;;;:::i;12379:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;43282:331::-;;;;;;:::i;:::-;;:::i;13305:240::-;;;;;;;;;;-1:-1:-1;13305:240:0;;;;;:::i;:::-;;:::i;43619:5778::-;43781:20;43880:134;;;43939:16;43936:1;43933;43918:38;43983:16;43980:1;43973:27;44028:303;-1:-1:-1;;;44087:1:0;44080:77;-1:-1:-1;;;44181:4:0;44174:80;44284:1;44278:4;44271:15;44313:3;44310:1;44303:14;44345:1371;;-1:-1:-1;;;44445:8:0;44438:57;44571:4;44561:8;44556:3;44546:8;44540:4;44533:5;44522:54;44512:2;;44600:10;;:::i;:::-;44668:8;44662:15;44730:4;44720:8;44716:19;44710:26;44756:8;44753:2;;;44839:8;44753:2;-1:-1:-1;;;45055:53:0;;44925:26;;;45022:12;45008:27;;;;44999:37;;44979:18;;44975:62;;-1:-1:-1;45132:8:0;45157:130;;;;45362:3;45355:4;45345:8;45341:19;45334:32;45415:1;45408:4;45398:8;45394:19;45387:30;45125:310;;45157:130;45214:1;45207:4;45197:8;45193:19;45186:30;45265:3;45258:4;45248:8;45244:19;45237:32;45125:310;;45480:3;45473:4;45463:8;45459:19;45452:32;45529:4;45522;45512:8;45508:19;45501:33;45579:1;45572:4;45562:8;45558:19;45551:30;45648:1;45645;45639:4;45629:8;45626:1;45620:4;45613:5;45608:42;45598:2;;45674:10;;:::i;:::-;44420:1296;;;;;;;;:::o;:::-;45752:4;45746:11;45797:4;45787:8;45783:19;45777:4;45770:33;45860:3;45853:4;45840:18;45836:28;45912:11;45899:25;45969:4;45956:11;45952:22;45937:37;;46032:14;46026:4;46022:25;46009:11;46005:43;45987:61;;46089:11;46076:25;46121:8;46147:1;46142:734;;;;46918:11;46915:2;;;46952:90;47037:4;-1:-1:-1;;;46952:90:0;:::i;:::-;-1:-1:-1;;;47109:8:0;47102:49;47195:8;47189:3;47179:8;47175:18;47168:36;-1:-1:-1;;;;;47253:7:0;47249:27;47242:4;47232:8;47228:19;47221:56;47322:6;47315:4;47305:8;47301:19;47294:35;47400:1;47397;47391:4;47381:8;47378:1;47368:8;47361:5;47356:46;47346:2;;47426:10;;:::i;:::-;46114:1354;;46142:734;46188:11;46180:6;46177:23;46167:2;;46224:90;46309:4;-1:-1:-1;;;46224:90:0;:::i;:::-;-1:-1:-1;;;46381:8:0;46374:48;46494:1;46491;46486:3;46476:8;46468:6;46461:5;46454;46449:47;46439:2;;46520:10;;:::i;:::-;-1:-1:-1;;;46573:8:0;46566:50;-1:-1:-1;;;;;46664:7:0;46660:27;46654:3;46644:8;46640:18;46633:55;46733:6;46726:4;46716:8;46712:19;46705:35;46808:1;46805;46799:4;46789:8;46786:1;46779:5;46772;46767:43;46757:2;;46834:10;;:::i;:::-;46114:1354;47498:6;47482:22;;47549:4;47536:11;47532:22;47518:532;47562:14;47559:1;47556:21;47518:532;;;47648:1;47635:15;47684:312;-1:-1:-1;;;;;47951:11:0;47947:31;-1:-1:-1;;;47899:7:0;47895:29;47876:17;47872:53;-1:-1:-1;;;47827:7:0;47823:27;-1:-1:-1;;;;;47778:7:0;47774:27;47740:12;47710:8;47684:312;:::i;:::-;47668:328;-1:-1:-1;48025:11:0;-1:-1:-1;47591:4:0;47584:12;47518:532;;;-1:-1:-1;;;;48071:24:0;;48108:344;;;;48507:290;48770:9;-1:-1:-1;;;48722:7:0;48718:29;48699:17;48695:53;-1:-1:-1;;;48650:7:0;48646:27;-1:-1:-1;;;;;48601:7:0;48597:27;48563:12;48533:8;48507:290;:::i;:::-;48491:306;;-1:-1:-1;;;48822:8:0;48815:49;48909:12;48902:4;48892:8;48888:19;48881:41;48990:1;48987;48981:4;48971:8;48968:1;48961:5;48954;48949:43;48939:2;;49016:10;;:::i;:::-;49117:1;49114;49111;49108;49094:12;49084:8;49077:5;49072:47;49062:2;;49143:10;;:::i;:::-;48064:1121;;48108:344;48149:289;48412:8;-1:-1:-1;;;48364:7:0;48360:29;48341:17;48337:53;-1:-1:-1;;;48292:7:0;48288:27;-1:-1:-1;;;;;48243:7:0;48239:27;48205:12;48175:8;48149:289;:::i;:::-;48133:305;;48064:1121;;;;;;49219:9;49205:12;49202:27;49199:2;;;49248:90;49333:4;49265:66;49248:90;:::i;:::-;43822:5569;;;;;;;:::o;50387:1376::-;50572:20;50594:15;50611:16;50643:18;50664:9;50643:30;-1:-1:-1;50684:17:0;50728:10;;;;49884:4;50728:34;:39;50724:293;;-1:-1:-1;50795:10:0;50724:293;;;50826:10;;;;49942:4;50826:33;:38;50822:195;;-1:-1:-1;50892:9:0;50822:195;;;50972:34;;-1:-1:-1;;;50972:34:0;;;;;;;:::i;50822:195::-;51087:12;51101:23;51136:4;-1:-1:-1;;;;;51128:26:0;51178:18;;;51198:6;51206:4;51212;;51155:62;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;51155:62:0;;;;;;;;;;;;;;-1:-1:-1;;;;;51155:62:0;-1:-1:-1;;;;;;51155:62:0;;;;;;;;;;51128:90;;;;51155:62;51128:90;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51086:132;;;;51232:7;51228:289;;;51284:10;51273:42;;;;;;;;;;;;:::i;:::-;-1:-1:-1;51255:60:0;-1:-1:-1;51228:289:0;;;51350:9;:13;51346:82;;51383:30;;:10;;51403:9;51383:30;;;;;;;;;51403:9;51383:10;:30;;;;;;;;;;;;;;;;;;;;;51346:82;51446:60;51452:53;51477:10;51452:53;;;;;;;;;;;;;-1:-1:-1;;;51452:53:0;;;:24;:53::i;:::-;51446:60;;;;;;:::i;:::-;;;;;;;;51228:289;51528:8;51538:14;51556:6;-1:-1:-1;;;;;51556:19:0;;51576:25;51591:9;51576:10;;:14;:25::i;:::-;51603:4;:10;;;51615:8;;:15;;51556:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51527:104;;-1:-1:-1;51527:104:0;-1:-1:-1;51645:10:0;;51641:87;;51682:35;;-1:-1:-1;;;51682:35:0;;-1:-1:-1;;;;;51682:16:0;;;;;:35;;51699:9;;51710:6;;51682:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51671:46;;51641:87;51747:9;51737:19;;50387:1376;;;;;;;;;;;;;;:::o;13011:145::-;12602:12;:10;:12::i;:::-;-1:-1:-1;;;;;12591:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;12591:23:0;;12583:68;;;;-1:-1:-1;;;12583:68:0;;;;;;;:::i;:::-;13117:1:::1;13101:6:::0;;13080:40:::1;::::0;-1:-1:-1;;;;;13101:6:0;;::::1;::::0;13080:40:::1;::::0;13117:1;;13080:40:::1;13147:1;13130:19:::0;;-1:-1:-1;;;;;;13130:19:0::1;::::0;;13011:145::o;54108:124::-;12602:12;:10;:12::i;:::-;-1:-1:-1;;;;;12591:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;12591:23:0;;12583:68;;;;-1:-1:-1;;;12583:68:0;;;;;;;:::i;:::-;54188:37:::1;-1:-1:-1::0;;;;;54188:17:0;::::1;54206:10;54218:6:::0;54188:17:::1;:37::i;:::-;54108:124:::0;;:::o;51769:2333::-;51944:20;51966:15;52028:1;52005:4;:20;;;:24;51997:63;;;;-1:-1:-1;;;51997:63:0;;;;;;;:::i;:::-;52078:15;52070:51;;;;-1:-1:-1;;;52070:51:0;;;;;;;:::i;:::-;52148:10;;;;52132:13;52186;;;;52148:4;52186:13;:::i;:::-;52168:31;-1:-1:-1;52209:15:0;52227:13;;;;;;;;:::i;:::-;52209:31;-1:-1:-1;49774:4:0;52255:27;;:32;52251:251;;52324:16;:8;-1:-1:-1;;;;;52324:14:0;;:16::i;:::-;:34;;52357:1;52324:34;;;52343:4;:11;;;52324:34;52311:9;:48;52303:78;;;;-1:-1:-1;;;52303:78:0;;;;;;;:::i;:::-;52251:251;;;52434:16;:8;-1:-1:-1;;;;;52434:14:0;;:16::i;:::-;:34;;52467:1;52434:34;;;52453:4;:11;;;52434:34;52420:9;:49;52412:79;;;;-1:-1:-1;;;52412:79:0;;;;;;;:::i;:::-;49825:4;52516:21;;:26;52512:244;;52567:16;:8;-1:-1:-1;;;;;52567:14:0;;:16::i;:::-;52566:17;52558:48;;;;-1:-1:-1;;;52558:48:0;;;;;;;:::i;:::-;52620:43;52628:8;52638:11;;;;52651;;;;52638:4;52651:11;:::i;:::-;52620:7;:43::i;:::-;52677:68;52703:10;52715:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;52677:25:0;;;:68;52733:11;;;;52677:25;:68::i;:::-;52766:19;;52789:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;52789:30:0;;52788:64;;52836:16;;;;;;;;:::i;:::-;52788:64;;;52823:10;52788:64;52766:86;-1:-1:-1;52862:25:0;49717:4;52891:21;;52890:68;;52957:1;52890:68;;;52921:33;-1:-1:-1;;;;;52921:21:0;;52943:10;52921:21;:33::i;:::-;52862:96;-1:-1:-1;52968:25:0;52996:34;-1:-1:-1;;;;;52996:21:0;;53018:11;52996:21;:34::i;:::-;52968:62;;53119:12;53133:19;53164:6;-1:-1:-1;;;;;53156:20:0;53184:9;53212:25;;;53239:4;;53195:49;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;53195:49:0;;;;;;;;;;53156:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53118:127;;;;53264:7;53259:109;;53298:54;53323:6;53298:54;;;;;;;;;;;;;-1:-1:-1;;;53298:54:0;;;:24;:54::i;:::-;53291:62;;-1:-1:-1;;;53291:62:0;;;;;;;;:::i;53259:109::-;-1:-1:-1;;53410:11:0;;;;53446:57;53485:17;53446:34;-1:-1:-1;;;;;53446:21:0;;53468:11;53446:21;:34::i;:::-;:38;;:57::i;:::-;53431:72;-1:-1:-1;49717:4:0;53518:21;;:26;53514:375;;53574:73;53613:33;-1:-1:-1;;;;;53613:21:0;;53635:10;53613:21;:33::i;:::-;53574:34;53596:4;:11;;;53574:17;:21;;:34;;;;:::i;:73::-;53560:87;-1:-1:-1;53702:37:0;:20;;;;53560:87;53702:24;:37::i;:::-;53669:29;:12;53686:11;;;;53669:16;:29::i;:::-;:70;;53661:110;;;;-1:-1:-1;;;53661:110:0;;;;;;;:::i;:::-;53514:375;;;53826:4;:20;;;53810:12;:36;;53802:76;;;;-1:-1:-1;;;53802:76:0;;;;;;;:::i;:::-;53904:161;53925:10;53949:8;53971;53993:11;54018;54043:12;53904:161;;;;;;;;;;;:::i;:::-;;;;;;;;54086:9;54076:19;;51769:2333;;;;;;;;;;;;;;:::o;54238:79::-;12602:12;:10;:12::i;:::-;-1:-1:-1;;;;;12591:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;12591:23:0;;12583:68;;;;-1:-1:-1;;;12583:68:0;;;;;;;:::i;:::-;54299:10:::1;54286:24;12379:85:::0;12425:7;12451:6;-1:-1:-1;;;;;12451:6:0;12379:85;:::o;43282:331::-;43481:20;43513:33;43521:8;43531:6;43539;;43513:7;:33::i;:::-;43563:43;43571:8;43581:6;43589:9;43600:5;;43563:7;:43::i;:::-;43556:50;43282:331;-1:-1:-1;;;;;;;;43282:331:0:o;13305:240::-;12602:12;:10;:12::i;:::-;-1:-1:-1;;;;;12591:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;12591:23:0;;12583:68;;;;-1:-1:-1;;;12583:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;13393:22:0;::::1;13385:73;;;;-1:-1:-1::0;;;13385:73:0::1;;;;;;;:::i;:::-;13494:6;::::0;;13473:38:::1;::::0;-1:-1:-1;;;;;13473:38:0;;::::1;::::0;13494:6;::::1;::::0;13473:38:::1;::::0;::::1;13521:6;:17:::0;;-1:-1:-1;;;;;;13521:17:0::1;-1:-1:-1::0;;;;;13521:17:0;;;::::1;::::0;;;::::1;::::0;;13305:240::o;38008:1877::-;38087:13;38367:2;38352:4;:11;:17;;:38;;;;;38373:4;38378:1;38373:7;;;;;;;;;;;;;-1:-1:-1;;;;;;38373:7:0;-1:-1:-1;;;38373:17:0;38352:38;:59;;;;;38394:4;38399:1;38394:7;;;;;;;;;;;;;-1:-1:-1;;;;;;38394:7:0;-1:-1:-1;;;38394:17:0;38352:59;:80;;;;;38415:4;38420:1;38415:7;;;;;;;;;;;;;-1:-1:-1;;;;;;38415:7:0;-1:-1:-1;;;38415:17:0;38352:80;:101;;;;;38436:4;38441:1;38436:7;;;;;;;;;;;;;-1:-1:-1;;;;;;38436:7:0;-1:-1:-1;;;38436:17:0;38352:101;38348:1450;;;38469:20;38681:2;38675:4;38671:13;38661:23;;39174:6;39168:20;39163:2;:25;39148:4;:11;:40;;39140:74;;;;-1:-1:-1;;;39140:74:0;;;;;;;:::i;:::-;39259:6;39277;39242:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;39228:62;;;;;38348:1450;39381:4;:11;39396:2;39381:17;:38;;;;;39402:4;39407:1;39402:7;;;;;;;;;;;;;-1:-1:-1;;;;;;39402:7:0;-1:-1:-1;;;39402:17:0;39381:38;:59;;;;;39423:4;39428:1;39423:7;;;;;;;;;;;;;-1:-1:-1;;;;;;39423:7:0;-1:-1:-1;;;39423:17:0;39381:59;:80;;;;;39444:4;39449:1;39444:7;;;;;;;;;;;;;-1:-1:-1;;;;;;39444:7:0;-1:-1:-1;;;39444:17:0;39381:80;:101;;;;;39465:4;39470:1;39465:7;;;;;;;;;;;;;-1:-1:-1;;;;;;39465:7:0;-1:-1:-1;;;39465:17:0;39381:101;39377:421;;;39688:2;39678:13;;39672:20;39750:6;39768:12;39672:20;39768:6;:12::i;:::-;39733:53;;;;;;;;;:::i;39377:421::-;39839:6;39859:12;39866:4;39859:6;:12::i;:::-;39822:55;;;;;;;;;:::i;:::-;;;;;;;;;;;;;39808:70;;38008:1877;;;;;:::o;19451:155::-;19509:7;19541:1;19536;:6;;19528:49;;;;-1:-1:-1;;;19528:49:0;;;;;;;:::i;:::-;-1:-1:-1;19594:5:0;;;19451:155::o;10952:104::-;11039:10;10952:104;:::o;35712:332::-;35806:10;;35802:236;;35836:12;35842:5;35836;:12::i;:::-;35832:196;;;35868:19;;-1:-1:-1;;;;;35868:11:0;;;:19;;;;;35880:6;;35868:19;;;;35880:6;35868:11;:19;;;;;;;;;;;;;;;;;;;;;35832:196;;;35926:87;35946:5;35976:23;;;36001:2;36005:6;35953:59;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;35953:59:0;;;;;;;;;;;;;;-1:-1:-1;;;;;35953:59:0;-1:-1:-1;;;;;;35953:59:0;;;;;;;;;;35926:19;:87::i;:::-;35712:332;;;:::o;35341:131::-;35393:4;-1:-1:-1;;;;;35417:22:0;;;;:47;;-1:-1:-1;;;;;;35443:21:0;;35236:42;35443:21;35417:47;35409:56;;35341:131;;;;:::o;40871:658::-;40981:6;40964:23;;40960:563;;;41067:12;41081:19;41112:5;-1:-1:-1;;;;;41104:19:0;41141:28;;;41171:6;;41124:54;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;41124:54:0;;;;;;;;;;41104:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41066:113;;;;41198:7;41193:320;;41225:20;41248:56;41273:6;41248:56;;;;;;;;;;;;;-1:-1:-1;;;41248:56:0;;;:24;:56::i;:::-;41225:79;;41371:6;41326:5;-1:-1:-1;;;;;41326:15:0;;41342:10;41362:4;41326:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;41322:177;;;41408:6;41401:14;;-1:-1:-1;;;41401:14:0;;;;;;;;:::i;41322:177::-;41467:13;41473:6;41467:13;;;;;;:::i;:::-;;;;;;;;41193:320;;40960:563;;;40871:658;;;;:::o;32220:203::-;32320:96;32340:5;32370:27;;;32399:4;32405:2;32409:5;32347:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;32347:68:0;;;;;;;;;;;;;;-1:-1:-1;;;;;32347:68:0;-1:-1:-1;;;;;;32347:68:0;;;;;;;;;;32320:19;:96::i;35478:228::-;35554:7;35577:12;35583:5;35577;:12::i;:::-;35573:127;;;-1:-1:-1;;;;;;35612:15:0;;;35605:22;;35573:127;35665:24;;-1:-1:-1;;;35665:24:0;;-1:-1:-1;;;;;35665:15:0;;;;;:24;;35681:7;;35665:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35658:31;;;;19005:175;19063:7;19094:5;;;19117:6;;;;19109:46;;;;-1:-1:-1;;;19109:46:0;;;;;;;:::i;:::-;19172:1;19005:175;-1:-1:-1;;;19005:175:0:o;19853:215::-;19911:7;19934:6;19930:20;;-1:-1:-1;19949:1:0;19942:8;;19930:20;19972:5;;;19976:1;19972;:5;:1;19995:5;;;;;:10;19987:56;;;;-1:-1:-1;;;19987:56:0;;;;;;;:::i;39891:122::-;39943:13;39975:31;39999:5;39982:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;40019:456;40196:11;;40075:13;;-1:-1:-1;;;40100:53:0;:16;;40210:1;40196:15;;;40192:19;40182:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40182:30:0;;40163:49;;-1:-1:-1;;;40222:3:0;40226:1;40222:6;;;;;;;;;;;:12;-1:-1:-1;;;;;40222:12:0;;;;;;;;;-1:-1:-1;;;40244:3:0;40248:1;40244:6;;;;;;;;;;;:12;-1:-1:-1;;;;;40244:12:0;;;;;;;;;40271:9;40266:175;40290:4;:11;40286:1;:15;40266:175;;;40339:8;40365:1;40354:4;40359:1;40354:7;;;;;;;;;;;;-1:-1:-1;;;;;;40354:7:0;:12;;:7;40348:19;40339:29;;;;;;;;;;40322:3;40330:1;40326;:5;40334:1;40326:9;40322:14;;;;;;;;;;;:46;-1:-1:-1;;;;;40322:46:0;;;;;;;;;40399:8;40414:4;40419:1;40414:7;;;;;;;;;;;;;;;40424:4;40408:21;40399:31;;;;;;;;;;40382:3;40390:1;40386;:5;40394:1;40386:9;40382:14;;;;;;;;;;;:48;-1:-1:-1;;;;;40382:48:0;;;;;;;;-1:-1:-1;40303:3:0;;40266:175;;;-1:-1:-1;40464:3:0;40019:456;-1:-1:-1;;;40019:456:0:o;36674:427::-;36814:12;36828:23;36863:5;-1:-1:-1;;;;;36855:19:0;36875:4;36855:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36813:67;;;;36898:7;36890:41;;;;-1:-1:-1;;;36890:41:0;;;;;;;:::i;:::-;36946:17;;:21;36942:153;;37029:10;37018:30;;;;;;;;;;;;:::i;:::-;37010:74;;;;-1:-1:-1;;;37010:74:0;;;;;;;:::i;34302:751::-;34721:23;34747:69;34775:4;34747:69;;;;;;;;;;;;;;;;;34755:5;-1:-1:-1;;;;;34747:27:0;;;:69;;;;;:::i;:::-;34830:17;;34721:95;;-1:-1:-1;34830:21:0;34826:221;;34970:10;34959:30;;;;;;;;;;;;:::i;:::-;34951:85;;;;-1:-1:-1;;;34951:85:0;;;;;;;:::i;27150:193::-;27253:12;27284:52;27306:6;27314:4;27320:1;27323:12;27284:21;:52::i;:::-;27277:59;27150:193;-1:-1:-1;;;;27150:193:0:o;28177:523::-;28304:12;28361:5;28336:21;:30;;28328:81;;;;-1:-1:-1;;;28328:81:0;;;;;;;:::i;:::-;28427:18;28438:6;28427:10;:18::i;:::-;28419:60;;;;-1:-1:-1;;;28419:60:0;;;;;;;:::i;:::-;28550:12;28564:23;28591:6;-1:-1:-1;;;;;28591:11:0;28611:5;28619:4;28591:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28549:75;;;;28641:52;28659:7;28668:10;28680:12;28641:17;:52::i;:::-;28634:59;28177:523;-1:-1:-1;;;;;;;28177:523:0:o;24295:413::-;24655:20;24693:8;;;24295:413::o;30660:725::-;30775:12;30803:7;30799:580;;;-1:-1:-1;30833:10:0;30826:17;;30799:580;30944:17;;:21;30940:429;;31202:10;31196:17;31262:15;31249:10;31245:2;31241:19;31234:44;31151:145;31341:12;31334:20;;-1:-1:-1;;;31334:20:0;;;;;;;;:::i;14:138:1:-;84:20;;113:33;84:20;113:33;:::i;157:404::-;;;290:3;283:4;275:6;271:17;267:27;257:2;;315:8;305;298:26;257:2;-1:-1:-1;345:20:1;;388:18;377:30;;374:2;;;427:8;417;410:26;374:2;471:4;463:6;459:17;447:29;;534:3;527:4;519;511:6;507:17;499:6;495:30;491:41;488:50;485:2;;;551:1;548;541:12;485:2;247:314;;;;;:::o;566:377::-;;;683:3;676:4;668:6;664:17;660:27;650:2;;708:8;698;691:26;650:2;-1:-1:-1;738:20:1;;781:18;770:30;;767:2;;;820:8;810;803:26;767:2;864:4;856:6;852:17;840:29;;916:3;909:4;900:6;892;888:19;884:30;881:39;878:2;;;933:1;930;923:12;948:259;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1125:9;1112:23;1144:33;1171:5;1144:33;:::i;1212:297::-;;1332:2;1320:9;1311:7;1307:23;1303:32;1300:2;;;1353:6;1345;1338:22;1300:2;1390:9;1384:16;1443:5;1436:13;1429:21;1422:5;1419:32;1409:2;;1470:6;1462;1455:22;1514:911;;;;;1743:2;1731:9;1722:7;1718:23;1714:32;1711:2;;;1764:6;1756;1749:22;1711:2;1808:9;1795:23;1827:33;1854:5;1827:33;:::i;:::-;1879:5;-1:-1:-1;1935:2:1;1920:18;;1907:32;1958:18;1988:14;;;1985:2;;;2020:6;2012;2005:22;1985:2;2048:22;;;;2104:3;2086:16;;;2082:26;2079:2;;;2126:6;2118;2111:22;2079:2;2154;;-1:-1:-1;2209:2:1;2194:18;;2181:32;;2225:16;;;2222:2;;;2259:6;2251;2244:22;2222:2;;2303:62;2357:7;2346:8;2335:9;2331:24;2303:62;:::i;:::-;1701:724;;;;-1:-1:-1;2384:8:1;-1:-1:-1;;;;1701:724:1:o;2430:337::-;;;2583:2;2571:9;2562:7;2558:23;2554:32;2551:2;;;2604:6;2596;2589:22;2551:2;2641:9;2635:16;2660:33;2687:5;2660:33;:::i;:::-;2757:2;2742:18;;;;2736:25;2712:5;;2736:25;;-1:-1:-1;;;2541:226:1:o;3050:341::-;;;3193:2;3181:9;3172:7;3168:23;3164:32;3161:2;;;3214:6;3206;3199:22;3161:2;3258:9;3245:23;3277:33;3304:5;3277:33;:::i;:::-;3329:5;3381:2;3366:18;;;;3353:32;;-1:-1:-1;;;3151:240:1:o;3396:751::-;;;;;;3608:3;3596:9;3587:7;3583:23;3579:33;3576:2;;;3630:6;3622;3615:22;3576:2;3674:9;3661:23;3693:33;3720:5;3693:33;:::i;:::-;3745:5;-1:-1:-1;3797:2:1;3782:18;;3769:32;;-1:-1:-1;3848:2:1;3833:18;;3820:32;;-1:-1:-1;3903:2:1;3888:18;;3875:32;3930:18;3919:30;;3916:2;;;3967:6;3959;3952:22;3916:2;4011:76;4079:7;4070:6;4059:9;4055:22;4011:76;:::i;:::-;3566:581;;;;-1:-1:-1;3566:581:1;;-1:-1:-1;4106:8:1;;3985:102;3566:581;-1:-1:-1;;;3566:581:1:o;4152:1072::-;;;;;;;;4400:3;4388:9;4379:7;4375:23;4371:33;4368:2;;;4422:6;4414;4407:22;4368:2;4466:9;4453:23;4485:33;4512:5;4485:33;:::i;:::-;4537:5;-1:-1:-1;4589:2:1;4574:18;;4561:32;;-1:-1:-1;4640:2:1;4625:18;;4612:32;;-1:-1:-1;4695:2:1;4680:18;;4667:32;4718:18;4748:14;;;4745:2;;;4780:6;4772;4765:22;4745:2;4824:76;4892:7;4883:6;4872:9;4868:22;4824:76;:::i;:::-;4919:8;;-1:-1:-1;4798:102:1;-1:-1:-1;5007:3:1;4992:19;;4979:33;;-1:-1:-1;5024:16:1;;;5021:2;;;5058:6;5050;5043:22;5021:2;;5102:62;5156:7;5145:8;5134:9;5130:24;5102:62;:::i;:::-;4358:866;;;;-1:-1:-1;4358:866:1;;-1:-1:-1;4358:866:1;;;;5076:88;;-1:-1:-1;;;4358:866:1:o;5229:194::-;;5352:2;5340:9;5331:7;5327:23;5323:32;5320:2;;;5373:6;5365;5358:22;5320:2;-1:-1:-1;5401:16:1;;5310:113;-1:-1:-1;5310:113:1:o;5428:255::-;;;5568:2;5556:9;5547:7;5543:23;5539:32;5536:2;;;5589:6;5581;5574:22;5536:2;-1:-1:-1;;5617:16:1;;5673:2;5658:18;;;5652:25;5617:16;;5652:25;;-1:-1:-1;5526:157:1:o;5688:114::-;-1:-1:-1;;;;;5764:31:1;5752:44;;5742:60::o;5807:270::-;;5897:6;5892:3;5885:19;5949:6;5942:5;5935:4;5930:3;5926:14;5913:43;6001:3;5994:4;5985:6;5980:3;5976:16;5972:27;5965:40;6066:4;6059:2;6055:7;6050:2;6042:6;6038:15;6034:29;6029:3;6025:39;6021:50;6014:57;;5875:202;;;;;:::o;6082:370::-;-1:-1:-1;;;;;;6277:33:1;;6265:46;;6082:370;6354:6;6346;6342:1;6333:11;;6320:41;6384:16;;6402:1;6380:24;6413:15;;;6380:24;6255:197;-1:-1:-1;;6255:197:1:o;6457:274::-;;6624:6;6618:13;6640:53;6686:6;6681:3;6674:4;6666:6;6662:17;6640:53;:::i;:::-;6709:16;;;;;6594:137;-1:-1:-1;;6594:137:1:o;6736:773::-;;7155:6;7149:13;7171:53;7217:6;7212:3;7205:4;7197:6;7193:17;7171:53;:::i;:::-;-1:-1:-1;;;7246:16:1;;;7271:23;;;7319:13;;7341:65;7319:13;7393:1;7382:13;;7375:4;7363:17;;7341:65;:::i;:::-;-1:-1:-1;;;7469:1:1;7425:20;;;;7461:10;;;7454:23;7501:1;7493:10;;7125:384;-1:-1:-1;;;;7125:384:1:o;7514:775::-;;7933:6;7927:13;7949:53;7995:6;7990:3;7983:4;7975:6;7971:17;7949:53;:::i;:::-;-1:-1:-1;;;8024:16:1;;;8049:25;;;8099:13;;8121:65;8099:13;8173:1;8162:13;;8155:4;8143:17;;8121:65;:::i;:::-;-1:-1:-1;;;8249:1:1;8205:20;;;;8241:10;;;8234:23;8281:1;8273:10;;7903:386;-1:-1:-1;;;;7903:386:1:o;8294:773::-;;8713:6;8707:13;8729:53;8775:6;8770:3;8763:4;8755:6;8751:17;8729:53;:::i;:::-;-1:-1:-1;;;8804:16:1;;;8829:23;;;8877:13;;8899:65;8877:13;8951:1;8940:13;;8933:4;8921:17;;8899:65;:::i;9072:182::-;9201:19;;;9245:2;9236:12;;9191:63::o;9259:203::-;-1:-1:-1;;;;;9423:32:1;;;;9405:51;;9393:2;9378:18;;9360:102::o;9467:312::-;-1:-1:-1;;;;;9705:15:1;;;9687:34;;9757:15;;9752:2;9737:18;;9730:43;9637:2;9622:18;;9604:175::o;9784:645::-;-1:-1:-1;;;;;10163:15:1;;;10145:34;;10215:15;;;10210:2;10195:18;;10188:43;10267:15;;;10262:2;10247:18;;10240:43;10319:15;;10314:2;10299:18;;10292:43;10366:3;10351:19;;10344:35;;;;10125:3;10395:19;;10388:35;;;;10094:3;10079:19;;10061:368::o;10434:290::-;-1:-1:-1;;;;;10642:32:1;;;;10624:51;;10706:2;10691:18;;10684:34;10612:2;10597:18;;10579:145::o;10729:375::-;-1:-1:-1;;;;;10987:15:1;;;10969:34;;11039:15;;;;11034:2;11019:18;;11012:43;11086:2;11071:18;;11064:34;;;;10919:2;10904:18;;10886:218::o;11388:1445::-;-1:-1:-1;;;;;11698:32:1;;11680:51;;11767:2;11762;11747:18;;11740:30;;;11388:1445;;11779:78;;11838:18;;11808:28;11829:6;11808:28;:::i;:::-;11779:78;:::i;:::-;11879:37;11912:2;11904:6;11900:15;11879:37;:::i;:::-;11925:56;11976:3;11965:9;11961:19;11954:5;11925:56;:::i;:::-;;12005:39;12038:4;12030:6;12026:17;12005:39;:::i;:::-;12053:58;12106:3;12095:9;12091:19;12082:7;12053:58;:::i;:::-;;12135:37;12168:2;12160:6;12156:15;12135:37;:::i;:::-;12181:58;12234:3;12223:9;12219:19;12210:7;12181:58;:::i;:::-;;12301:3;12293:6;12289:16;12276:30;12270:3;12259:9;12255:19;12248:59;12326:6;12393:3;12385:6;12381:16;12368:30;12363:2;12352:9;12348:18;12341:58;12461:3;12453:6;12449:16;12436:30;12430:3;12419:9;12415:19;12408:59;12510:58;12563:3;12555:6;12551:16;12543:6;12510:58;:::i;:::-;12605:2;12599:3;12588:9;12584:19;12577:31;12628:76;12699:3;12688:9;12684:19;12670:12;12656;12628:76;:::i;:::-;12617:87;;;;12751:9;12746:3;12742:19;12735:4;12724:9;12720:20;12713:49;12779:48;12823:3;12815:6;12807;12779:48;:::i;12838:383::-;;12987:2;12976:9;12969:21;13019:6;13013:13;13062:6;13057:2;13046:9;13042:18;13035:34;13078:66;13137:6;13132:2;13121:9;13117:18;13112:2;13104:6;13100:15;13078:66;:::i;:::-;13205:2;13184:15;-1:-1:-1;;13180:29:1;13165:45;;;;13212:2;13161:54;;12959:262;-1:-1:-1;;12959:262:1:o;13226:342::-;13428:2;13410:21;;;13467:2;13447:18;;;13440:30;-1:-1:-1;;;13501:2:1;13486:18;;13479:48;13559:2;13544:18;;13400:168::o;13573:402::-;13775:2;13757:21;;;13814:2;13794:18;;;13787:30;13853:34;13848:2;13833:18;;13826:62;-1:-1:-1;;;13919:2:1;13904:18;;13897:36;13965:3;13950:19;;13747:228::o;13980:351::-;14182:2;14164:21;;;14221:2;14201:18;;;14194:30;14260:29;14255:2;14240:18;;14233:57;14322:2;14307:18;;14154:177::o;14336:344::-;14538:2;14520:21;;;14577:2;14557:18;;;14550:30;-1:-1:-1;;;14611:2:1;14596:18;;14589:50;14671:2;14656:18;;14510:170::o;14685:341::-;14887:2;14869:21;;;14926:2;14906:18;;;14899:30;-1:-1:-1;;;14960:2:1;14945:18;;14938:47;15017:2;15002:18;;14859:167::o;15031:354::-;15233:2;15215:21;;;15272:2;15252:18;;;15245:30;15311:32;15306:2;15291:18;;15284:60;15376:2;15361:18;;15205:180::o;15390:402::-;15592:2;15574:21;;;15631:2;15611:18;;;15604:30;15670:34;15665:2;15650:18;;15643:62;-1:-1:-1;;;15736:2:1;15721:18;;15714:36;15782:3;15767:19;;15564:228::o;15797:348::-;15999:2;15981:21;;;16038:2;16018:18;;;16011:30;16077:26;16072:2;16057:18;;16050:54;16136:2;16121:18;;15971:174::o;16150:351::-;16352:2;16334:21;;;16391:2;16371:18;;;16364:30;16430:29;16425:2;16410:18;;16403:57;16492:2;16477:18;;16324:177::o;16506:350::-;16708:2;16690:21;;;16747:2;16727:18;;;16720:30;16786:28;16781:2;16766:18;;16759:56;16847:2;16832:18;;16680:176::o;16861:397::-;17063:2;17045:21;;;17102:2;17082:18;;;17075:30;17141:34;17136:2;17121:18;;17114:62;-1:-1:-1;;;17207:2:1;17192:18;;17185:31;17248:3;17233:19;;17035:223::o;17263:356::-;17465:2;17447:21;;;17484:18;;;17477:30;17543:34;17538:2;17523:18;;17516:62;17610:2;17595:18;;17437:182::o;17624:355::-;17826:2;17808:21;;;17865:2;17845:18;;;17838:30;17904:33;17899:2;17884:18;;17877:61;17970:2;17955:18;;17798:181::o;17984:347::-;18186:2;18168:21;;;18225:2;18205:18;;;18198:30;18264:25;18259:2;18244:18;;18237:53;18322:2;18307:18;;18158:173::o;18336:345::-;18538:2;18520:21;;;18577:2;18557:18;;;18550:30;-1:-1:-1;;;18611:2:1;18596:18;;18589:51;18672:2;18657:18;;18510:171::o;18686:345::-;18888:2;18870:21;;;18927:2;18907:18;;;18900:30;-1:-1:-1;;;18961:2:1;18946:18;;18939:51;19022:2;19007:18;;18860:171::o;19036:353::-;19238:2;19220:21;;;19277:2;19257:18;;;19250:30;19316:31;19311:2;19296:18;;19289:59;19380:2;19365:18;;19210:179::o;19394:406::-;19596:2;19578:21;;;19635:2;19615:18;;;19608:30;19674:34;19669:2;19654:18;;19647:62;-1:-1:-1;;;19740:2:1;19725:18;;19718:40;19790:3;19775:19;;19568:232::o;19987:248::-;20161:25;;;20217:2;20202:18;;20195:34;20149:2;20134:18;;20116:119::o;20240:319::-;20442:25;;;20498:2;20483:18;;20476:34;;;;20541:2;20526:18;;20519:34;20430:2;20415:18;;20397:162::o;20564:533::-;;;20707:11;20694:25;20801:2;20797:7;20786:8;20770:14;20766:29;20762:43;20742:18;20738:68;20728:2;;20823:4;20817;20810:18;20728:2;20853:33;;20905:20;;;-1:-1:-1;20948:18:1;20937:30;;20934:2;;;20983:4;20977;20970:18;20934:2;21019:4;21007:17;;-1:-1:-1;21050:14:1;21046:27;;;21036:38;;21033:2;;;21087:1;21084;21077:12;21102:513;;;21229:3;21216:17;21315:2;21311:7;21300:8;21284:14;21280:29;21276:43;21256:18;21252:68;21242:2;;21338:5;21331;21324:20;21242:2;21370:33;;21474:4;21461:18;;;-1:-1:-1;21422:21:1;;-1:-1:-1;21502:18:1;21491:30;;21488:2;;;21534:1;21531;21524:12;21488:2;21584:6;21568:14;21564:27;21554:8;21550:42;21547:2;;;21605:1;21602;21595:12;21620:258;21692:1;21702:113;21716:6;21713:1;21710:13;21702:113;;;21792:11;;;21786:18;21773:11;;;21766:39;21738:2;21731:10;21702:113;;;21833:6;21830:1;21827:13;21824:2;;;-1:-1:-1;;21868:1:1;21850:16;;21843:27;21673:205::o;21883:133::-;-1:-1:-1;;;;;21960:31:1;;21950:42;;21940:2;;22006:1;22003;21996:12;21940:2;21930:86;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    49519,
    54319
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C025200 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7C025200 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xA1251D75 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1AA JUMPI PUSH2 0xBA JUMP JUMPDEST DUP1 PUSH4 0x2E95B6C8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x6C4A483E EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x11F JUMPI PUSH2 0xBA JUMP JUMPDEST CALLDATASIZE PUSH2 0xBA JUMPI CALLER ORIGIN EQ ISZERO PUSH2 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x221C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x80C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP3 SWAP2 SWAP1 PUSH2 0x220E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0xCD0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0xD2 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0xD21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0xE5 SHL PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x240BC6B PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x40 DUP3 PUSH1 0x4 DUP5 DUP8 GAS STATICCALL PUSH2 0x217 JUMPI PUSH2 0x217 PUSH2 0x1D1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD DUP7 ISZERO PUSH2 0x226 JUMPI SWAP1 JUMPDEST PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP5 MSTORE DUP8 DUP6 MUL PUSH4 0x3B9ACA00 SWAP3 SWAP1 SWAP3 MUL DUP3 ADD SWAP2 MUL DIV SWAP1 POP DUP5 DUP1 ISZERO PUSH2 0x25C JUMPI DUP2 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE JUMPDEST POP DUP7 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0xA4 DUP5 PUSH1 0x0 DUP9 GAS CALL PUSH2 0x296 JUMPI PUSH2 0x296 PUSH2 0x1D1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x4 PUSH1 0x64 CALLDATALOAD ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP3 ADD SWAP2 POP DUP1 PUSH1 0x20 MUL DUP3 ADD SWAP1 POP DUP2 CALLDATALOAD DUP10 PUSH1 0x0 DUP2 EQ PUSH2 0x332 JUMPI CALLVALUE ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F1 PUSH1 0x55 PUSH18 0x11696E76616C6964206D73672E76616C7565 PUSH1 0x58 SHL PUSH2 0x1DB JUMP JUMPDEST PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP7 ADD MSTORE DUP10 PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 DUP8 PUSH1 0x0 DUP16 GAS CALL PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST CALLVALUE DUP11 EQ PUSH2 0x359 JUMPI PUSH2 0x359 PUSH1 0x55 PUSH18 0x11696E76616C6964206D73672E76616C7565 PUSH1 0x58 SHL PUSH2 0x1DB JUMP JUMPDEST PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP6 MSTORE PUSH1 0x0 DUP1 PUSH1 0x4 DUP8 DUP14 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 GAS CALL PUSH2 0x38D JUMPI PUSH2 0x38D PUSH2 0x1D1 JUMP JUMPDEST PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP7 ADD MSTORE DUP10 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x44 DUP8 PUSH1 0x0 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 GAS CALL PUSH2 0x3D7 JUMPI PUSH2 0x3D7 PUSH2 0x1D1 JUMP JUMPDEST POP DUP9 SWAP5 POP PUSH1 0x20 DUP4 ADD JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x428 JUMPI DUP1 CALLDATALOAD PUSH2 0x41C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL DUP6 AND PUSH1 0xA0 SHR PUSH1 0x1 PUSH1 0xFF SHL DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP12 DUP12 PUSH2 0x1F6 JUMP JUMPDEST SWAP7 POP SWAP2 POP PUSH1 0x20 ADD PUSH2 0x3E0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFE SHL DUP2 AND DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x45F ADDRESS PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL DUP5 AND PUSH1 0xA0 SHR PUSH1 0x1 PUSH1 0xFF SHL DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP11 DUP11 PUSH2 0x1F6 JUMP JUMPDEST SWAP6 POP PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP6 MSTORE DUP6 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x24 DUP8 PUSH1 0x0 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 GAS CALL PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 CALLER GAS CALL PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x4E0 CALLER PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL DUP5 AND PUSH1 0xA0 SHR PUSH1 0x1 PUSH1 0xFF SHL DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP11 DUP11 PUSH2 0x1F6 JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP POP POP DUP4 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH2 0x518 PUSH1 0x5A PUSH29 0x164D696E2072657475726E206E6F742072656163686564000000000000 PUSH2 0x1DB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 GAS SWAP1 POP PUSH1 0x0 PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH1 0x8 AND ISZERO PUSH2 0x540 JUMPI POP CALLER PUSH2 0x56C JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH1 0x10 AND ISZERO PUSH2 0x554 JUMPI POP ORIGIN PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7C025200 PUSH1 0xE0 SHL DUP13 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x598 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x616 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x63D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x1B02 JUMP JUMPDEST POP SWAP7 POP PUSH2 0x6D7 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x66F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH32 0x8C379A0AFCC32B1A39302F7CB8073359698411AB5FD6E3EDB2C02C0B5FBA8AA PUSH2 0x6C1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x29BBB0B8103330B4B632B21D1 PUSH1 0x9D SHL DUP2 MSTORE POP PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D97832E PUSH2 0x6F4 GAS DUP10 SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP15 PUSH1 0xC0 ADD CALLDATALOAD PUSH1 0x0 CALLDATASIZE SWAP1 POP PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79D229F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x79D229F SWAP1 PUSH2 0x7A4 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST SWAP7 POP JUMPDEST GAS SWAP8 POP POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x814 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x825 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x89D PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8AE PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x8E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x104D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x2014 JUMP JUMPDEST DUP3 PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x944 PUSH1 0x20 DUP9 ADD DUP9 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x958 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 AND ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x975 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x980 JUMPI PUSH1 0x0 PUSH2 0x986 JUMP JUMPDEST DUP8 PUSH1 0x80 ADD CALLDATALOAD JUMPDEST CALLVALUE GT PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x9BB DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x9C6 JUMPI PUSH1 0x0 PUSH2 0x9CC JUMP JUMPDEST DUP8 PUSH1 0x80 ADD CALLDATALOAD JUMPDEST CALLVALUE EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x4 DUP4 AND ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA05 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F8 JUMP JUMPDEST ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0xA3D DUP3 PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH2 0xA38 PUSH1 0xE0 DUP13 ADD DUP13 PUSH2 0x2232 JUMP JUMPDEST PUSH2 0x1134 JUMP JUMPDEST PUSH2 0xA67 CALLER PUSH2 0xA51 PUSH1 0x60 DUP12 ADD PUSH1 0x40 DUP13 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA7A PUSH1 0x80 DUP12 ADD PUSH1 0x60 DUP13 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA9D JUMPI PUSH2 0xA98 PUSH1 0x80 DUP11 ADD PUSH1 0x60 DUP12 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 AND PUSH2 0xAB2 JUMPI PUSH1 0x0 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0xAC5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER PUSH2 0x133F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xADC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x133F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH4 0xD9C45357 PUSH1 0xE0 SHL DUP15 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xB22 SWAP2 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBBB JUMPI PUSH2 0xBA2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x31B0B636213CBA32B9903330B4B632B21D1 PUSH1 0x75 SHL DUP2 MSTORE POP PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD PUSH2 0xBDF DUP3 PUSH2 0xBD9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP8 PUSH2 0x133F JUMP JUMPDEST SWAP1 PUSH2 0x1021 JUMP JUMPDEST SWAP9 POP PUSH1 0x1 DUP8 AND ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC17 PUSH2 0xC00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER PUSH2 0x133F JUMP JUMPDEST PUSH2 0xBD9 DUP15 PUSH1 0x80 ADD CALLDATALOAD DUP7 PUSH2 0x13E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC27 PUSH1 0xA0 DUP14 ADD CALLDATALOAD DUP3 PUSH2 0x140F JUMP JUMPDEST PUSH2 0xC35 DUP11 PUSH1 0x80 DUP16 ADD CALLDATALOAD PUSH2 0x140F JUMP JUMPDEST LT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST DUP12 PUSH1 0xA0 ADD CALLDATALOAD DUP10 LT ISZERO PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1FDD JUMP JUMPDEST PUSH32 0xD6D4F5681C246C9F42C203E287975AF1601F8DF8035A9251F79AAB5C8F09E2F8 CALLER DUP8 DUP8 DUP8 DUP6 DUP15 PUSH1 0x40 MLOAD PUSH2 0xCB5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 GAS SWAP8 POP POP POP POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD8 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE9 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x208C JUMP JUMPDEST CALLER SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2F DUP9 DUP9 DUP6 DUP6 PUSH2 0x1134 JUMP JUMPDEST PUSH2 0xD3C DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1CA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD50 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD61 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP4 MLOAD LT ISZERO DUP1 ISZERO PUSH2 0xE3B JUMPI POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE24 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xFB SHL EQ JUMPDEST DUP1 ISZERO PUSH2 0xE66 JUMPI POP DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE4F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xC3 PUSH1 0xF8 SHL EQ JUMPDEST DUP1 ISZERO PUSH2 0xE91 JUMPI POP DUP3 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xE7A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x79 PUSH1 0xF8 SHL EQ JUMPDEST DUP1 ISZERO PUSH2 0xEBC JUMPI POP DUP3 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xEA5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x5 PUSH1 0xFD SHL EQ JUMPDEST ISZERO PUSH2 0xF18 JUMPI PUSH1 0x60 PUSH1 0x44 DUP5 ADD SWAP1 POP DUP1 MLOAD PUSH1 0x44 ADD DUP5 MLOAD LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF01 SWAP3 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP PUSH2 0x101B JUMP JUMPDEST DUP3 MLOAD PUSH1 0x24 EQ DUP1 ISZERO PUSH2 0xF48 JUMPI POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF31 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x27 PUSH1 0xF9 SHL EQ JUMPDEST DUP1 ISZERO PUSH2 0xF73 JUMPI POP DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF5C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x9 PUSH1 0xFB SHL EQ JUMPDEST DUP1 ISZERO PUSH2 0xF9E JUMPI POP DUP3 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xF87 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x7B PUSH1 0xF8 SHL EQ JUMPDEST DUP1 ISZERO PUSH2 0xFC9 JUMPI POP DUP3 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xFB2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x71 PUSH1 0xF8 SHL EQ JUMPDEST ISZERO PUSH2 0xFEE JUMPI PUSH1 0x24 DUP4 ADD MLOAD DUP3 PUSH2 0xFDD DUP3 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF01 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP2 PUSH2 0xFF8 DUP5 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1009 SWAP3 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1F29 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x105C DUP4 PUSH2 0x10F8 JUMP JUMPDEST ISZERO PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1097 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x10F3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10BC SWAP3 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x15EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x112C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP2 EQ ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1166 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1180 SWAP2 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x12DE JUMPI PUSH1 0x0 PUSH2 0x1204 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x2832B936B4BA1031B0B636103330B4B632B21D1 PUSH1 0x65 SHL DUP2 MSTORE POP PUSH2 0xE08 JUMP JUMPDEST SWAP1 POP DUP6 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1285 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST LT ISZERO PUSH2 0x12A5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH32 0x8C379A0AFCC32B1A39302F7CB8073359698411AB5FD6E3EDB2C02C0B5FBA8AA DUP2 PUSH1 0x40 MLOAD PUSH2 0x12D4 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12E1 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1308 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP4 PUSH2 0x10F8 JUMP JUMPDEST ISZERO PUSH2 0x1360 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND BALANCE PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x138C SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST SWAP1 POP PUSH2 0x101B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1E99 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x141E JUMPI POP PUSH1 0x0 PUSH2 0x101B JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x142B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x112C DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x145F SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 DUP2 MUL ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14E8 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1511 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x15E6 JUMPI DUP3 PUSH1 0x4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1543 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0x10 DUP2 LT PUSH2 0x1561 JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 PUSH1 0x2 MUL PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1577 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x159B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x15B1 JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 PUSH1 0x2 MUL PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x15C7 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 ADD PUSH2 0x152B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x164B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x166D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x215E JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x12E1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1688 SWAP2 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1733 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x10F3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1717 SWAP2 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x10F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1742 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x174A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x1775 DUP6 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x1791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17FF DUP3 DUP3 DUP7 PUSH2 0x1810 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x181F JUMPI POP DUP2 PUSH2 0x1408 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x182F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x112F DUP2 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1865 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x187C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18AE JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1408 DUP2 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1408 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x192E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1939 DUP2 PUSH2 0x22E8 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1955 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP1 DUP7 ADD SWAP1 PUSH2 0x100 DUP3 DUP10 SUB SLT ISZERO PUSH2 0x1969 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x197E JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x198B DUP8 DUP3 DUP9 ADD PUSH2 0x189D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x19B4 DUP2 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x19E1 DUP2 PUSH2 0x22E8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A06 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1A11 DUP2 PUSH2 0x22E8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A3A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A46 DUP9 DUP3 DUP10 ADD PUSH2 0x1854 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A71 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A7C DUP2 PUSH2 0x22E8 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1AA6 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1AB2 DUP12 DUP4 DUP13 ADD PUSH2 0x1854 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ACA JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1AD7 DUP11 DUP3 DUP12 ADD PUSH2 0x189D JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFB JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B14 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE DUP3 DUP3 PUSH1 0x20 DUP7 ADD CALLDATACOPY DUP1 PUSH1 0x20 DUP5 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP6 ADD ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP2 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0x4 DUP5 ADD CALLDATACOPY SWAP2 ADD PUSH1 0x4 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B92 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22BC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1BAE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x22BC JUMP JUMPDEST PUSH6 0xA0C2DCD2C65 PUSH1 0xD3 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1BD1 DUP2 PUSH1 0x6 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x29 PUSH1 0xF8 SHL PUSH1 0x6 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1BFD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x22BC JUMP JUMPDEST PUSH8 0xAADCD6DCDEEEDC5 PUSH1 0xC3 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1C22 DUP2 PUSH1 0x8 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x29 PUSH1 0xF8 SHL PUSH1 0x8 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x9 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C4E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x22BC JUMP JUMPDEST PUSH6 0x8AE4E4DEE45 PUSH1 0xD3 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1BD1 DUP2 PUSH1 0x6 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x22BC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP6 AND PUSH1 0x40 DUP6 ADD MSTORE SWAP4 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D4B SWAP1 DUP4 ADD PUSH2 0x1D46 DUP8 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1D57 PUSH1 0x20 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x1D64 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x1B25 JUMP JUMPDEST POP PUSH2 0x1D71 PUSH1 0x40 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x1B25 JUMP JUMPDEST POP PUSH2 0x1D8B PUSH1 0x60 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x1D98 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x1B25 JUMP JUMPDEST POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP7 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE PUSH1 0xC0 DUP7 ADD CALLDATALOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x1DC7 PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0x2277 JUMP JUMPDEST DUP3 PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1DDD PUSH2 0x160 DUP7 ADD DUP3 DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 POP POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x17FF DUP2 DUP6 DUP8 PUSH2 0x1B32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E13 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x86D8C2D2DA40E8DED6CADC40D2E6408AA89 PUSH1 0x73 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1155120819195C1BDCDA5D081C995A9958DD1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964206D73672E76616C7565 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E636F727265637420434849206275726E20666C6167730000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52657475726E20616D6F756E74206973206E6F7420656E6F7567680000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E2072657475726E2073686F756C64206E6F742062652030000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433230206F7065726174696F6E20646964206E6F74207375636365656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x646174612073686F756C64206265206E6F74207A65726F000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103932BB32B93A103932B0B9B7B7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1B1BDDCB5B195D995B0818D85B1B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2248 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2262 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x228D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12E1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xD4 0xED LOG1 0x4C SMOD 0x5E RETURNDATASIZE EXTCODESIZE DELEGATECALL LOG4 MUL JUMP CHAINID LOG3 SHR 0x4C 0xD DUP11 SWAP2 0xB2 PUSH27 0x27005F720B77F7CF153A64736F6C63430007060033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "12": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7C025200"
    },
    "25": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7C025200"
    },
    "36": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "40": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x83197EF0"
    },
    "47": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "51": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "62": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA1251D75"
    },
    "69": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x197"
    },
    "73": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "84": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "88": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E95B6C8"
    },
    "96": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF"
    },
    "100": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6C4A483E"
    },
    "107": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "111": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "118": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "122": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x78E3214F"
    },
    "129": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "133": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "137": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "143": {
      "fn": null,
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "144": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43221,
        43231
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "145": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43235,
        43244
      ],
      "op": "ORIGIN",
      "path": "0"
    },
    "146": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43221,
        43244
      ],
      "op": "EQ",
      "path": "0"
    },
    "147": {
      "branch": 69,
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43221,
        43244
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "148": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "151": {
      "branch": 69,
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "154": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "161": {
      "op": "SHL"
    },
    "162": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "163": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "164": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "166": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "ADD",
      "path": "0"
    },
    "167": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "170": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "171": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED0"
    },
    "174": {
      "fn": "UnoswapRouter.<receive>",
      "jump": "i",
      "offset": [
        43213,
        43269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "175": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "176": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "178": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "179": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "180": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "181": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "SUB",
      "path": "0"
    },
    "182": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "183": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "REVERT",
      "path": "0"
    },
    "184": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        43213,
        43269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "offset": [
        49519,
        54319
      ],
      "op": "STOP",
      "path": "0"
    },
    "186": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        49519,
        54319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "187": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        49519,
        54319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "189": {
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        49519,
        54319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "190": {
      "first_revert": true,
      "fn": "UnoswapRouter.<receive>",
      "offset": [
        49519,
        54319
      ],
      "op": "REVERT",
      "path": "0"
    },
    "191": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "192": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "195": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "198": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "199": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "201": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19EF"
    },
    "204": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "209": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMP",
      "path": "0"
    },
    "210": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "213": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "214": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "217": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "218": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "219": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C71"
    },
    "222": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "224": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "226": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "227": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "229": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "SUB",
      "path": "0"
    },
    "230": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "231": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "RETURN",
      "path": "0"
    },
    "232": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "236": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "239": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "240": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "242": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1919"
    },
    "245": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMP",
      "path": "0"
    },
    "246": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "247": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x521"
    },
    "250": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMP",
      "path": "0"
    },
    "251": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "254": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "255": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "258": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "259": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "260": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "261": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "262": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x221C"
    },
    "265": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMP",
      "path": "0"
    },
    "266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "DUP1",
      "path": "0"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "DUP1",
      "path": "0"
    },
    "277": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "REVERT",
      "path": "0"
    },
    "278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "POP",
      "path": "0"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80C"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        13011,
        13156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "289": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "291": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "294": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "295": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "297": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "DUP1",
      "path": "0"
    },
    "298": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "REVERT",
      "path": "0"
    },
    "299": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "300": {
      "op": "POP"
    },
    "301": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "304": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "307": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "308": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "310": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C4"
    },
    "313": {
      "fn": "AggregationRouterV3.rescueFunds",
      "jump": "i",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMP",
      "path": "0"
    },
    "314": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "315": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x895"
    },
    "318": {
      "fn": "AggregationRouterV3.rescueFunds",
      "jump": "i",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMP",
      "path": "0"
    },
    "319": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "323": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "326": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "327": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "329": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1919"
    },
    "332": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "337": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "338": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "341": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "342": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "345": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "346": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "347": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "348": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220E"
    },
    "351": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "352": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "354": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "356": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "359": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "360": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "362": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "363": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "REVERT",
      "path": "0"
    },
    "364": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "POP",
      "path": "0"
    },
    "366": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "369": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD0"
    },
    "372": {
      "fn": "AggregationRouterV3.destroy",
      "jump": "i",
      "offset": [
        54238,
        54317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "373": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "375": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "DUP1",
      "path": "0"
    },
    "376": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "377": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "380": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "381": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "383": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "DUP1",
      "path": "0"
    },
    "384": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "REVERT",
      "path": "0"
    },
    "385": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "386": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "POP",
      "path": "0"
    },
    "387": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18A"
    },
    "390": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "393": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "394": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "395": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "397": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "398": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "401": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "403": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7A"
    },
    "406": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "407": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "408": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "411": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A5"
    },
    "414": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "415": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "417": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A57"
    },
    "420": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "jump": "i",
      "offset": [
        43282,
        43613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "421": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "422": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD21"
    },
    "425": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "jump": "i",
      "offset": [
        43282,
        43613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "DUP1",
      "path": "0"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "436": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "DUP1",
      "path": "0"
    },
    "437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "REVERT",
      "path": "0"
    },
    "438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "op": "POP"
    },
    "440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DD"
    },
    "452": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD48"
    },
    "457": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "458": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43619,
        49397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "459": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43781,
        43801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "461": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43880,
        44014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "464": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43880,
        44014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "465": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43880,
        44014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43939,
        43955
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "467": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43936,
        43937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "469": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43933,
        43934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "470": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43918,
        43956
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "471": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43983,
        43999
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "472": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43980,
        43981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "474": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43973,
        44000
      ],
      "op": "REVERT",
      "path": "0"
    },
    "475": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44028,
        44331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44087,
        44088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44080,
        44157
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44181,
        44185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "493": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44174,
        44254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "494": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44284,
        44285
      ],
      "op": "DUP1",
      "path": "0"
    },
    "495": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44278,
        44282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "497": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44271,
        44286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "498": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44313,
        44316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "499": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44310,
        44311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "501": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44303,
        44317
      ],
      "op": "REVERT",
      "path": "0"
    },
    "502": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44345,
        45716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "503": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44345,
        45716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "505": {
      "op": "PUSH4",
      "value": "0x240BC6B"
    },
    "510": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "512": {
      "op": "SHL"
    },
    "513": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44445,
        44453
      ],
      "op": "DUP3",
      "path": "0"
    },
    "514": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44438,
        44495
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "515": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44571,
        44575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "517": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44561,
        44569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "518": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44556,
        44559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "520": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44546,
        44554
      ],
      "op": "DUP5",
      "path": "0"
    },
    "521": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44540,
        44544
      ],
      "op": "DUP8",
      "path": "0"
    },
    "522": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44533,
        44538
      ],
      "op": "GAS",
      "path": "0"
    },
    "523": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44522,
        44576
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "524": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44512,
        44514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "527": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44512,
        44514
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "528": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44600,
        44610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "531": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44600,
        44610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "534": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        44600,
        44610
      ],
      "op": "JUMP",
      "path": "0"
    },
    "535": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44600,
        44610
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44668,
        44676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "537": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44662,
        44677
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "538": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44730,
        44734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "540": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44720,
        44728
      ],
      "op": "DUP4",
      "path": "0"
    },
    "541": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44716,
        44735
      ],
      "op": "ADD",
      "path": "0"
    },
    "542": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44710,
        44736
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "543": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44756,
        44764
      ],
      "op": "DUP7",
      "path": "0"
    },
    "544": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44753,
        44755
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "545": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44753,
        44755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x226"
    },
    "548": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44753,
        44755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "549": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44839,
        44847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "550": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44753,
        44755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45055,
        45108
      ],
      "op": "DUP5",
      "path": "0"
    },
    "560": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45055,
        45108
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "561": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44925,
        44951
      ],
      "op": "DUP8",
      "path": "0"
    },
    "562": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44925,
        44951
      ],
      "op": "DUP6",
      "path": "0"
    },
    "563": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44925,
        44951
      ],
      "op": "MUL",
      "path": "0"
    },
    "564": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45022,
        45034
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3B9ACA00"
    },
    "569": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45008,
        45035
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "570": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45008,
        45035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "571": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45008,
        45035
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "572": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45008,
        45035
      ],
      "op": "MUL",
      "path": "0"
    },
    "573": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44999,
        45036
      ],
      "op": "DUP3",
      "path": "0"
    },
    "574": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44999,
        45036
      ],
      "op": "ADD",
      "path": "0"
    },
    "575": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44979,
        44997
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "576": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44979,
        44997
      ],
      "op": "MUL",
      "path": "0"
    },
    "577": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44975,
        45037
      ],
      "op": "DIV",
      "path": "0"
    },
    "578": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44975,
        45037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "579": {
      "op": "POP"
    },
    "580": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45132,
        45140
      ],
      "op": "DUP5",
      "path": "0"
    },
    "581": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45157,
        45287
      ],
      "op": "DUP1",
      "path": "0"
    },
    "582": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45157,
        45287
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "583": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45157,
        45287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "586": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45157,
        45287
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "587": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45362,
        45365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45355,
        45359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "590": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45345,
        45353
      ],
      "op": "DUP5",
      "path": "0"
    },
    "591": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45341,
        45360
      ],
      "op": "ADD",
      "path": "0"
    },
    "592": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45334,
        45366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "593": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45415,
        45416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "595": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45408,
        45412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "597": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45398,
        45406
      ],
      "op": "DUP5",
      "path": "0"
    },
    "598": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45394,
        45413
      ],
      "op": "ADD",
      "path": "0"
    },
    "599": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45387,
        45417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "600": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45125,
        45435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26A"
    },
    "603": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45125,
        45435
      ],
      "op": "JUMP",
      "path": "0"
    },
    "604": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45157,
        45287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "605": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45214,
        45215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "607": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45207,
        45211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "609": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45197,
        45205
      ],
      "op": "DUP5",
      "path": "0"
    },
    "610": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45193,
        45212
      ],
      "op": "ADD",
      "path": "0"
    },
    "611": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45186,
        45216
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "612": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45265,
        45268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "613": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45258,
        45262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "615": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45248,
        45256
      ],
      "op": "DUP5",
      "path": "0"
    },
    "616": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45244,
        45263
      ],
      "op": "ADD",
      "path": "0"
    },
    "617": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45237,
        45269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45125,
        45435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "619": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45125,
        45435
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45480,
        45483
      ],
      "op": "DUP7",
      "path": "0"
    },
    "621": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45473,
        45477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "623": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45463,
        45471
      ],
      "op": "DUP4",
      "path": "0"
    },
    "624": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45459,
        45478
      ],
      "op": "ADD",
      "path": "0"
    },
    "625": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45452,
        45484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "626": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45529,
        45533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "628": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45522,
        45526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "630": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45512,
        45520
      ],
      "op": "DUP4",
      "path": "0"
    },
    "631": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45508,
        45527
      ],
      "op": "ADD",
      "path": "0"
    },
    "632": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45501,
        45534
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45579,
        45580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "635": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45572,
        45576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x84"
    },
    "637": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45562,
        45570
      ],
      "op": "DUP4",
      "path": "0"
    },
    "638": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45558,
        45577
      ],
      "op": "ADD",
      "path": "0"
    },
    "639": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45551,
        45581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "640": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45648,
        45649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "642": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45645,
        45646
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45639,
        45643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA4"
    },
    "645": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45629,
        45637
      ],
      "op": "DUP5",
      "path": "0"
    },
    "646": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45626,
        45627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "648": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45620,
        45624
      ],
      "op": "DUP9",
      "path": "0"
    },
    "649": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45613,
        45618
      ],
      "op": "GAS",
      "path": "0"
    },
    "650": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45608,
        45650
      ],
      "op": "CALL",
      "path": "0"
    },
    "651": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45598,
        45600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "654": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45598,
        45600
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "655": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45674,
        45684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "658": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45674,
        45684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "661": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        45674,
        45684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "662": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45674,
        45684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "664": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "665": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "POP",
      "path": "0"
    },
    "666": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "POP",
      "path": "0"
    },
    "667": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "POP",
      "path": "0"
    },
    "668": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "POP",
      "path": "0"
    },
    "669": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "POP",
      "path": "0"
    },
    "670": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "POP",
      "path": "0"
    },
    "671": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "o",
      "offset": [
        44420,
        45716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "672": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        44420,
        45716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "673": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45752,
        45756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "675": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45746,
        45757
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "676": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45797,
        45801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "678": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45787,
        45795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "679": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45783,
        45802
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45777,
        45781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "682": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45770,
        45803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "683": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45860,
        45863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "685": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45853,
        45857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "687": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45840,
        45858
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "688": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45836,
        45864
      ],
      "op": "ADD",
      "path": "0"
    },
    "689": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45912,
        45923
      ],
      "op": "DUP1",
      "path": "0"
    },
    "690": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45899,
        45924
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "691": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45969,
        45973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "693": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45956,
        45967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "694": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45952,
        45974
      ],
      "op": "ADD",
      "path": "0"
    },
    "695": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45937,
        45974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "696": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45937,
        45974
      ],
      "op": "POP",
      "path": "0"
    },
    "697": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46032,
        46046
      ],
      "op": "DUP1",
      "path": "0"
    },
    "698": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46026,
        46030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "700": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46022,
        46047
      ],
      "op": "MUL",
      "path": "0"
    },
    "701": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46009,
        46020
      ],
      "op": "DUP3",
      "path": "0"
    },
    "702": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46005,
        46048
      ],
      "op": "ADD",
      "path": "0"
    },
    "703": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45987,
        46048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "704": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        45987,
        46048
      ],
      "op": "POP",
      "path": "0"
    },
    "705": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46089,
        46100
      ],
      "op": "DUP2",
      "path": "0"
    },
    "706": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46076,
        46101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "707": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46121,
        46129
      ],
      "op": "DUP10",
      "path": "0"
    },
    "708": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46147,
        46148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "710": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46142,
        46876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "711": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46142,
        46876
      ],
      "op": "EQ",
      "path": "0"
    },
    "712": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46142,
        46876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "715": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46142,
        46876
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "716": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46918,
        46929
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "717": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46915,
        46917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "718": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46915,
        46917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "721": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46915,
        46917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "722": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46952,
        47042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "725": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47037,
        47041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x55"
    },
    "727": {
      "op": "PUSH18",
      "value": "0x11696E76616C6964206D73672E76616C7565"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46952,
        47042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "752": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        46952,
        47042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "753": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46952,
        47042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "754": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47109,
        47117
      ],
      "op": "DUP6",
      "path": "0"
    },
    "763": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47102,
        47151
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "764": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47195,
        47203
      ],
      "op": "CALLER",
      "path": "0"
    },
    "765": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47189,
        47192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "767": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47179,
        47187
      ],
      "op": "DUP7",
      "path": "0"
    },
    "768": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47175,
        47193
      ],
      "op": "ADD",
      "path": "0"
    },
    "769": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47168,
        47204
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "776": {
      "op": "SHL"
    },
    "777": {
      "op": "SUB"
    },
    "778": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47253,
        47260
      ],
      "op": "DUP3",
      "path": "0"
    },
    "779": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47249,
        47276
      ],
      "op": "AND",
      "path": "0"
    },
    "780": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47242,
        47246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "782": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47232,
        47240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "783": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47228,
        47247
      ],
      "op": "ADD",
      "path": "0"
    },
    "784": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47221,
        47277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "785": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47322,
        47328
      ],
      "op": "DUP10",
      "path": "0"
    },
    "786": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47315,
        47319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "788": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47305,
        47313
      ],
      "op": "DUP7",
      "path": "0"
    },
    "789": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47301,
        47320
      ],
      "op": "ADD",
      "path": "0"
    },
    "790": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47294,
        47329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "791": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47400,
        47401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "793": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47397,
        47398
      ],
      "op": "DUP1",
      "path": "0"
    },
    "794": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47391,
        47395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "796": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47381,
        47389
      ],
      "op": "DUP8",
      "path": "0"
    },
    "797": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47378,
        47379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "799": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47368,
        47376
      ],
      "op": "DUP16",
      "path": "0"
    },
    "800": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47361,
        47366
      ],
      "op": "GAS",
      "path": "0"
    },
    "801": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47356,
        47402
      ],
      "op": "CALL",
      "path": "0"
    },
    "802": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47346,
        47348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "805": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47346,
        47348
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "806": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47426,
        47436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "809": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47426,
        47436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "812": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        47426,
        47436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "813": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47426,
        47436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46114,
        47468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D7"
    },
    "817": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46114,
        47468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "818": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46142,
        46876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46188,
        46199
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "820": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46180,
        46186
      ],
      "op": "DUP11",
      "path": "0"
    },
    "821": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46177,
        46200
      ],
      "op": "EQ",
      "path": "0"
    },
    "822": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46167,
        46169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "825": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46167,
        46169
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "826": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46224,
        46314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "829": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46309,
        46313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x55"
    },
    "831": {
      "op": "PUSH18",
      "value": "0x11696E76616C6964206D73672E76616C7565"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "852": {
      "op": "SHL"
    },
    "853": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46224,
        46314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "856": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        46224,
        46314
      ],
      "op": "JUMP",
      "path": "0"
    },
    "857": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46224,
        46314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "op": "PUSH4",
      "value": "0xD0E30DB"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46381,
        46389
      ],
      "op": "DUP6",
      "path": "0"
    },
    "867": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46374,
        46422
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "868": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46494,
        46495
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "870": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46491,
        46492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "871": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46486,
        46489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "873": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46476,
        46484
      ],
      "op": "DUP8",
      "path": "0"
    },
    "874": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46468,
        46474
      ],
      "op": "DUP14",
      "path": "0"
    },
    "875": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46461,
        46466
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "896": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46454,
        46459
      ],
      "op": "GAS",
      "path": "0"
    },
    "897": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46449,
        46496
      ],
      "op": "CALL",
      "path": "0"
    },
    "898": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46439,
        46441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "901": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46439,
        46441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "902": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46520,
        46530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "905": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46520,
        46530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "908": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        46520,
        46530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "909": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46520,
        46530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "910": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46573,
        46581
      ],
      "op": "DUP6",
      "path": "0"
    },
    "919": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46566,
        46616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "SUB"
    },
    "928": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46664,
        46671
      ],
      "op": "DUP3",
      "path": "0"
    },
    "929": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46660,
        46687
      ],
      "op": "AND",
      "path": "0"
    },
    "930": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46654,
        46657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "932": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46644,
        46652
      ],
      "op": "DUP7",
      "path": "0"
    },
    "933": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46640,
        46658
      ],
      "op": "ADD",
      "path": "0"
    },
    "934": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46633,
        46688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "935": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46733,
        46739
      ],
      "op": "DUP10",
      "path": "0"
    },
    "936": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46726,
        46730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "938": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46716,
        46724
      ],
      "op": "DUP7",
      "path": "0"
    },
    "939": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46712,
        46731
      ],
      "op": "ADD",
      "path": "0"
    },
    "940": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46705,
        46740
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "941": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46808,
        46809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "943": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46805,
        46806
      ],
      "op": "DUP1",
      "path": "0"
    },
    "944": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46799,
        46803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "946": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46789,
        46797
      ],
      "op": "DUP8",
      "path": "0"
    },
    "947": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46786,
        46787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "949": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46779,
        46784
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "970": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46772,
        46777
      ],
      "op": "GAS",
      "path": "0"
    },
    "971": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46767,
        46810
      ],
      "op": "CALL",
      "path": "0"
    },
    "972": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46757,
        46759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D7"
    },
    "975": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46757,
        46759
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "976": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46834,
        46844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D7"
    },
    "979": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46834,
        46844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "982": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        46834,
        46844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "983": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46834,
        46844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "984": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        46114,
        47468
      ],
      "op": "POP",
      "path": "0"
    },
    "985": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47498,
        47504
      ],
      "op": "DUP9",
      "path": "0"
    },
    "986": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47482,
        47504
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "987": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47482,
        47504
      ],
      "op": "POP",
      "path": "0"
    },
    "988": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47549,
        47553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "990": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47536,
        47547
      ],
      "op": "DUP4",
      "path": "0"
    },
    "991": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47532,
        47554
      ],
      "op": "ADD",
      "path": "0"
    },
    "992": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47562,
        47576
      ],
      "op": "DUP3",
      "path": "0"
    },
    "994": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47559,
        47560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "995": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47556,
        47577
      ],
      "op": "LT",
      "path": "0"
    },
    "996": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "997": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x428"
    },
    "1000": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1001": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47648,
        47649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1002": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47635,
        47650
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1003": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47684,
        47996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1012": {
      "op": "SHL"
    },
    "1013": {
      "op": "SUB"
    },
    "1014": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47951,
        47962
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1015": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47947,
        47978
      ],
      "op": "AND",
      "path": "0"
    },
    "1016": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47899,
        47906
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1025": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47895,
        47924
      ],
      "op": "AND",
      "path": "0"
    },
    "1026": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47876,
        47893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1028": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47872,
        47925
      ],
      "op": "SHR",
      "path": "0"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47827,
        47834
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1035": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47823,
        47850
      ],
      "op": "AND",
      "path": "0"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47778,
        47785
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1045": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47774,
        47801
      ],
      "op": "AND",
      "path": "0"
    },
    "1046": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47740,
        47752
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1047": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47710,
        47718
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1048": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47684,
        47996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "1051": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        47684,
        47996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47684,
        47996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47668,
        47996
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48025,
        48036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1056": {
      "op": "POP"
    },
    "1057": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47591,
        47595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1059": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47584,
        47596
      ],
      "op": "ADD",
      "path": "0"
    },
    "1060": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0"
    },
    "1063": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1064": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        47518,
        48050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0xFE"
    },
    "1070": {
      "op": "SHL"
    },
    "1071": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48071,
        48095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1072": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48071,
        48095
      ],
      "op": "AND",
      "path": "0"
    },
    "1073": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48108,
        48452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1074": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48108,
        48452
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1075": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48108,
        48452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B7"
    },
    "1078": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48108,
        48452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1079": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48507,
        48797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45F"
    },
    "1082": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48770,
        48779
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1083": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48722,
        48729
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1092": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48718,
        48747
      ],
      "op": "AND",
      "path": "0"
    },
    "1093": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48699,
        48716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1095": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48695,
        48748
      ],
      "op": "SHR",
      "path": "0"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48650,
        48657
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1102": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48646,
        48673
      ],
      "op": "AND",
      "path": "0"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "SUB"
    },
    "1111": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48601,
        48608
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1112": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48597,
        48624
      ],
      "op": "AND",
      "path": "0"
    },
    "1113": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48563,
        48575
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1114": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48533,
        48541
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1115": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48507,
        48797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "1118": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        48507,
        48797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1119": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48507,
        48797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1120": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48491,
        48797
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1121": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48491,
        48797
      ],
      "op": "POP",
      "path": "0"
    },
    "1122": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48822,
        48830
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1131": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48815,
        48864
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1132": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48909,
        48921
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1133": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48902,
        48906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1135": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48892,
        48900
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1136": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48888,
        48907
      ],
      "op": "ADD",
      "path": "0"
    },
    "1137": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48881,
        48922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1138": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48990,
        48991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1140": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48987,
        48988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1141": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48981,
        48985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1143": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48971,
        48979
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1144": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48968,
        48969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1146": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48961,
        48966
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "1167": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48954,
        48959
      ],
      "op": "GAS",
      "path": "0"
    },
    "1168": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48949,
        48992
      ],
      "op": "CALL",
      "path": "0"
    },
    "1169": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48939,
        48941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49C"
    },
    "1172": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48939,
        48941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1173": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49016,
        49026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49C"
    },
    "1176": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49016,
        49026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "1179": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        49016,
        49026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1180": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49016,
        49026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1181": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49117,
        49118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1183": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49114,
        49115
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1184": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49111,
        49112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1186": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49108,
        49109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49094,
        49106
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1188": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49084,
        49092
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1189": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49077,
        49082
      ],
      "op": "GAS",
      "path": "0"
    },
    "1190": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49072,
        49119
      ],
      "op": "CALL",
      "path": "0"
    },
    "1191": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49062,
        49064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B2"
    },
    "1194": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49062,
        49064
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1195": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49143,
        49153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B2"
    },
    "1198": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49143,
        49153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "1201": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        49143,
        49153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1202": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49143,
        49153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1203": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E3"
    },
    "1206": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1207": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48108,
        48452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1208": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48149,
        48438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E0"
    },
    "1211": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48412,
        48420
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1212": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48364,
        48371
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1221": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48360,
        48389
      ],
      "op": "AND",
      "path": "0"
    },
    "1222": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48341,
        48358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1224": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48337,
        48390
      ],
      "op": "SHR",
      "path": "0"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48292,
        48299
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1231": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48288,
        48315
      ],
      "op": "AND",
      "path": "0"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48243,
        48250
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1241": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48239,
        48266
      ],
      "op": "AND",
      "path": "0"
    },
    "1242": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48205,
        48217
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1243": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48175,
        48183
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1244": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48149,
        48438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "1247": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        48149,
        48438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1248": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48149,
        48438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1249": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48133,
        48438
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1250": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48133,
        48438
      ],
      "op": "POP",
      "path": "0"
    },
    "1251": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1252": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "POP",
      "path": "0"
    },
    "1253": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "POP",
      "path": "0"
    },
    "1254": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "POP",
      "path": "0"
    },
    "1255": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "POP",
      "path": "0"
    },
    "1256": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        48064,
        49185
      ],
      "op": "POP",
      "path": "0"
    },
    "1257": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49219,
        49228
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1258": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49205,
        49217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1259": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49202,
        49229
      ],
      "op": "LT",
      "path": "0"
    },
    "1260": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49199,
        49201
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1261": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49199,
        49201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x518"
    },
    "1264": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49199,
        49201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1265": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49248,
        49338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x518"
    },
    "1268": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49333,
        49337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5A"
    },
    "1270": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49265,
        49331
      ],
      "op": "PUSH29",
      "path": "0",
      "value": "0x164D696E2072657475726E206E6F742072656163686564000000000000"
    },
    "1300": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49248,
        49338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "1303": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "i",
      "offset": [
        49248,
        49338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1304": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        49248,
        49338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1305": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1306": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1307": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "POP",
      "path": "0"
    },
    "1308": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "POP",
      "path": "0"
    },
    "1309": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "POP",
      "path": "0"
    },
    "1310": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "POP",
      "path": "0"
    },
    "1311": {
      "fn": "UnoswapRouter.unoswap",
      "offset": [
        43822,
        49391
      ],
      "op": "POP",
      "path": "0"
    },
    "1312": {
      "fn": "UnoswapRouter.unoswap",
      "jump": "o",
      "offset": [
        43822,
        49391
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1313": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1314": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50572,
        50592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1316": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50594,
        50609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1317": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50611,
        50627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1319": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50643,
        50661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1320": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50664,
        50673
      ],
      "op": "GAS",
      "path": "0"
    },
    "1321": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50643,
        50673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1322": {
      "op": "POP"
    },
    "1323": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50684,
        50701
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1325": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50728,
        50738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1327": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50728,
        50738
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1328": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50728,
        50738
      ],
      "op": "ADD",
      "path": "0"
    },
    "1329": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50728,
        50738
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1330": {
      "offset": [
        49884,
        49888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1332": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50728,
        50762
      ],
      "op": "AND",
      "path": "0"
    },
    "1333": {
      "branch": 70,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50728,
        50767
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1334": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50724,
        51017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x540"
    },
    "1337": {
      "branch": 70,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50724,
        51017
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1338": {
      "op": "POP"
    },
    "1339": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50795,
        50805
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "1340": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50724,
        51017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "1343": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50724,
        51017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1344": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50724,
        51017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1345": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50826,
        50836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1347": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50826,
        50836
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1348": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50826,
        50836
      ],
      "op": "ADD",
      "path": "0"
    },
    "1349": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50826,
        50836
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1350": {
      "offset": [
        49942,
        49946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "1352": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50826,
        50859
      ],
      "op": "AND",
      "path": "0"
    },
    "1353": {
      "branch": 71,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50826,
        50864
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1354": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50822,
        51017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x554"
    },
    "1357": {
      "branch": 71,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50822,
        51017
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50892,
        50901
      ],
      "op": "ORIGIN",
      "path": "0",
      "statement": 2
    },
    "1360": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50822,
        51017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "1363": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50822,
        51017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1364": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50822,
        51017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1365": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "1367": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1376": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1377": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1379": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "ADD",
      "path": "0"
    },
    "1380": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "1383": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1384": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50972,
        51006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA6"
    },
    "1387": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        50972,
        51006
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1388": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50822,
        51017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1389": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51087,
        51099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1391": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51101,
        51124
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1392": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51136,
        51140
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1399": {
      "op": "SHL"
    },
    "1400": {
      "op": "SUB"
    },
    "1401": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51154
      ],
      "op": "AND",
      "path": "0"
    },
    "1402": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51178,
        51196
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7C025200"
    },
    "1407": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51178,
        51196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1409": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51178,
        51196
      ],
      "op": "SHL",
      "path": "0"
    },
    "1410": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51198,
        51204
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1411": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51206,
        51210
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1412": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51212,
        51216
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1413": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51212,
        51216
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1414": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1416": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1417": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1419": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "ADD",
      "path": "0"
    },
    "1420": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x598"
    },
    "1423": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1424": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1425": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1426": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1427": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1428": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1F"
    },
    "1431": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51155,
        51217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1432": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1433": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1435": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1436": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1439": {
      "op": "NOT"
    },
    "1440": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1441": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1442": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SUB",
      "path": "0"
    },
    "1443": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "ADD",
      "path": "0"
    },
    "1444": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1445": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1446": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1447": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1448": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1449": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1451": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1452": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "ADD",
      "path": "0"
    },
    "1453": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1454": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "AND",
      "path": "0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "SUB"
    },
    "1472": {
      "op": "NOT"
    },
    "1473": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1474": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1475": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "AND",
      "path": "0"
    },
    "1476": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1477": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1478": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1479": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "OR",
      "path": "0"
    },
    "1480": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1481": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1482": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1483": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1484": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1485": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1488": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1489": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51155,
        51217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1490": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B80"
    },
    "1493": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51128,
        51218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1497": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1499": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1500": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1501": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1502": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "SUB",
      "path": "0"
    },
    "1503": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1504": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1505": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "GAS",
      "path": "0"
    },
    "1506": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "1507": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1508": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1509": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1510": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1511": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1512": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1514": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1515": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "EQ",
      "path": "0"
    },
    "1516": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x611"
    },
    "1519": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1520": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1522": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1523": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1524": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1525": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1527": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "NOT",
      "path": "0"
    },
    "1528": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "1530": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1531": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "ADD",
      "path": "0"
    },
    "1532": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "AND",
      "path": "0"
    },
    "1533": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1534": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "ADD",
      "path": "0"
    },
    "1535": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1537": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1538": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1539": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1540": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1541": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1542": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1544": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1546": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1547": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "ADD",
      "path": "0"
    },
    "1548": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1549": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x616"
    },
    "1552": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1553": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1554": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1556": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1557": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1558": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1559": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51128,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1560": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51086,
        51218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1561": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51086,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1562": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51086,
        51218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1563": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51086,
        51218
      ],
      "op": "POP",
      "path": "0"
    },
    "1564": {
      "branch": 72,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51232,
        51239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1565": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1566": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63D"
    },
    "1569": {
      "branch": 72,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1570": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51284,
        51294
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "1571": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1572": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1574": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "ADD",
      "path": "0"
    },
    "1575": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1576": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1577": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1578": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "ADD",
      "path": "0"
    },
    "1579": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1580": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x635"
    },
    "1583": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1584": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1585": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B02"
    },
    "1588": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51273,
        51315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1589": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51273,
        51315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51255,
        51315
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D7"
    },
    "1596": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1597": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1598": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51350,
        51359
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1599": {
      "branch": 73,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51350,
        51363
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1600": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51346,
        51428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x671"
    },
    "1603": {
      "branch": 73,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51346,
        51428
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1604": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "1606": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1607": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51393
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1608": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1609": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51403,
        51412
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1610": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1611": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1612": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "1615": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "MUL",
      "path": "0"
    },
    "1616": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1617": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1619": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1620": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1621": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1622": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51403,
        51412
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1623": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51393
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1624": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1625": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "CALL",
      "path": "0"
    },
    "1626": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1627": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "POP",
      "path": "0"
    },
    "1628": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "POP",
      "path": "0"
    },
    "1629": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "POP",
      "path": "0"
    },
    "1630": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "POP",
      "path": "0"
    },
    "1631": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1632": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1633": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1634": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66F"
    },
    "1637": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1638": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1639": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1641": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1642": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1643": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1644": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1646": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1647": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1648": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51383,
        51413
      ],
      "op": "POP",
      "path": "0"
    },
    "1649": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51346,
        51428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1650": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 6,
      "value": "0x8C379A0AFCC32B1A39302F7CB8073359698411AB5FD6E3EDB2C02C0B5FBA8AA"
    },
    "1683": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1686": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51477,
        51487
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1687": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1689": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1690": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1691": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1693": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "ADD",
      "path": "0"
    },
    "1694": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1696": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1697": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1698": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1700": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1701": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1702": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1704": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "ADD",
      "path": "0"
    },
    "1705": {
      "op": "PUSH13",
      "value": "0x29BBB0B8103330B4B632B21D1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x9D"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1723": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1724": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "POP",
      "path": "0"
    },
    "1725": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE08"
    },
    "1728": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51452,
        51505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1729": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51452,
        51505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1730": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1732": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1733": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CE"
    },
    "1736": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1737": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1738": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF4"
    },
    "1741": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51446,
        51506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1742": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1743": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1745": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1746": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1748": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "SUB",
      "path": "0"
    },
    "1749": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1750": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51446,
        51506
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1751": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51228,
        51517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1752": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51528,
        51536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1754": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51538,
        51552
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1755": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51562
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "op": "SUB"
    },
    "1764": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51575
      ],
      "op": "AND",
      "path": "0"
    },
    "1765": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51575
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1D97832E"
    },
    "1770": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51576,
        51601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F4"
    },
    "1773": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51591,
        51600
      ],
      "op": "GAS",
      "path": "0"
    },
    "1774": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51576,
        51586
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1775": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51576,
        51586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1776": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51576,
        51590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1021"
    },
    "1779": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51576,
        51601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1780": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51576,
        51601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1781": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51603,
        51607
      ],
      "op": "DUP15",
      "path": "0"
    },
    "1782": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51603,
        51613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1784": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51603,
        51613
      ],
      "op": "ADD",
      "path": "0"
    },
    "1785": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51603,
        51613
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1786": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51615,
        51623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1788": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51615,
        51623
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1789": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51615,
        51630
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51615,
        51630
      ],
      "op": "POP",
      "path": "0"
    },
    "1791": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1793": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1794": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1795": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1800": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "AND",
      "path": "0"
    },
    "1801": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1803": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SHL",
      "path": "0"
    },
    "1804": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1805": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1806": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1808": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ADD",
      "path": "0"
    },
    "1809": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71C"
    },
    "1812": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1813": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1814": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1815": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x221C"
    },
    "1819": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1820": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1821": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1823": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1824": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1825": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1826": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1827": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SUB",
      "path": "0"
    },
    "1828": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1829": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1830": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1831": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1832": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1833": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1834": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1835": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x733"
    },
    "1838": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1839": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1841": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1842": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1843": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1844": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "POP",
      "path": "0"
    },
    "1845": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "GAS",
      "path": "0"
    },
    "1846": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1847": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1848": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1849": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1850": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x747"
    },
    "1853": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1854": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1855": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1857": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1858": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1859": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1860": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1862": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1863": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1864": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "POP",
      "path": "0"
    },
    "1865": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "POP",
      "path": "0"
    },
    "1866": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "POP",
      "path": "0"
    },
    "1867": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "POP",
      "path": "0"
    },
    "1868": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1870": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1871": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1872": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1874": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "NOT",
      "path": "0"
    },
    "1875": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1877": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1878": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ADD",
      "path": "0"
    },
    "1879": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "AND",
      "path": "0"
    },
    "1880": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1881": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ADD",
      "path": "0"
    },
    "1882": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1883": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1885": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1886": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "POP",
      "path": "0"
    },
    "1887": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1888": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "ADD",
      "path": "0"
    },
    "1889": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1893": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1894": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1895": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1997"
    },
    "1898": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1899": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51556,
        51631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51527,
        51631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1901": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51527,
        51631
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51527,
        51631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51645,
        51655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1906": {
      "branch": 74,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51645,
        51655
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1907": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51641,
        51728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "1910": {
      "branch": 74,
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51641,
        51728
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1911": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x40"
    },
    "1913": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1914": {
      "op": "PUSH4",
      "value": "0x79D229F"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1923": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51698
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1933": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51698
      ],
      "op": "AND",
      "path": "0"
    },
    "1934": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1935": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51698
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79D229F"
    },
    "1940": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1941": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A4"
    },
    "1944": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1945": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51699,
        51708
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1946": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51699,
        51708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1947": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51710,
        51716
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1948": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51710,
        51716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1949": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1951": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ADD",
      "path": "0"
    },
    "1952": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE2"
    },
    "1955": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1956": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1957": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1959": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1961": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1962": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1963": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1964": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "SUB",
      "path": "0"
    },
    "1965": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1966": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1968": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1969": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1970": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1971": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1972": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1973": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1974": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1977": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1978": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1980": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1981": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1982": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "1984": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "GAS",
      "path": "0"
    },
    "1985": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "CALL",
      "path": "0"
    },
    "1986": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1987": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1988": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1989": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D2"
    },
    "1992": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1993": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1994": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1996": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1997": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1998": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1999": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2001": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2002": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2003": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "2004": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "2005": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "2006": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "2007": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2009": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2010": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2011": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2013": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "NOT",
      "path": "0"
    },
    "2014": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2016": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2017": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ADD",
      "path": "0"
    },
    "2018": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "AND",
      "path": "0"
    },
    "2019": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2020": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ADD",
      "path": "0"
    },
    "2021": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2022": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2024": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2025": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "2026": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2027": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "ADD",
      "path": "0"
    },
    "2028": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2029": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F6"
    },
    "2032": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2033": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2034": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEA"
    },
    "2037": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "i",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2038": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51682,
        51717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2039": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51671,
        51717
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2040": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51671,
        51717
      ],
      "op": "POP",
      "path": "0"
    },
    "2041": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51641,
        51728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51747,
        51756
      ],
      "op": "GAS",
      "path": "0",
      "statement": 8
    },
    "2043": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51737,
        51756
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2044": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        51737,
        51756
      ],
      "op": "POP",
      "path": "0"
    },
    "2045": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2046": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2047": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2048": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2049": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2050": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2051": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2052": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2053": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2054": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2055": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2056": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2057": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2058": {
      "fn": "AggregationRouterV3.discountedSwap",
      "offset": [
        50387,
        51763
      ],
      "op": "POP",
      "path": "0"
    },
    "2059": {
      "fn": "AggregationRouterV3.discountedSwap",
      "jump": "o",
      "offset": [
        50387,
        51763
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2060": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13011,
        13156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2061": {
      "offset": [
        12602,
        12614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x814"
    },
    "2064": {
      "offset": [
        12602,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1049"
    },
    "2067": {
      "jump": "i",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2068": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "2078": {
      "offset": [
        12591,
        12598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x825"
    },
    "2081": {
      "offset": [
        12591,
        12596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "2084": {
      "jump": "i",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2085": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2092": {
      "op": "SHL"
    },
    "2093": {
      "op": "SUB"
    },
    "2094": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "2095": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12591,
        12614
      ],
      "op": "EQ",
      "path": "0"
    },
    "2096": {
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84B"
    },
    "2099": {
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2100": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2102": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "offset": [
        12583,
        12651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2111": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "ADD",
      "path": "0"
    },
    "2115": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2118": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2119": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208C"
    },
    "2122": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2123": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2124": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13117,
        13118
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "2126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13101,
        13107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13101,
        13107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2128": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13080,
        13120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13080,
        13120
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "op": "SUB"
    },
    "2139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13101,
        13107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13101,
        13107
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13101,
        13107
      ],
      "op": "AND",
      "path": "0"
    },
    "2142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13101,
        13107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13080,
        13120
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2176": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13080,
        13120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13117,
        13118
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13117,
        13118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13080,
        13120
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2180": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13147,
        13148
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "2182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13130,
        13149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13130,
        13149
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "SUB"
    },
    "2192": {
      "op": "NOT"
    },
    "2193": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13130,
        13149
      ],
      "op": "AND",
      "path": "0"
    },
    "2194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13130,
        13149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        13130,
        13149
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2196": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        13011,
        13156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2197": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2198": {
      "offset": [
        12602,
        12614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89D"
    },
    "2201": {
      "offset": [
        12602,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1049"
    },
    "2204": {
      "jump": "i",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2205": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "op": "SUB"
    },
    "2214": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "2215": {
      "offset": [
        12591,
        12598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AE"
    },
    "2218": {
      "offset": [
        12591,
        12596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "2221": {
      "jump": "i",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2222": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "2232": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12591,
        12614
      ],
      "op": "EQ",
      "path": "0"
    },
    "2233": {
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "2236": {
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2237": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2239": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "offset": [
        12583,
        12651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2248": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2249": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2251": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "ADD",
      "path": "0"
    },
    "2252": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2255": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2256": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208C"
    },
    "2259": {
      "fn": "AggregationRouterV3.rescueFunds",
      "jump": "i",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2260": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2261": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54188,
        54225
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x8E8"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2270": {
      "op": "SHL"
    },
    "2271": {
      "op": "SUB"
    },
    "2272": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54188,
        54205
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2273": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54188,
        54205
      ],
      "op": "AND",
      "path": "0"
    },
    "2274": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54206,
        54216
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2275": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54218,
        54224
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2276": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54188,
        54205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104D"
    },
    "2279": {
      "fn": "AggregationRouterV3.rescueFunds",
      "jump": "i",
      "offset": [
        54188,
        54225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2280": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54188,
        54225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2281": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "POP",
      "path": "0"
    },
    "2282": {
      "fn": "AggregationRouterV3.rescueFunds",
      "offset": [
        54108,
        54232
      ],
      "op": "POP",
      "path": "0"
    },
    "2283": {
      "fn": "AggregationRouterV3.rescueFunds",
      "jump": "o",
      "offset": [
        54108,
        54232
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2284": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2285": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51944,
        51964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2287": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51966,
        51981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2288": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52028,
        52029
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x0"
    },
    "2290": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52005,
        52009
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2291": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52005,
        52025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2293": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52005,
        52025
      ],
      "op": "ADD",
      "path": "0"
    },
    "2294": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52005,
        52025
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2295": {
      "branch": 75,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52005,
        52029
      ],
      "op": "GT",
      "path": "0"
    },
    "2296": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x913"
    },
    "2299": {
      "branch": 75,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2300": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2302": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2303": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2309": {
      "op": "SHL"
    },
    "2310": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2311": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2312": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2314": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "ADD",
      "path": "0"
    },
    "2315": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2318": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2319": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2014"
    },
    "2322": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        51997,
        52060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2323": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51997,
        52060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2324": {
      "branch": 76,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52078,
        52093
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 13
    },
    "2325": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x930"
    },
    "2328": {
      "branch": 76,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2329": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2331": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2340": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2341": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2343": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "ADD",
      "path": "0"
    },
    "2344": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2347": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2348": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F8"
    },
    "2351": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52070,
        52121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2352": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52070,
        52121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2353": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52148,
        52158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2355": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52148,
        52158
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2356": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52148,
        52158
      ],
      "op": "ADD",
      "path": "0"
    },
    "2357": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52148,
        52158
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2358": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52132,
        52145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2360": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52186,
        52199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x944"
    },
    "2363": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52186,
        52199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2365": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52186,
        52199
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2366": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52186,
        52199
      ],
      "op": "ADD",
      "path": "0"
    },
    "2367": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52148,
        52152
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2368": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52186,
        52199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DD"
    },
    "2371": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52186,
        52199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2372": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52186,
        52199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2373": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52168,
        52199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52209,
        52224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2377": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x958"
    },
    "2380": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2382": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2383": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "ADD",
      "path": "0"
    },
    "2384": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2386": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2387": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "ADD",
      "path": "0"
    },
    "2388": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DD"
    },
    "2391": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52227,
        52240
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2392": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52227,
        52240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2393": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52209,
        52240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "offset": [
        49774,
        49778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2397": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52255,
        52282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2398": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52255,
        52282
      ],
      "op": "AND",
      "path": "0"
    },
    "2399": {
      "branch": 77,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52255,
        52287
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2400": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52251,
        52502
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A9"
    },
    "2403": {
      "branch": 77,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52251,
        52502
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2404": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52340
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x975"
    },
    "2407": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52332
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "op": "SUB"
    },
    "2416": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52338
      ],
      "op": "AND",
      "path": "0"
    },
    "2417": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F8"
    },
    "2420": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52324,
        52340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2421": {
      "branch": 78,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2422": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x980"
    },
    "2425": {
      "branch": 78,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52358
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2426": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52357,
        52358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2428": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x986"
    },
    "2431": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2432": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2433": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52343,
        52347
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2434": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52343,
        52354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2436": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52343,
        52354
      ],
      "op": "ADD",
      "path": "0"
    },
    "2437": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52343,
        52354
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2438": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52324,
        52358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2439": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52311,
        52320
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2440": {
      "branch": 79,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52311,
        52359
      ],
      "op": "GT",
      "path": "0"
    },
    "2441": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A4"
    },
    "2444": {
      "branch": 79,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2445": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2447": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2454": {
      "op": "SHL"
    },
    "2455": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2456": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2457": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2459": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "ADD",
      "path": "0"
    },
    "2460": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2463": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EFE"
    },
    "2467": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52303,
        52381
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2468": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52303,
        52381
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2469": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52251,
        52502
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EA"
    },
    "2472": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52251,
        52502
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2473": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52251,
        52502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2474": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52450
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x9BB"
    },
    "2477": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52442
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52448
      ],
      "op": "AND",
      "path": "0"
    },
    "2487": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F8"
    },
    "2490": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52434,
        52450
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2491": {
      "branch": 80,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52450
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2492": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C6"
    },
    "2495": {
      "branch": 80,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2496": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52467,
        52468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2498": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CC"
    },
    "2501": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2502": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2503": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52453,
        52457
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2504": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52453,
        52464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2506": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52453,
        52464
      ],
      "op": "ADD",
      "path": "0"
    },
    "2507": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52453,
        52464
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2508": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52434,
        52468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2509": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52420,
        52429
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2510": {
      "branch": 81,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52420,
        52469
      ],
      "op": "EQ",
      "path": "0"
    },
    "2511": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EA"
    },
    "2514": {
      "branch": 81,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2515": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2517": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2526": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2527": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2529": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "ADD",
      "path": "0"
    },
    "2530": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2533": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2534": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EFE"
    },
    "2537": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52412,
        52491
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2538": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52412,
        52491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2539": {
      "offset": [
        49825,
        49829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2541": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52516,
        52537
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2542": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52516,
        52537
      ],
      "op": "AND",
      "path": "0"
    },
    "2543": {
      "branch": 82,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52516,
        52542
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2544": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52512,
        52756
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA67"
    },
    "2547": {
      "branch": 82,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52512,
        52756
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2548": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52567,
        52583
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xA05"
    },
    "2551": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52567,
        52575
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2558": {
      "op": "SHL"
    },
    "2559": {
      "op": "SUB"
    },
    "2560": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52567,
        52581
      ],
      "op": "AND",
      "path": "0"
    },
    "2561": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52567,
        52581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F8"
    },
    "2564": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52567,
        52583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2565": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52567,
        52583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2566": {
      "branch": 83,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52566,
        52583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2567": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA22"
    },
    "2570": {
      "branch": 83,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2571": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2573": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2582": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2583": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2585": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "ADD",
      "path": "0"
    },
    "2586": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2589": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2590": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E27"
    },
    "2593": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52558,
        52606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2594": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52558,
        52606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2595": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52620,
        52663
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0xA3D"
    },
    "2598": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52628,
        52636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2599": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52638,
        52649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2601": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52638,
        52649
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2602": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52638,
        52649
      ],
      "op": "ADD",
      "path": "0"
    },
    "2603": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52638,
        52649
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2604": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52651,
        52662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA38"
    },
    "2607": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52651,
        52662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2609": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52651,
        52662
      ],
      "op": "DUP13",
      "path": "0"
    },
    "2610": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52651,
        52662
      ],
      "op": "ADD",
      "path": "0"
    },
    "2611": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52638,
        52642
      ],
      "op": "DUP13",
      "path": "0"
    },
    "2612": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52651,
        52662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2232"
    },
    "2615": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52651,
        52662
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2616": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52651,
        52662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2617": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52620,
        52627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1134"
    },
    "2620": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52620,
        52663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2621": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52620,
        52663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52745
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0xA67"
    },
    "2625": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52703,
        52713
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2626": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA51"
    },
    "2629": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2631": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2632": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "ADD",
      "path": "0"
    },
    "2633": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2635": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "DUP13",
      "path": "0"
    },
    "2636": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "ADD",
      "path": "0"
    },
    "2637": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DD"
    },
    "2640": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52715,
        52731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2641": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52715,
        52731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2648": {
      "op": "SHL"
    },
    "2649": {
      "op": "SUB"
    },
    "2650": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52702
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2651": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52702
      ],
      "op": "AND",
      "path": "0"
    },
    "2652": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2653": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2654": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52733,
        52744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2656": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52733,
        52744
      ],
      "op": "DUP13",
      "path": "0"
    },
    "2657": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52733,
        52744
      ],
      "op": "ADD",
      "path": "0"
    },
    "2658": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52733,
        52744
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2659": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E7"
    },
    "2662": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52677,
        52745
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2663": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52677,
        52745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2664": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52766,
        52785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2666": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52766,
        52785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2667": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7A"
    },
    "2670": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2672": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2673": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "ADD",
      "path": "0"
    },
    "2674": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2676": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "DUP13",
      "path": "0"
    },
    "2677": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "ADD",
      "path": "0"
    },
    "2678": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DD"
    },
    "2681": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52789,
        52805
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2682": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52819
      ],
      "op": "AND",
      "path": "0"
    },
    "2692": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52789,
        52819
      ],
      "op": "EQ",
      "path": "0"
    },
    "2693": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52788,
        52852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9D"
    },
    "2696": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52788,
        52852
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2697": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA98"
    },
    "2700": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2702": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2703": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "ADD",
      "path": "0"
    },
    "2704": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2706": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2707": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "ADD",
      "path": "0"
    },
    "2708": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DD"
    },
    "2711": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52836,
        52852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2712": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52836,
        52852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2713": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52788,
        52852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "2716": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52788,
        52852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2717": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52788,
        52852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2718": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52823,
        52833
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2719": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52788,
        52852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2720": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52766,
        52852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52862,
        52887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2724": {
      "offset": [
        49717,
        49721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2726": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52891,
        52912
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2727": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52891,
        52912
      ],
      "op": "AND",
      "path": "0"
    },
    "2728": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52890,
        52958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB2"
    },
    "2731": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52890,
        52958
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2732": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52957,
        52958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2734": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52890,
        52958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "2737": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52890,
        52958
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2738": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52890,
        52958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2739": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52921,
        52954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52921,
        52942
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2751": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52921,
        52942
      ],
      "op": "AND",
      "path": "0"
    },
    "2752": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52943,
        52953
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2753": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52921,
        52942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133F"
    },
    "2756": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52921,
        52954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2757": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52921,
        52954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2758": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52862,
        52958
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52968,
        52993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2762": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52996,
        53030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "op": "SUB"
    },
    "2773": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52996,
        53017
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2774": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52996,
        53017
      ],
      "op": "AND",
      "path": "0"
    },
    "2775": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53018,
        53029
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2776": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52996,
        53017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133F"
    },
    "2779": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        52996,
        53030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2780": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52996,
        53030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2781": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52968,
        53030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2782": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        52968,
        53030
      ],
      "op": "POP",
      "path": "0"
    },
    "2783": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53119,
        53131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2785": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53133,
        53152
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2786": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53164,
        53170
      ],
      "op": "DUP14",
      "path": "0"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2793": {
      "op": "SHL"
    },
    "2794": {
      "op": "SUB"
    },
    "2795": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53176
      ],
      "op": "AND",
      "path": "0"
    },
    "2796": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53184,
        53193
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2797": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53212,
        53237
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD9C45357"
    },
    "2802": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53212,
        53237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2804": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53212,
        53237
      ],
      "op": "SHL",
      "path": "0"
    },
    "2805": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53239,
        53243
      ],
      "op": "DUP15",
      "path": "0"
    },
    "2806": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53239,
        53243
      ],
      "op": "DUP15",
      "path": "0"
    },
    "2807": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2809": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2810": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2812": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "ADD",
      "path": "0"
    },
    "2813": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB08"
    },
    "2816": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2817": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2818": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2819": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2820": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5C"
    },
    "2823": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53195,
        53244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2824": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2825": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2827": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2828": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2831": {
      "op": "NOT"
    },
    "2832": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2833": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2834": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SUB",
      "path": "0"
    },
    "2835": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "ADD",
      "path": "0"
    },
    "2836": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2837": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2838": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2839": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2840": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2841": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53195,
        53244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2842": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB22"
    },
    "2845": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2846": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B80"
    },
    "2849": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53156,
        53245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2850": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2851": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2853": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2855": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2856": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2857": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2858": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "SUB",
      "path": "0"
    },
    "2859": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2860": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2861": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2862": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "GAS",
      "path": "0"
    },
    "2863": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "CALL",
      "path": "0"
    },
    "2864": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2865": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2866": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2867": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2868": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2869": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2870": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2872": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2873": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "EQ",
      "path": "0"
    },
    "2874": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5F"
    },
    "2877": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2878": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2880": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2881": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2882": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2883": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2885": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "NOT",
      "path": "0"
    },
    "2886": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "2888": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2889": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2890": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "AND",
      "path": "0"
    },
    "2891": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2892": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2893": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2895": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2896": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2897": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2898": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2899": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2900": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2902": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2904": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2905": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2906": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2907": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB64"
    },
    "2910": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2911": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2912": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2914": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2915": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2916": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2917": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53156,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2918": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53118,
        53245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2919": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53118,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2920": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53118,
        53245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2921": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53118,
        53245
      ],
      "op": "POP",
      "path": "0"
    },
    "2922": {
      "branch": 84,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53264,
        53271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2923": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53259,
        53368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBB"
    },
    "2926": {
      "branch": 84,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53259,
        53368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2927": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0xBA2"
    },
    "2930": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53323,
        53329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2931": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2933": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2934": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2935": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2937": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "ADD",
      "path": "0"
    },
    "2938": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2940": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2941": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2942": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2944": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2945": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2946": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2948": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "ADD",
      "path": "0"
    },
    "2949": {
      "op": "PUSH18",
      "value": "0x31B0B636213CBA32B9903330B4B632B21D1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2972": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2973": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "POP",
      "path": "0"
    },
    "2974": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE08"
    },
    "2977": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53298,
        53352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2978": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53298,
        53352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2979": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2981": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2990": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2991": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2993": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "ADD",
      "path": "0"
    },
    "2994": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "2997": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2998": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2999": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53291,
        53353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF4"
    },
    "3002": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53291,
        53353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3003": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53259,
        53368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3004": {
      "op": "POP"
    },
    "3005": {
      "op": "POP"
    },
    "3006": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53410,
        53421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3008": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53410,
        53421
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3009": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53410,
        53421
      ],
      "op": "ADD",
      "path": "0"
    },
    "3010": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53410,
        53421
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3011": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53503
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0xBDF"
    },
    "3014": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53485,
        53502
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3015": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD9"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "op": "SUB"
    },
    "3026": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53467
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3027": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53467
      ],
      "op": "AND",
      "path": "0"
    },
    "3028": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53468,
        53479
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3029": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133F"
    },
    "3032": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53446,
        53480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3033": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3034": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3035": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1021"
    },
    "3038": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53446,
        53503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3039": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53446,
        53503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3040": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53431,
        53503
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "offset": [
        49717,
        49721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3044": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53518,
        53539
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3045": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53518,
        53539
      ],
      "op": "AND",
      "path": "0"
    },
    "3046": {
      "branch": 85,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53518,
        53544
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3047": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53514,
        53889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC58"
    },
    "3050": {
      "branch": 85,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53514,
        53889
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3051": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53647
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0xC17"
    },
    "3054": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53613,
        53646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53613,
        53634
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3066": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53613,
        53634
      ],
      "op": "AND",
      "path": "0"
    },
    "3067": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53635,
        53645
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3068": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53613,
        53634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133F"
    },
    "3071": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53613,
        53646
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3072": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53613,
        53646
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3073": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD9"
    },
    "3076": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53596,
        53600
      ],
      "op": "DUP15",
      "path": "0"
    },
    "3077": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53596,
        53607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3079": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53596,
        53607
      ],
      "op": "ADD",
      "path": "0"
    },
    "3080": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53596,
        53607
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3081": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53591
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3082": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E3"
    },
    "3085": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3086": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53608
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3087": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3088": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3093": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53608
      ],
      "op": "AND",
      "path": "0"
    },
    "3094": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53574,
        53608
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3095": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53574,
        53647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3096": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53560,
        53647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53739
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0xC27"
    },
    "3101": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "3103": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53722
      ],
      "op": "DUP14",
      "path": "0"
    },
    "3104": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53722
      ],
      "op": "ADD",
      "path": "0"
    },
    "3105": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53722
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3106": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53560,
        53647
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3107": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140F"
    },
    "3110": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53702,
        53739
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3111": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53702,
        53739
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3112": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53669,
        53698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC35"
    },
    "3115": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53669,
        53681
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3116": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53686,
        53697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3118": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53686,
        53697
      ],
      "op": "DUP16",
      "path": "0"
    },
    "3119": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53686,
        53697
      ],
      "op": "ADD",
      "path": "0"
    },
    "3120": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53686,
        53697
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3121": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53669,
        53685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140F"
    },
    "3124": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53669,
        53698
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3125": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53669,
        53698
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3126": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53669,
        53739
      ],
      "op": "LT",
      "path": "0"
    },
    "3127": {
      "branch": 86,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53669,
        53739
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3128": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC53"
    },
    "3131": {
      "branch": 86,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3132": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3134": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3143": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3144": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3146": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3147": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "3150": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3151": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FDD"
    },
    "3154": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53661,
        53771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3155": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53661,
        53771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3156": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53514,
        53889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7C"
    },
    "3159": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53514,
        53889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3160": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53514,
        53889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3161": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53826,
        53830
      ],
      "op": "DUP12",
      "path": "0",
      "statement": 23
    },
    "3162": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53826,
        53846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "3164": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53826,
        53846
      ],
      "op": "ADD",
      "path": "0"
    },
    "3165": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53826,
        53846
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3166": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53810,
        53822
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3167": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53810,
        53846
      ],
      "op": "LT",
      "path": "0"
    },
    "3168": {
      "branch": 87,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53810,
        53846
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3169": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7C"
    },
    "3172": {
      "branch": 87,
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3173": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3175": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3176": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3184": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3185": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3187": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "ADD",
      "path": "0"
    },
    "3188": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "3191": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3192": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FDD"
    },
    "3195": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53802,
        53878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3196": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53802,
        53878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3197": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 24,
      "value": "0xD6D4F5681C246C9F42C203E287975AF1601F8DF8035A9251F79AAB5C8F09E2F8"
    },
    "3230": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53925,
        53935
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3231": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53949,
        53957
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3232": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53971,
        53979
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3233": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53993,
        54004
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3234": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        54018,
        54029
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3235": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        54043,
        54055
      ],
      "op": "DUP15",
      "path": "0"
    },
    "3236": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3238": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3239": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB5"
    },
    "3242": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "3243": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "3244": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3245": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3246": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3247": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3248": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3249": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA8"
    },
    "3252": {
      "fn": "AggregationRouterV3.swap",
      "jump": "i",
      "offset": [
        53904,
        54065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3253": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3254": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3256": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3257": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3258": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3259": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SUB",
      "path": "0"
    },
    "3260": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3261": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        53904,
        54065
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3262": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        54086,
        54095
      ],
      "op": "GAS",
      "path": "0",
      "statement": 25
    },
    "3263": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        54076,
        54095
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "3264": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        54076,
        54095
      ],
      "op": "POP",
      "path": "0"
    },
    "3265": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3266": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3267": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3268": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3269": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3270": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3271": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3272": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3273": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3274": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3275": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3276": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3277": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3278": {
      "fn": "AggregationRouterV3.swap",
      "offset": [
        51769,
        54102
      ],
      "op": "POP",
      "path": "0"
    },
    "3279": {
      "fn": "AggregationRouterV3.swap",
      "jump": "o",
      "offset": [
        51769,
        54102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3280": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54238,
        54317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3281": {
      "offset": [
        12602,
        12614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD8"
    },
    "3284": {
      "offset": [
        12602,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1049"
    },
    "3287": {
      "jump": "i",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3288": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3295": {
      "op": "SHL"
    },
    "3296": {
      "op": "SUB"
    },
    "3297": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "3298": {
      "offset": [
        12591,
        12598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE9"
    },
    "3301": {
      "offset": [
        12591,
        12596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "3304": {
      "jump": "i",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3305": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3312": {
      "op": "SHL"
    },
    "3313": {
      "op": "SUB"
    },
    "3314": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "3315": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12591,
        12614
      ],
      "op": "EQ",
      "path": "0"
    },
    "3316": {
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0F"
    },
    "3319": {
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3320": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3322": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "offset": [
        12583,
        12651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3331": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3332": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3334": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "ADD",
      "path": "0"
    },
    "3335": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "3338": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3339": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208C"
    },
    "3342": {
      "fn": "AggregationRouterV3.destroy",
      "jump": "i",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3343": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3344": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54299,
        54309
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 26
    },
    "3345": {
      "fn": "AggregationRouterV3.destroy",
      "offset": [
        54286,
        54310
      ],
      "op": "SELFDESTRUCT",
      "path": "0"
    },
    "3346": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3347": {
      "fn": "Ownable.owner",
      "offset": [
        12425,
        12432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3349": {
      "fn": "Ownable.owner",
      "offset": [
        12451,
        12457
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 27
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "op": "SUB"
    },
    "3358": {
      "fn": "Ownable.owner",
      "offset": [
        12451,
        12457
      ],
      "op": "AND",
      "path": "0"
    },
    "3359": {
      "fn": "Ownable.owner",
      "offset": [
        12379,
        12464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3360": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        12379,
        12464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3361": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3362": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43481,
        43501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3364": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43513,
        43546
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0xD2F"
    },
    "3367": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43521,
        43529
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3368": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43531,
        43537
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3369": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43539,
        43545
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3370": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43539,
        43545
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3371": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43513,
        43520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1134"
    },
    "3374": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "jump": "i",
      "offset": [
        43513,
        43546
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3375": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43513,
        43546
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3376": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43563,
        43606
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0xD3C"
    },
    "3379": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43571,
        43579
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3380": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43581,
        43587
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3381": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43589,
        43598
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3382": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43600,
        43605
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3383": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43600,
        43605
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3384": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43563,
        43570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "3387": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "jump": "i",
      "offset": [
        43563,
        43606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3388": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43563,
        43606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3389": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43556,
        43606
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "3390": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "offset": [
        43282,
        43613
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "op": "POP"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "op": "POP"
    },
    "3397": {
      "op": "POP"
    },
    "3398": {
      "op": "POP"
    },
    "3399": {
      "fn": "UnoswapRouter.unoswapWithPermit",
      "jump": "o",
      "offset": [
        43282,
        43613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3401": {
      "offset": [
        12602,
        12614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD50"
    },
    "3404": {
      "offset": [
        12602,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1049"
    },
    "3407": {
      "jump": "i",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12602,
        12614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "3418": {
      "offset": [
        12591,
        12598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD61"
    },
    "3421": {
      "offset": [
        12591,
        12596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "3424": {
      "jump": "i",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12591,
        12598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "op": "SUB"
    },
    "3434": {
      "offset": [
        12591,
        12614
      ],
      "op": "AND",
      "path": "0"
    },
    "3435": {
      "branch": 88,
      "fn": "Ownable.transferOwnership",
      "offset": [
        12591,
        12614
      ],
      "op": "EQ",
      "path": "0"
    },
    "3436": {
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD87"
    },
    "3439": {
      "branch": 88,
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3449": {
      "op": "SHL"
    },
    "3450": {
      "offset": [
        12583,
        12651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "ADD",
      "path": "0"
    },
    "3455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "3458": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208C"
    },
    "3462": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        12583,
        12651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3470": {
      "op": "SHL"
    },
    "3471": {
      "op": "SUB"
    },
    "3472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13393,
        13415
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 30
    },
    "3473": {
      "branch": 89,
      "fn": "Ownable.transferOwnership",
      "offset": [
        13393,
        13415
      ],
      "op": "AND",
      "path": "0"
    },
    "3474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDAD"
    },
    "3477": {
      "branch": 89,
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3480": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3487": {
      "op": "SHL"
    },
    "3488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3489": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "ADD",
      "path": "0"
    },
    "3493": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "3496": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E53"
    },
    "3500": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        13385,
        13458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3501": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13385,
        13458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13494,
        13500
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x0"
    },
    "3504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13494,
        13500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13494,
        13500
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "op": "SUB"
    },
    "3517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "AND",
      "path": "0"
    },
    "3520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13494,
        13500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3522": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13494,
        13500
      ],
      "op": "AND",
      "path": "0"
    },
    "3523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13494,
        13500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13473,
        13511
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13527
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x0"
    },
    "3561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3569": {
      "op": "SHL"
    },
    "3570": {
      "op": "SUB"
    },
    "3571": {
      "op": "NOT"
    },
    "3572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "AND",
      "path": "0"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3579": {
      "op": "SHL"
    },
    "3580": {
      "op": "SUB"
    },
    "3581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "AND",
      "path": "0"
    },
    "3585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "OR",
      "path": "0"
    },
    "3589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        13521,
        13538
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3591": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        13305,
        13545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3592": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38008,
        39885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3593": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38087,
        38100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3595": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38367,
        38369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3597": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38356
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3598": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3599": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38369
      ],
      "op": "LT",
      "path": "0"
    },
    "3600": {
      "branch": 90,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38369
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3601": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3602": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38390
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3603": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3B"
    },
    "3606": {
      "branch": 90,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3607": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38390
      ],
      "op": "POP",
      "path": "0"
    },
    "3608": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38377
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3609": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38378,
        38379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3611": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3612": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3613": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3614": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "LT",
      "path": "0"
    },
    "3615": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE24"
    },
    "3618": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3619": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3620": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3621": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3623": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3624": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "ADD",
      "path": "0"
    },
    "3625": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "ADD",
      "path": "0"
    },
    "3626": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "SUB"
    },
    "3635": {
      "op": "NOT"
    },
    "3636": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38380
      ],
      "op": "AND",
      "path": "0"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "3641": {
      "op": "SHL"
    },
    "3642": {
      "branch": 91,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38373,
        38390
      ],
      "op": "EQ",
      "path": "0"
    },
    "3643": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3644": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3645": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38411
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3646": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE66"
    },
    "3649": {
      "branch": 91,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38411
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3650": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38411
      ],
      "op": "POP",
      "path": "0"
    },
    "3651": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38398
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3652": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38399,
        38400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3654": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3655": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3656": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3657": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "LT",
      "path": "0"
    },
    "3658": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4F"
    },
    "3661": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3662": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3663": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3664": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3666": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3667": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "ADD",
      "path": "0"
    },
    "3668": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "ADD",
      "path": "0"
    },
    "3669": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3676": {
      "op": "SHL"
    },
    "3677": {
      "op": "SUB"
    },
    "3678": {
      "op": "NOT"
    },
    "3679": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38401
      ],
      "op": "AND",
      "path": "0"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "branch": 92,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38394,
        38411
      ],
      "op": "EQ",
      "path": "0"
    },
    "3686": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3687": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38432
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3688": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38432
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3689": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE91"
    },
    "3692": {
      "branch": 92,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38432
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3693": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38432
      ],
      "op": "POP",
      "path": "0"
    },
    "3694": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38419
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3695": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38420,
        38421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3697": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3698": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3699": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3700": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "LT",
      "path": "0"
    },
    "3701": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7A"
    },
    "3704": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3705": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3706": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3707": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3709": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3710": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "ADD",
      "path": "0"
    },
    "3711": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "ADD",
      "path": "0"
    },
    "3712": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "op": "SUB"
    },
    "3721": {
      "op": "NOT"
    },
    "3722": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38422
      ],
      "op": "AND",
      "path": "0"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "branch": 93,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38415,
        38432
      ],
      "op": "EQ",
      "path": "0"
    },
    "3729": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3730": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38453
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3731": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38453
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3732": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEBC"
    },
    "3735": {
      "branch": 93,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38453
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3736": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38453
      ],
      "op": "POP",
      "path": "0"
    },
    "3737": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38440
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3738": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38441,
        38442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3740": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3741": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3742": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3743": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "LT",
      "path": "0"
    },
    "3744": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA5"
    },
    "3747": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3748": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3749": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3750": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3752": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3753": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "ADD",
      "path": "0"
    },
    "3754": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "ADD",
      "path": "0"
    },
    "3755": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "op": "NOT"
    },
    "3765": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38443
      ],
      "op": "AND",
      "path": "0"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xFD"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "branch": 94,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38436,
        38453
      ],
      "op": "EQ",
      "path": "0"
    },
    "3772": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38352,
        38453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3773": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38348,
        39798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3774": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38348,
        39798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF18"
    },
    "3777": {
      "branch": 94,
      "fn": "RevertReasonParser.parse",
      "offset": [
        38348,
        39798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3778": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38469,
        38489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3780": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38681,
        38683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3782": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38675,
        38679
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3783": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38671,
        38684
      ],
      "op": "ADD",
      "path": "0"
    },
    "3784": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38661,
        38684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3785": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38661,
        38684
      ],
      "op": "POP",
      "path": "0"
    },
    "3786": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39174,
        39180
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 33
    },
    "3787": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39168,
        39188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3788": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39163,
        39165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3790": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39163,
        39188
      ],
      "op": "ADD",
      "path": "0"
    },
    "3791": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39148,
        39152
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3792": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39148,
        39159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3793": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39148,
        39188
      ],
      "op": "LT",
      "path": "0"
    },
    "3794": {
      "branch": 95,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39148,
        39188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3795": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEEE"
    },
    "3798": {
      "branch": 95,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3799": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3801": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3808": {
      "op": "SHL"
    },
    "3809": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3810": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3811": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3813": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "ADD",
      "path": "0"
    },
    "3814": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "3817": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3818": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212F"
    },
    "3821": {
      "fn": "RevertReasonParser.parse",
      "jump": "i",
      "offset": [
        39140,
        39214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3822": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39140,
        39214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3823": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39259,
        39265
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 34
    },
    "3824": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39277,
        39283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3825": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3827": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3828": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3830": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "ADD",
      "path": "0"
    },
    "3831": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF01"
    },
    "3834": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3835": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3836": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3837": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3C"
    },
    "3840": {
      "fn": "RevertReasonParser.parse",
      "jump": "i",
      "offset": [
        39242,
        39289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3841": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3842": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3844": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3845": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3847": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3848": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3849": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "SUB",
      "path": "0"
    },
    "3850": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "SUB",
      "path": "0"
    },
    "3851": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3852": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3853": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3854": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3856": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39242,
        39289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3857": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39228,
        39290
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3858": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39228,
        39290
      ],
      "op": "POP",
      "path": "0"
    },
    "3859": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39228,
        39290
      ],
      "op": "POP",
      "path": "0"
    },
    "3860": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39228,
        39290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101B"
    },
    "3863": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39228,
        39290
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3864": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38348,
        39798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3865": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39385
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3866": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39392
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3867": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39396,
        39398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3869": {
      "branch": 96,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39398
      ],
      "op": "EQ",
      "path": "0"
    },
    "3870": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39419
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3871": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39419
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3872": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF48"
    },
    "3875": {
      "branch": 96,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39419
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3876": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39419
      ],
      "op": "POP",
      "path": "0"
    },
    "3877": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39406
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3878": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39407,
        39408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3880": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3881": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3882": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3883": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "LT",
      "path": "0"
    },
    "3884": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF31"
    },
    "3887": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3888": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3889": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3890": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3892": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3893": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "ADD",
      "path": "0"
    },
    "3894": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "ADD",
      "path": "0"
    },
    "3895": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3902": {
      "op": "SHL"
    },
    "3903": {
      "op": "SUB"
    },
    "3904": {
      "op": "NOT"
    },
    "3905": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39409
      ],
      "op": "AND",
      "path": "0"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "branch": 97,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39402,
        39419
      ],
      "op": "EQ",
      "path": "0"
    },
    "3912": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3913": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39440
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3914": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39440
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3915": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF73"
    },
    "3918": {
      "branch": 97,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39440
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3919": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39440
      ],
      "op": "POP",
      "path": "0"
    },
    "3920": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39427
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3921": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39428,
        39429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3923": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3924": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3925": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3926": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "LT",
      "path": "0"
    },
    "3927": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5C"
    },
    "3930": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3931": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3932": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3933": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3935": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3936": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "ADD",
      "path": "0"
    },
    "3937": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "ADD",
      "path": "0"
    },
    "3938": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "op": "SUB"
    },
    "3947": {
      "op": "NOT"
    },
    "3948": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39430
      ],
      "op": "AND",
      "path": "0"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "3953": {
      "op": "SHL"
    },
    "3954": {
      "branch": 98,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39423,
        39440
      ],
      "op": "EQ",
      "path": "0"
    },
    "3955": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3956": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3957": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3958": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9E"
    },
    "3961": {
      "branch": 98,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3962": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39461
      ],
      "op": "POP",
      "path": "0"
    },
    "3963": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39448
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3964": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39449,
        39450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3966": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3967": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3968": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3969": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "LT",
      "path": "0"
    },
    "3970": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF87"
    },
    "3973": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3974": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "INVALID",
      "path": "0"
    },
    "3975": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3976": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3978": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3979": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "ADD",
      "path": "0"
    },
    "3980": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "ADD",
      "path": "0"
    },
    "3981": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "op": "NOT"
    },
    "3991": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39451
      ],
      "op": "AND",
      "path": "0"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3996": {
      "op": "SHL"
    },
    "3997": {
      "branch": 99,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39444,
        39461
      ],
      "op": "EQ",
      "path": "0"
    },
    "3998": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3999": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39482
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4000": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39482
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4001": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC9"
    },
    "4004": {
      "branch": 99,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4005": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39482
      ],
      "op": "POP",
      "path": "0"
    },
    "4006": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39469
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4007": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39470,
        39471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4009": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4010": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4011": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4012": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "LT",
      "path": "0"
    },
    "4013": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB2"
    },
    "4016": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4017": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "INVALID",
      "path": "0"
    },
    "4018": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4019": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4021": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4022": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "ADD",
      "path": "0"
    },
    "4023": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "ADD",
      "path": "0"
    },
    "4024": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4031": {
      "op": "SHL"
    },
    "4032": {
      "op": "SUB"
    },
    "4033": {
      "op": "NOT"
    },
    "4034": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39472
      ],
      "op": "AND",
      "path": "0"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4039": {
      "op": "SHL"
    },
    "4040": {
      "branch": 100,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39465,
        39482
      ],
      "op": "EQ",
      "path": "0"
    },
    "4041": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39381,
        39482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4042": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39377,
        39798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4043": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39377,
        39798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEE"
    },
    "4046": {
      "branch": 100,
      "fn": "RevertReasonParser.parse",
      "offset": [
        39377,
        39798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4047": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39688,
        39690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4049": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39678,
        39691
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4050": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39678,
        39691
      ],
      "op": "ADD",
      "path": "0"
    },
    "4051": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39672,
        39692
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4052": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39750,
        39756
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 35
    },
    "4053": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39768,
        39780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "4056": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39672,
        39692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4057": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39768,
        39774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1449"
    },
    "4060": {
      "fn": "RevertReasonParser.parse",
      "jump": "i",
      "offset": [
        39768,
        39780
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4061": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39768,
        39780
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4062": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4064": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4065": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4067": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "ADD",
      "path": "0"
    },
    "4068": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF01"
    },
    "4071": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4072": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4073": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4074": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39733,
        39786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9C"
    },
    "4077": {
      "fn": "RevertReasonParser.parse",
      "jump": "i",
      "offset": [
        39733,
        39786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4078": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39377,
        39798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4079": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39839,
        39845
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "4080": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39859,
        39871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF8"
    },
    "4083": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39866,
        39870
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4084": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39859,
        39865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146F"
    },
    "4087": {
      "fn": "RevertReasonParser.parse",
      "jump": "i",
      "offset": [
        39859,
        39871
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4088": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39859,
        39871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4089": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4091": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4092": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4094": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "ADD",
      "path": "0"
    },
    "4095": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1009"
    },
    "4098": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4099": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4100": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4101": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BEB"
    },
    "4104": {
      "fn": "RevertReasonParser.parse",
      "jump": "i",
      "offset": [
        39822,
        39877
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4105": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4106": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4108": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4109": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4111": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4112": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4113": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "SUB",
      "path": "0"
    },
    "4114": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "SUB",
      "path": "0"
    },
    "4115": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4116": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4117": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4118": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4120": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39822,
        39877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4121": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39808,
        39878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4122": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        39808,
        39878
      ],
      "op": "POP",
      "path": "0"
    },
    "4123": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38008,
        39885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4124": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38008,
        39885
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4125": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38008,
        39885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4126": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38008,
        39885
      ],
      "op": "POP",
      "path": "0"
    },
    "4127": {
      "fn": "RevertReasonParser.parse",
      "offset": [
        38008,
        39885
      ],
      "op": "POP",
      "path": "0"
    },
    "4128": {
      "fn": "RevertReasonParser.parse",
      "jump": "o",
      "offset": [
        38008,
        39885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4129": {
      "fn": "SafeMath.sub",
      "offset": [
        19451,
        19606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4130": {
      "fn": "SafeMath.sub",
      "offset": [
        19509,
        19516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4132": {
      "fn": "SafeMath.sub",
      "offset": [
        19541,
        19542
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 37
    },
    "4133": {
      "fn": "SafeMath.sub",
      "offset": [
        19536,
        19537
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4134": {
      "fn": "SafeMath.sub",
      "offset": [
        19536,
        19542
      ],
      "op": "GT",
      "path": "0"
    },
    "4135": {
      "branch": 101,
      "fn": "SafeMath.sub",
      "offset": [
        19536,
        19542
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4136": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1043"
    },
    "4139": {
      "branch": 101,
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4140": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4142": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4149": {
      "op": "SHL"
    },
    "4150": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4151": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4152": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4154": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "ADD",
      "path": "0"
    },
    "4155": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "4158": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4159": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F29"
    },
    "4162": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        19528,
        19577
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4163": {
      "fn": "SafeMath.sub",
      "offset": [
        19528,
        19577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4164": {
      "op": "POP"
    },
    "4165": {
      "fn": "SafeMath.sub",
      "offset": [
        19594,
        19599
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 38
    },
    "4166": {
      "fn": "SafeMath.sub",
      "offset": [
        19594,
        19599
      ],
      "op": "SUB",
      "path": "0"
    },
    "4167": {
      "fn": "SafeMath.sub",
      "offset": [
        19594,
        19599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4168": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        19451,
        19606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4169": {
      "fn": "Context._msgSender",
      "offset": [
        10952,
        11056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4170": {
      "fn": "Context._msgSender",
      "offset": [
        11039,
        11049
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 39
    },
    "4171": {
      "fn": "Context._msgSender",
      "offset": [
        10952,
        11056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4172": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        10952,
        11056
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4173": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35712,
        36044
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4174": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35806,
        35816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4175": {
      "branch": 102,
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35806,
        35816
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4176": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35802,
        36038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F3"
    },
    "4179": {
      "branch": 102,
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35802,
        36038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4180": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35836,
        35848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105C"
    },
    "4183": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35842,
        35847
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4184": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35836,
        35841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F8"
    },
    "4187": {
      "fn": "UniERC20.uniTransfer",
      "jump": "i",
      "offset": [
        35836,
        35848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4188": {
      "branch": 103,
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35836,
        35848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4189": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35832,
        36028
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4190": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35832,
        36028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x109D"
    },
    "4193": {
      "branch": 103,
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35832,
        36028
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4194": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x40"
    },
    "4196": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "op": "SUB"
    },
    "4205": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35879
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4206": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35879
      ],
      "op": "AND",
      "path": "0"
    },
    "4207": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4208": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4209": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4210": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "4213": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "MUL",
      "path": "0"
    },
    "4214": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4215": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35880,
        35886
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4216": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35880,
        35886
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4217": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4219": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4220": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4221": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4222": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35880,
        35886
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4223": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35879
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4224": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4225": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "CALL",
      "path": "0"
    },
    "4226": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4227": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "POP",
      "path": "0"
    },
    "4228": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "POP",
      "path": "0"
    },
    "4229": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "POP",
      "path": "0"
    },
    "4230": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "POP",
      "path": "0"
    },
    "4231": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4232": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4233": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4234": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1097"
    },
    "4237": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4238": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4239": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4241": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4242": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4243": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4244": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4246": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4247": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4248": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35868,
        35887
      ],
      "op": "POP",
      "path": "0"
    },
    "4249": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35832,
        36028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F3"
    },
    "4252": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35832,
        36028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4253": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35832,
        36028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4254": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35926,
        36013
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 41,
      "value": "0x10F3"
    },
    "4257": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35946,
        35951
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4258": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35976,
        35999
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "4263": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35976,
        35999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4265": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35976,
        35999
      ],
      "op": "SHL",
      "path": "0"
    },
    "4266": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        36001,
        36003
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4267": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        36005,
        36011
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4268": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4270": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4271": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4273": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "ADD",
      "path": "0"
    },
    "4274": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BC"
    },
    "4277": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4278": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4279": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4280": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE2"
    },
    "4283": {
      "fn": "UniERC20.uniTransfer",
      "jump": "i",
      "offset": [
        35953,
        36012
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4284": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4285": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4287": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4288": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4291": {
      "op": "NOT"
    },
    "4292": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4293": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4294": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SUB",
      "path": "0"
    },
    "4295": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "ADD",
      "path": "0"
    },
    "4296": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4297": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4298": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4299": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4300": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4301": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4303": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4304": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "ADD",
      "path": "0"
    },
    "4305": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4306": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4313": {
      "op": "SHL"
    },
    "4314": {
      "op": "SUB"
    },
    "4315": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "AND",
      "path": "0"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4322": {
      "op": "SHL"
    },
    "4323": {
      "op": "SUB"
    },
    "4324": {
      "op": "NOT"
    },
    "4325": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4326": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4327": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "AND",
      "path": "0"
    },
    "4328": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4329": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4330": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4331": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "OR",
      "path": "0"
    },
    "4332": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4333": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4334": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35953,
        36012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4335": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35926,
        35945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15EE"
    },
    "4338": {
      "fn": "UniERC20.uniTransfer",
      "jump": "i",
      "offset": [
        35926,
        36013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4339": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35926,
        36013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4340": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35712,
        36044
      ],
      "op": "POP",
      "path": "0"
    },
    "4341": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35712,
        36044
      ],
      "op": "POP",
      "path": "0"
    },
    "4342": {
      "fn": "UniERC20.uniTransfer",
      "offset": [
        35712,
        36044
      ],
      "op": "POP",
      "path": "0"
    },
    "4343": {
      "fn": "UniERC20.uniTransfer",
      "jump": "o",
      "offset": [
        35712,
        36044
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4344": {
      "fn": "UniERC20.isETH",
      "offset": [
        35341,
        35472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4345": {
      "fn": "UniERC20.isETH",
      "offset": [
        35393,
        35397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "op": "SUB"
    },
    "4355": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35439
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 42
    },
    "4356": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35439
      ],
      "op": "AND",
      "path": "0"
    },
    "4357": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35439
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4358": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35439
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4359": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112C"
    },
    "4362": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35464
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "op": "SUB"
    },
    "4372": {
      "fn": "UniERC20.isETH",
      "offset": [
        35443,
        35464
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4373": {
      "fn": "UniERC20.isETH",
      "offset": [
        35443,
        35464
      ],
      "op": "AND",
      "path": "0"
    },
    "4374": {
      "offset": [
        35236,
        35278
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "4395": {
      "fn": "UniERC20.isETH",
      "offset": [
        35443,
        35464
      ],
      "op": "EQ",
      "path": "0"
    },
    "4396": {
      "fn": "UniERC20.isETH",
      "offset": [
        35417,
        35464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4397": {
      "fn": "UniERC20.isETH",
      "offset": [
        35409,
        35465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4398": {
      "fn": "UniERC20.isETH",
      "offset": [
        35409,
        35465
      ],
      "op": "POP",
      "path": "0"
    },
    "4399": {
      "fn": "UniERC20.isETH",
      "offset": [
        35341,
        35472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4400": {
      "fn": "UniERC20.isETH",
      "offset": [
        35341,
        35472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4401": {
      "fn": "UniERC20.isETH",
      "offset": [
        35341,
        35472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4402": {
      "fn": "UniERC20.isETH",
      "offset": [
        35341,
        35472
      ],
      "op": "POP",
      "path": "0"
    },
    "4403": {
      "fn": "UniERC20.isETH",
      "jump": "o",
      "offset": [
        35341,
        35472
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4404": {
      "fn": "Permitable._permit",
      "offset": [
        40871,
        41529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4405": {
      "fn": "Permitable._permit",
      "offset": [
        40981,
        40987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4407": {
      "fn": "Permitable._permit",
      "offset": [
        40964,
        40987
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4408": {
      "branch": 104,
      "fn": "Permitable._permit",
      "offset": [
        40964,
        40987
      ],
      "op": "EQ",
      "path": "0"
    },
    "4409": {
      "fn": "Permitable._permit",
      "offset": [
        40960,
        41523
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4410": {
      "fn": "Permitable._permit",
      "offset": [
        40960,
        41523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E1"
    },
    "4413": {
      "branch": 104,
      "fn": "Permitable._permit",
      "offset": [
        40960,
        41523
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4414": {
      "fn": "Permitable._permit",
      "offset": [
        41067,
        41079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4416": {
      "fn": "Permitable._permit",
      "offset": [
        41081,
        41100
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4417": {
      "fn": "Permitable._permit",
      "offset": [
        41112,
        41117
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4424": {
      "op": "SHL"
    },
    "4425": {
      "op": "SUB"
    },
    "4426": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41123
      ],
      "op": "AND",
      "path": "0"
    },
    "4427": {
      "fn": "Permitable._permit",
      "offset": [
        41141,
        41169
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD505ACCF"
    },
    "4432": {
      "fn": "Permitable._permit",
      "offset": [
        41141,
        41169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4434": {
      "fn": "Permitable._permit",
      "offset": [
        41141,
        41169
      ],
      "op": "SHL",
      "path": "0"
    },
    "4435": {
      "fn": "Permitable._permit",
      "offset": [
        41171,
        41177
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4436": {
      "fn": "Permitable._permit",
      "offset": [
        41171,
        41177
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4437": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4439": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4440": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4442": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "ADD",
      "path": "0"
    },
    "4443": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1166"
    },
    "4446": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4447": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4448": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4449": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4450": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5C"
    },
    "4453": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41124,
        41178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4454": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4455": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4457": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4458": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4461": {
      "op": "NOT"
    },
    "4462": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4463": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4464": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SUB",
      "path": "0"
    },
    "4465": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "ADD",
      "path": "0"
    },
    "4466": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4467": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4468": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4469": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4470": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4471": {
      "fn": "Permitable._permit",
      "offset": [
        41124,
        41178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4472": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1180"
    },
    "4475": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4476": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B80"
    },
    "4479": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41104,
        41179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4480": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4481": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4483": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4485": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4486": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4487": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4488": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "SUB",
      "path": "0"
    },
    "4489": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4490": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4492": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4493": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "GAS",
      "path": "0"
    },
    "4494": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "CALL",
      "path": "0"
    },
    "4495": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4496": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4497": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4498": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4499": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4500": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4502": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4503": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "EQ",
      "path": "0"
    },
    "4504": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BD"
    },
    "4507": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4508": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4510": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4511": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4512": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4513": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4515": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "NOT",
      "path": "0"
    },
    "4516": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "4518": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4519": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "ADD",
      "path": "0"
    },
    "4520": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "AND",
      "path": "0"
    },
    "4521": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4522": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "ADD",
      "path": "0"
    },
    "4523": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4525": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4526": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4527": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4528": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4529": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4530": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4532": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4534": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4535": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "ADD",
      "path": "0"
    },
    "4536": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4537": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C2"
    },
    "4540": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4541": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4542": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4544": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4545": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4546": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4547": {
      "fn": "Permitable._permit",
      "offset": [
        41104,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4548": {
      "fn": "Permitable._permit",
      "offset": [
        41066,
        41179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4549": {
      "fn": "Permitable._permit",
      "offset": [
        41066,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4550": {
      "fn": "Permitable._permit",
      "offset": [
        41066,
        41179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4551": {
      "fn": "Permitable._permit",
      "offset": [
        41066,
        41179
      ],
      "op": "POP",
      "path": "0"
    },
    "4552": {
      "branch": 105,
      "fn": "Permitable._permit",
      "offset": [
        41198,
        41205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4553": {
      "fn": "Permitable._permit",
      "offset": [
        41193,
        41513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12DE"
    },
    "4556": {
      "branch": 105,
      "fn": "Permitable._permit",
      "offset": [
        41193,
        41513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4557": {
      "fn": "Permitable._permit",
      "offset": [
        41225,
        41245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4559": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1204"
    },
    "4562": {
      "fn": "Permitable._permit",
      "offset": [
        41273,
        41279
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4563": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4565": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4566": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4567": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4569": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "ADD",
      "path": "0"
    },
    "4570": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4572": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4573": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4574": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4576": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4577": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4578": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4580": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "ADD",
      "path": "0"
    },
    "4581": {
      "op": "PUSH20",
      "value": "0x2832B936B4BA1031B0B636103330B4B632B21D1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "4604": {
      "op": "SHL"
    },
    "4605": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4606": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4607": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "POP",
      "path": "0"
    },
    "4608": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE08"
    },
    "4611": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41248,
        41304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4612": {
      "fn": "Permitable._permit",
      "offset": [
        41248,
        41304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4613": {
      "fn": "Permitable._permit",
      "offset": [
        41225,
        41304
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4614": {
      "fn": "Permitable._permit",
      "offset": [
        41225,
        41304
      ],
      "op": "POP",
      "path": "0"
    },
    "4615": {
      "fn": "Permitable._permit",
      "offset": [
        41371,
        41377
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4616": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41331
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4623": {
      "op": "SHL"
    },
    "4624": {
      "op": "SUB"
    },
    "4625": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41341
      ],
      "op": "AND",
      "path": "0"
    },
    "4626": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41341
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "4631": {
      "fn": "Permitable._permit",
      "offset": [
        41342,
        41352
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4632": {
      "fn": "Permitable._permit",
      "offset": [
        41362,
        41366
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4633": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4635": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4636": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4637": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4642": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "AND",
      "path": "0"
    },
    "4643": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4645": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SHL",
      "path": "0"
    },
    "4646": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4647": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4648": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4650": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ADD",
      "path": "0"
    },
    "4651": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1235"
    },
    "4654": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4655": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4656": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4657": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8E"
    },
    "4660": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4661": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4662": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4664": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4666": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4667": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4668": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4669": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SUB",
      "path": "0"
    },
    "4670": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4671": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4672": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4673": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "4674": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4675": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4676": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4677": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124D"
    },
    "4680": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4681": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4683": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4684": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4685": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4686": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "POP",
      "path": "0"
    },
    "4687": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "GAS",
      "path": "0"
    },
    "4688": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4689": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4690": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4691": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4692": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1261"
    },
    "4695": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4696": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4697": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4699": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4700": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4701": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4702": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4704": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4705": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4706": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "POP",
      "path": "0"
    },
    "4707": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "POP",
      "path": "0"
    },
    "4708": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "POP",
      "path": "0"
    },
    "4709": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "POP",
      "path": "0"
    },
    "4710": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4712": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4713": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4714": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4716": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "NOT",
      "path": "0"
    },
    "4717": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4719": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4720": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ADD",
      "path": "0"
    },
    "4721": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "AND",
      "path": "0"
    },
    "4722": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4723": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ADD",
      "path": "0"
    },
    "4724": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4725": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4727": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4728": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "POP",
      "path": "0"
    },
    "4729": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4730": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "ADD",
      "path": "0"
    },
    "4731": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4732": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1285"
    },
    "4735": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4736": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4737": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEA"
    },
    "4740": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4741": {
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4742": {
      "branch": 106,
      "fn": "Permitable._permit",
      "offset": [
        41326,
        41377
      ],
      "op": "LT",
      "path": "0"
    },
    "4743": {
      "fn": "Permitable._permit",
      "offset": [
        41322,
        41499
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4744": {
      "fn": "Permitable._permit",
      "offset": [
        41322,
        41499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A5"
    },
    "4747": {
      "branch": 106,
      "fn": "Permitable._permit",
      "offset": [
        41322,
        41499
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4748": {
      "fn": "Permitable._permit",
      "offset": [
        41408,
        41414
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 43
    },
    "4749": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4751": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4758": {
      "op": "SHL"
    },
    "4759": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4760": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4761": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4763": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "ADD",
      "path": "0"
    },
    "4764": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "4767": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4768": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4769": {
      "fn": "Permitable._permit",
      "offset": [
        41401,
        41415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF4"
    },
    "4772": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41401,
        41415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4773": {
      "fn": "Permitable._permit",
      "offset": [
        41322,
        41499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4774": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 44,
      "value": "0x8C379A0AFCC32B1A39302F7CB8073359698411AB5FD6E3EDB2C02C0B5FBA8AA"
    },
    "4807": {
      "fn": "Permitable._permit",
      "offset": [
        41473,
        41479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4808": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4810": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4811": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D4"
    },
    "4814": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4815": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4816": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF4"
    },
    "4819": {
      "fn": "Permitable._permit",
      "jump": "i",
      "offset": [
        41467,
        41480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4820": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4821": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4823": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4824": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4825": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4826": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "SUB",
      "path": "0"
    },
    "4827": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4828": {
      "fn": "Permitable._permit",
      "offset": [
        41467,
        41480
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4829": {
      "fn": "Permitable._permit",
      "offset": [
        41193,
        41513
      ],
      "op": "POP",
      "path": "0"
    },
    "4830": {
      "fn": "Permitable._permit",
      "offset": [
        41193,
        41513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4831": {
      "fn": "Permitable._permit",
      "offset": [
        40960,
        41523
      ],
      "op": "POP",
      "path": "0"
    },
    "4832": {
      "fn": "Permitable._permit",
      "offset": [
        40960,
        41523
      ],
      "op": "POP",
      "path": "0"
    },
    "4833": {
      "fn": "Permitable._permit",
      "offset": [
        40960,
        41523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4834": {
      "fn": "Permitable._permit",
      "offset": [
        40871,
        41529
      ],
      "op": "POP",
      "path": "0"
    },
    "4835": {
      "fn": "Permitable._permit",
      "offset": [
        40871,
        41529
      ],
      "op": "POP",
      "path": "0"
    },
    "4836": {
      "fn": "Permitable._permit",
      "offset": [
        40871,
        41529
      ],
      "op": "POP",
      "path": "0"
    },
    "4837": {
      "fn": "Permitable._permit",
      "offset": [
        40871,
        41529
      ],
      "op": "POP",
      "path": "0"
    },
    "4838": {
      "fn": "Permitable._permit",
      "jump": "o",
      "offset": [
        40871,
        41529
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4839": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32220,
        32423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4840": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32320,
        32416
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x12E1"
    },
    "4843": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32340,
        32345
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4844": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32370,
        32397
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "4849": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32370,
        32397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4851": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32370,
        32397
      ],
      "op": "SHL",
      "path": "0"
    },
    "4852": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32399,
        32403
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4853": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32405,
        32407
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4854": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32409,
        32414
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4855": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4857": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4858": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4860": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "ADD",
      "path": "0"
    },
    "4861": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1308"
    },
    "4864": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4865": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4866": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4867": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4868": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CFB"
    },
    "4871": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        32347,
        32415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4872": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4873": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4875": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4876": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4879": {
      "op": "NOT"
    },
    "4880": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4881": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4882": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SUB",
      "path": "0"
    },
    "4883": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "ADD",
      "path": "0"
    },
    "4884": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4885": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4886": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4887": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4888": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4889": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4891": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4892": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "ADD",
      "path": "0"
    },
    "4893": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4894": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4901": {
      "op": "SHL"
    },
    "4902": {
      "op": "SUB"
    },
    "4903": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "AND",
      "path": "0"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "op": "SUB"
    },
    "4912": {
      "op": "NOT"
    },
    "4913": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4914": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4915": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "AND",
      "path": "0"
    },
    "4916": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4917": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4918": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4919": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "OR",
      "path": "0"
    },
    "4920": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4921": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4922": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32347,
        32415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4923": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        32320,
        32339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A4"
    },
    "4926": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        32320,
        32416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4927": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35478,
        35706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4928": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35554,
        35561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4930": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35577,
        35589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134A"
    },
    "4933": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35583,
        35588
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4934": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35577,
        35582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F8"
    },
    "4937": {
      "fn": "UniERC20.uniBalanceOf",
      "jump": "i",
      "offset": [
        35577,
        35589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4938": {
      "branch": 107,
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35577,
        35589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4939": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35573,
        35700
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4940": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35573,
        35700
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1360"
    },
    "4943": {
      "branch": 107,
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35573,
        35700
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4944": {
      "op": "POP"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4951": {
      "op": "SHL"
    },
    "4952": {
      "op": "SUB"
    },
    "4953": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35612,
        35627
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 46
    },
    "4954": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35612,
        35627
      ],
      "op": "AND",
      "path": "0"
    },
    "4955": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35612,
        35627
      ],
      "op": "BALANCE",
      "path": "0"
    },
    "4956": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35605,
        35627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101B"
    },
    "4959": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35605,
        35627
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4960": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35573,
        35700
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4961": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x40"
    },
    "4963": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4964": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4971": {
      "op": "SHL"
    },
    "4972": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4973": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "op": "SUB"
    },
    "4982": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35680
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4983": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35680
      ],
      "op": "AND",
      "path": "0"
    },
    "4984": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4985": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35680
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4990": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4991": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138C"
    },
    "4994": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4995": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35681,
        35688
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4996": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35681,
        35688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4997": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4999": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ADD",
      "path": "0"
    },
    "5000": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7A"
    },
    "5003": {
      "fn": "UniERC20.uniBalanceOf",
      "jump": "i",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5004": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5005": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5007": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5009": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5010": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5011": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5012": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "SUB",
      "path": "0"
    },
    "5013": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5014": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5015": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5016": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "5017": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5018": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5019": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5020": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A4"
    },
    "5023": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5024": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5026": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5027": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5028": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5029": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5030": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "GAS",
      "path": "0"
    },
    "5031": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5032": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5033": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5034": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5035": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B8"
    },
    "5038": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5039": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5040": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5042": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5043": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5044": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5045": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5047": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5048": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5049": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5050": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5051": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5052": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5053": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5055": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5056": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5057": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5059": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "NOT",
      "path": "0"
    },
    "5060": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5062": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5063": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ADD",
      "path": "0"
    },
    "5064": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "AND",
      "path": "0"
    },
    "5065": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5066": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ADD",
      "path": "0"
    },
    "5067": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5068": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5070": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5071": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5072": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5073": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "ADD",
      "path": "0"
    },
    "5074": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5075": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DC"
    },
    "5078": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5079": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5080": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEA"
    },
    "5083": {
      "fn": "UniERC20.uniBalanceOf",
      "jump": "i",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5084": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35665,
        35689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5085": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35658,
        35689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5086": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35658,
        35689
      ],
      "op": "POP",
      "path": "0"
    },
    "5087": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35658,
        35689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101B"
    },
    "5090": {
      "fn": "UniERC20.uniBalanceOf",
      "offset": [
        35658,
        35689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5091": {
      "fn": "SafeMath.add",
      "offset": [
        19005,
        19180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5092": {
      "fn": "SafeMath.add",
      "offset": [
        19063,
        19070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5094": {
      "fn": "SafeMath.add",
      "offset": [
        19094,
        19099
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5095": {
      "fn": "SafeMath.add",
      "offset": [
        19094,
        19099
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5096": {
      "fn": "SafeMath.add",
      "offset": [
        19094,
        19099
      ],
      "op": "ADD",
      "path": "0"
    },
    "5097": {
      "fn": "SafeMath.add",
      "offset": [
        19117,
        19123
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 48
    },
    "5098": {
      "fn": "SafeMath.add",
      "offset": [
        19117,
        19123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5099": {
      "fn": "SafeMath.add",
      "offset": [
        19117,
        19123
      ],
      "op": "LT",
      "path": "0"
    },
    "5100": {
      "branch": 108,
      "fn": "SafeMath.add",
      "offset": [
        19117,
        19123
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5101": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1408"
    },
    "5104": {
      "branch": 108,
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5105": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5107": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5116": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5117": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5119": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "ADD",
      "path": "0"
    },
    "5120": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "5123": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5124": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E99"
    },
    "5127": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        19109,
        19155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5128": {
      "fn": "SafeMath.add",
      "offset": [
        19109,
        19155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5129": {
      "fn": "SafeMath.add",
      "offset": [
        19172,
        19173
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 49
    },
    "5130": {
      "fn": "SafeMath.add",
      "offset": [
        19005,
        19180
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "op": "POP"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        19005,
        19180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5135": {
      "fn": "SafeMath.mul",
      "offset": [
        19853,
        20068
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5136": {
      "fn": "SafeMath.mul",
      "offset": [
        19911,
        19918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5138": {
      "branch": 109,
      "fn": "SafeMath.mul",
      "offset": [
        19934,
        19940
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5139": {
      "fn": "SafeMath.mul",
      "offset": [
        19930,
        19950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141E"
    },
    "5142": {
      "branch": 109,
      "fn": "SafeMath.mul",
      "offset": [
        19930,
        19950
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "fn": "SafeMath.mul",
      "offset": [
        19949,
        19950
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x0"
    },
    "5146": {
      "fn": "SafeMath.mul",
      "offset": [
        19942,
        19950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101B"
    },
    "5149": {
      "fn": "SafeMath.mul",
      "offset": [
        19942,
        19950
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5150": {
      "fn": "SafeMath.mul",
      "offset": [
        19930,
        19950
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5151": {
      "fn": "SafeMath.mul",
      "offset": [
        19972,
        19977
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5152": {
      "fn": "SafeMath.mul",
      "offset": [
        19972,
        19977
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5153": {
      "fn": "SafeMath.mul",
      "offset": [
        19972,
        19977
      ],
      "op": "MUL",
      "path": "0"
    },
    "5154": {
      "fn": "SafeMath.mul",
      "offset": [
        19976,
        19977
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5155": {
      "fn": "SafeMath.mul",
      "offset": [
        19972,
        19973
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5156": {
      "fn": "SafeMath.mul",
      "offset": [
        19972,
        19977
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5157": {
      "fn": "SafeMath.mul",
      "offset": [
        19972,
        19973
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5158": {
      "fn": "SafeMath.mul",
      "offset": [
        19995,
        20000
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x142B"
    },
    "5161": {
      "fn": "SafeMath.mul",
      "offset": [
        19995,
        20000
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5162": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        19995,
        20000
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5163": {
      "fn": "SafeMath.mul",
      "offset": [
        19995,
        20000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5164": {
      "fn": "SafeMath.mul",
      "offset": [
        19995,
        20000
      ],
      "op": "DIV",
      "path": "0"
    },
    "5165": {
      "branch": 110,
      "fn": "SafeMath.mul",
      "offset": [
        19995,
        20005
      ],
      "op": "EQ",
      "path": "0"
    },
    "5166": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1408"
    },
    "5169": {
      "branch": 110,
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5170": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5172": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5173": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5179": {
      "op": "SHL"
    },
    "5180": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5181": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5182": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5184": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "ADD",
      "path": "0"
    },
    "5185": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "5188": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5189": {
      "fn": "SafeMath.mul",
      "offset": [
        19987,
        20043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x204B"
    },
    "5192": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        19987,
        20043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5193": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39891,
        40013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5194": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39943,
        39956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5196": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39975,
        40006
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x112C"
    },
    "5199": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39999,
        40004
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5200": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5202": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5203": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5205": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "ADD",
      "path": "0"
    },
    "5206": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145F"
    },
    "5209": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5210": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5211": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C71"
    },
    "5214": {
      "fn": "RevertReasonParser._toHex",
      "jump": "i",
      "offset": [
        39982,
        40005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5215": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5216": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5218": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5219": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5221": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5222": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5223": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "SUB",
      "path": "0"
    },
    "5224": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "SUB",
      "path": "0"
    },
    "5225": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5226": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5227": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5228": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5230": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        39982,
        40005
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5231": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40019,
        40475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5232": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40196,
        40207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5233": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40196,
        40207
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5234": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40075,
        40088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5236": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40075,
        40088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5237": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5256": {
      "op": "SHL"
    },
    "5257": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40100,
        40153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5258": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40100,
        40116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5260": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40100,
        40116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5261": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40210,
        40211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5263": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40196,
        40211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5264": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40196,
        40211
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5265": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40196,
        40211
      ],
      "op": "MUL",
      "path": "0"
    },
    "5266": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40192,
        40211
      ],
      "op": "ADD",
      "path": "0"
    },
    "5267": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5276": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5277": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "GT",
      "path": "0"
    },
    "5278": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5279": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5280": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A8"
    },
    "5283": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5284": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5286": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5287": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5288": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5289": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "POP",
      "path": "0"
    },
    "5290": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5292": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5293": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5294": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5295": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5296": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5297": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5298": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5300": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5301": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5303": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "NOT",
      "path": "0"
    },
    "5304": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "AND",
      "path": "0"
    },
    "5305": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5307": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5308": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5309": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5310": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5312": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5313": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5314": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5315": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "5318": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5319": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5321": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5322": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5323": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5324": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5325": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "5326": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5327": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "5328": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5329": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5330": {
      "op": "POP"
    },
    "5331": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5332": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40182,
        40212
      ],
      "op": "POP",
      "path": "0"
    },
    "5333": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40163,
        40212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5334": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40163,
        40212
      ],
      "op": "POP",
      "path": "0"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "5339": {
      "op": "SHL"
    },
    "5340": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40225
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 53
    },
    "5341": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40226,
        40227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5343": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5344": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5345": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5346": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "LT",
      "path": "0"
    },
    "5347": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E8"
    },
    "5350": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5351": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5352": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5353": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5355": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "ADD",
      "path": "0"
    },
    "5356": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40228
      ],
      "op": "ADD",
      "path": "0"
    },
    "5357": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5364": {
      "op": "SHL"
    },
    "5365": {
      "op": "SUB"
    },
    "5366": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "NOT",
      "path": "0"
    },
    "5367": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "AND",
      "path": "0"
    },
    "5368": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5369": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5370": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5372": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "BYTE",
      "path": "0"
    },
    "5373": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5374": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "5375": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40222,
        40234
      ],
      "op": "POP",
      "path": "0"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "5380": {
      "op": "SHL"
    },
    "5381": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40247
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 54
    },
    "5382": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40248,
        40249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5384": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5385": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5386": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5387": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "LT",
      "path": "0"
    },
    "5388": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1511"
    },
    "5391": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5392": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5393": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5394": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5396": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "ADD",
      "path": "0"
    },
    "5397": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40250
      ],
      "op": "ADD",
      "path": "0"
    },
    "5398": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5405": {
      "op": "SHL"
    },
    "5406": {
      "op": "SUB"
    },
    "5407": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "NOT",
      "path": "0"
    },
    "5408": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "AND",
      "path": "0"
    },
    "5409": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5410": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5411": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5413": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "BYTE",
      "path": "0"
    },
    "5414": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5415": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "5416": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40244,
        40256
      ],
      "op": "POP",
      "path": "0"
    },
    "5417": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40271,
        40280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5419": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5420": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40290,
        40294
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5421": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40290,
        40301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5422": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40286,
        40287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5423": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40286,
        40301
      ],
      "op": "LT",
      "path": "0"
    },
    "5424": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5425": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E6"
    },
    "5428": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5429": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40347
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 55
    },
    "5430": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40365,
        40366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5432": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40358
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5433": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40359,
        40360
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5434": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5435": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5436": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5437": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "LT",
      "path": "0"
    },
    "5438": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1543"
    },
    "5441": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5442": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5443": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5444": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "ADD",
      "path": "0"
    },
    "5445": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5447": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "ADD",
      "path": "0"
    },
    "5448": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5455": {
      "op": "SHL"
    },
    "5456": {
      "op": "SUB"
    },
    "5457": {
      "op": "NOT"
    },
    "5458": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "AND",
      "path": "0"
    },
    "5459": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5460": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40366
      ],
      "op": "SHR",
      "path": "0"
    },
    "5461": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40354,
        40361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF8"
    },
    "5463": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40348,
        40367
      ],
      "op": "SHR",
      "path": "0"
    },
    "5464": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "5466": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5467": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "LT",
      "path": "0"
    },
    "5468": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1561"
    },
    "5471": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5472": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5473": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5474": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "BYTE",
      "path": "0"
    },
    "5475": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF8"
    },
    "5477": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40339,
        40368
      ],
      "op": "SHL",
      "path": "0"
    },
    "5478": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40325
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5479": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40330,
        40331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5480": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40326,
        40327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5482": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40326,
        40331
      ],
      "op": "MUL",
      "path": "0"
    },
    "5483": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40334,
        40335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5485": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40326,
        40335
      ],
      "op": "ADD",
      "path": "0"
    },
    "5486": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5487": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5488": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5489": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "LT",
      "path": "0"
    },
    "5490": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1577"
    },
    "5493": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5494": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5495": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5496": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5498": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "ADD",
      "path": "0"
    },
    "5499": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40336
      ],
      "op": "ADD",
      "path": "0"
    },
    "5500": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5507": {
      "op": "SHL"
    },
    "5508": {
      "op": "SUB"
    },
    "5509": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "NOT",
      "path": "0"
    },
    "5510": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "AND",
      "path": "0"
    },
    "5511": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5512": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5513": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5515": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "BYTE",
      "path": "0"
    },
    "5516": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5517": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "5518": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40322,
        40368
      ],
      "op": "POP",
      "path": "0"
    },
    "5519": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40407
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 56
    },
    "5520": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40418
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5521": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40419,
        40420
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5522": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5523": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5524": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5525": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "LT",
      "path": "0"
    },
    "5526": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159B"
    },
    "5529": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5530": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5531": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5532": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5534": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5535": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "ADD",
      "path": "0"
    },
    "5536": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "ADD",
      "path": "0"
    },
    "5537": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5538": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF8"
    },
    "5540": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40414,
        40421
      ],
      "op": "SHR",
      "path": "0"
    },
    "5541": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40424,
        40428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "5543": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40408,
        40429
      ],
      "op": "AND",
      "path": "0"
    },
    "5544": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "5546": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5547": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "LT",
      "path": "0"
    },
    "5548": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B1"
    },
    "5551": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5552": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5553": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5554": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "BYTE",
      "path": "0"
    },
    "5555": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF8"
    },
    "5557": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40399,
        40430
      ],
      "op": "SHL",
      "path": "0"
    },
    "5558": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40385
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5559": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40390,
        40391
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5560": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40386,
        40387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5562": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40386,
        40391
      ],
      "op": "MUL",
      "path": "0"
    },
    "5563": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40394,
        40395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5565": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40386,
        40395
      ],
      "op": "ADD",
      "path": "0"
    },
    "5566": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5567": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5568": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5569": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "LT",
      "path": "0"
    },
    "5570": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C7"
    },
    "5573": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5574": {
      "dev": "Index out of range",
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5575": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5576": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5578": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "ADD",
      "path": "0"
    },
    "5579": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40396
      ],
      "op": "ADD",
      "path": "0"
    },
    "5580": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5587": {
      "op": "SHL"
    },
    "5588": {
      "op": "SUB"
    },
    "5589": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "NOT",
      "path": "0"
    },
    "5590": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "AND",
      "path": "0"
    },
    "5591": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5592": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5593": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5595": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "BYTE",
      "path": "0"
    },
    "5596": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5597": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40382,
        40430
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "5598": {
      "op": "POP"
    },
    "5599": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40303,
        40306
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x1"
    },
    "5601": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40303,
        40306
      ],
      "op": "ADD",
      "path": "0"
    },
    "5602": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152B"
    },
    "5605": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5606": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40266,
        40441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5607": {
      "op": "POP"
    },
    "5608": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40464,
        40467
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 58
    },
    "5609": {
      "fn": "RevertReasonParser._toHex",
      "offset": [
        40019,
        40475
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5610": {
      "op": "POP"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "op": "POP"
    },
    "5613": {
      "fn": "RevertReasonParser._toHex",
      "jump": "o",
      "offset": [
        40019,
        40475
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5614": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36674,
        37101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5615": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36814,
        36826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5617": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36828,
        36851
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5618": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36863,
        36868
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5625": {
      "op": "SHL"
    },
    "5626": {
      "op": "SUB"
    },
    "5627": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36874
      ],
      "op": "AND",
      "path": "0"
    },
    "5628": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36875,
        36879
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5629": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5631": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5632": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1609"
    },
    "5635": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5636": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5637": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B80"
    },
    "5640": {
      "fn": "UniERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        36855,
        36880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5641": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5642": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5644": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5646": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5647": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5648": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5649": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "SUB",
      "path": "0"
    },
    "5650": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5651": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5653": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5654": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "GAS",
      "path": "0"
    },
    "5655": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "CALL",
      "path": "0"
    },
    "5656": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5657": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5658": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5659": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5660": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5661": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5663": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5664": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "EQ",
      "path": "0"
    },
    "5665": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1646"
    },
    "5668": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5669": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5671": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5672": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5673": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5674": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5676": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "NOT",
      "path": "0"
    },
    "5677": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "5679": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5680": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "ADD",
      "path": "0"
    },
    "5681": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "AND",
      "path": "0"
    },
    "5682": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5683": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "ADD",
      "path": "0"
    },
    "5684": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5686": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5687": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5688": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5689": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5690": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5691": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5693": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5695": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5696": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "ADD",
      "path": "0"
    },
    "5697": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5698": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164B"
    },
    "5701": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5702": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5703": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5705": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5706": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5707": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5708": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36855,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5709": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36813,
        36880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5710": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36813,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5711": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36813,
        36880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5712": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36813,
        36880
      ],
      "op": "POP",
      "path": "0"
    },
    "5713": {
      "branch": 111,
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36898,
        36905
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 59
    },
    "5714": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166D"
    },
    "5717": {
      "branch": 111,
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5718": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5720": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5729": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5730": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5732": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "ADD",
      "path": "0"
    },
    "5733": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "5736": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5737": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215E"
    },
    "5740": {
      "fn": "UniERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        36890,
        36931
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5741": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36890,
        36931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5742": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36946,
        36963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5743": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36946,
        36963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5744": {
      "branch": 112,
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36946,
        36967
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5745": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36942,
        37095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E1"
    },
    "5748": {
      "branch": 112,
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        36942,
        37095
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5749": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37029,
        37039
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 60
    },
    "5750": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5751": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5753": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "ADD",
      "path": "0"
    },
    "5754": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5755": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5756": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5757": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "ADD",
      "path": "0"
    },
    "5758": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5759": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1688"
    },
    "5762": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5763": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5764": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F9"
    },
    "5767": {
      "fn": "UniERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        37018,
        37048
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5768": {
      "branch": 113,
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37018,
        37048
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5769": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E1"
    },
    "5772": {
      "branch": 113,
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5773": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5775": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5784": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5785": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5787": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "ADD",
      "path": "0"
    },
    "5788": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "5791": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5792": {
      "fn": "UniERC20._callOptionalReturn",
      "offset": [
        37010,
        37084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C1"
    },
    "5795": {
      "fn": "UniERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        37010,
        37084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5796": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34302,
        35053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5797": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34721,
        34744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5799": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F9"
    },
    "5802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34775,
        34779
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5803": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5805": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "ADD",
      "path": "0"
    },
    "5810": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5814": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5818": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5820": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "ADD",
      "path": "0"
    },
    "5821": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "POP",
      "path": "0"
    },
    "5857": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34755,
        34760
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5864": {
      "op": "SHL"
    },
    "5865": {
      "op": "SUB"
    },
    "5866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34774
      ],
      "op": "AND",
      "path": "0"
    },
    "5867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1733"
    },
    "5870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "AND",
      "path": "0"
    },
    "5880": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        34747,
        34816
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34747,
        34816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34830,
        34847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34830,
        34847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34721,
        34816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5885": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34721,
        34816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5886": {
      "op": "POP"
    },
    "5887": {
      "branch": 114,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34830,
        34851
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34826,
        35047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F3"
    },
    "5891": {
      "branch": 114,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34826,
        35047
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34970,
        34980
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 61
    },
    "5893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "ADD",
      "path": "0"
    },
    "5897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "ADD",
      "path": "0"
    },
    "5901": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1717"
    },
    "5905": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F9"
    },
    "5910": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        34959,
        34989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5911": {
      "branch": 115,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34959,
        34989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F3"
    },
    "5915": {
      "branch": 115,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5925": {
      "op": "SHL"
    },
    "5926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "ADD",
      "path": "0"
    },
    "5931": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "5934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5935": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        34951,
        35036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21C4"
    },
    "5938": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        34951,
        35036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5939": {
      "fn": "Address.functionCall",
      "offset": [
        27150,
        27343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5940": {
      "fn": "Address.functionCall",
      "offset": [
        27253,
        27265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5942": {
      "fn": "Address.functionCall",
      "offset": [
        27284,
        27336
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0x1742"
    },
    "5945": {
      "fn": "Address.functionCall",
      "offset": [
        27306,
        27312
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5946": {
      "fn": "Address.functionCall",
      "offset": [
        27314,
        27318
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5947": {
      "fn": "Address.functionCall",
      "offset": [
        27320,
        27321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5949": {
      "fn": "Address.functionCall",
      "offset": [
        27323,
        27335
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5950": {
      "fn": "Address.functionCall",
      "offset": [
        27284,
        27305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174A"
    },
    "5953": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        27284,
        27336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5954": {
      "fn": "Address.functionCall",
      "offset": [
        27284,
        27336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5955": {
      "fn": "Address.functionCall",
      "offset": [
        27277,
        27336
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5956": {
      "fn": "Address.functionCall",
      "offset": [
        27150,
        27343
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "op": "POP"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "op": "POP"
    },
    "5961": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        27150,
        27343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28177,
        28700
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28304,
        28316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28361,
        28366
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 63
    },
    "5966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28336,
        28357
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "5967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28336,
        28366
      ],
      "op": "LT",
      "path": "0"
    },
    "5968": {
      "branch": 116,
      "fn": "Address.functionCallWithValue",
      "offset": [
        28336,
        28366
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176C"
    },
    "5972": {
      "branch": 116,
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5982": {
      "op": "SHL"
    },
    "5983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "ADD",
      "path": "0"
    },
    "5988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "5991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F60"
    },
    "5995": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        28328,
        28409
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28328,
        28409
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28427,
        28445
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x1775"
    },
    "6000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28438,
        28444
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28427,
        28437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180A"
    },
    "6004": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        28427,
        28445
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6005": {
      "branch": 117,
      "fn": "Address.functionCallWithValue",
      "offset": [
        28427,
        28445
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1791"
    },
    "6009": {
      "branch": 117,
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6019": {
      "op": "SHL"
    },
    "6020": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "ADD",
      "path": "0"
    },
    "6025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "6028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "6032": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        28419,
        28479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28419,
        28479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28550,
        28562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6036": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28564,
        28587
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28597
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6044": {
      "op": "SHL"
    },
    "6045": {
      "op": "SUB"
    },
    "6046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28602
      ],
      "op": "AND",
      "path": "0"
    },
    "6047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28611,
        28616
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28619,
        28623
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6049": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17AD"
    },
    "6055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B80"
    },
    "6060": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        28591,
        28624
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6064": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "SUB",
      "path": "0"
    },
    "6070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6071": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "GAS",
      "path": "0"
    },
    "6074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "CALL",
      "path": "0"
    },
    "6075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6079": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6080": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6083": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6084": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "EQ",
      "path": "0"
    },
    "6085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17EA"
    },
    "6088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "NOT",
      "path": "0"
    },
    "6097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "6099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "ADD",
      "path": "0"
    },
    "6101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "AND",
      "path": "0"
    },
    "6102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "ADD",
      "path": "0"
    },
    "6104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "ADD",
      "path": "0"
    },
    "6117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17EF"
    },
    "6121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6128": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28591,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28549,
        28624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28549,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28549,
        28624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28549,
        28624
      ],
      "op": "POP",
      "path": "0"
    },
    "6133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28641,
        28693
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 65,
      "value": "0x17FF"
    },
    "6136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28659,
        28666
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28668,
        28678
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28680,
        28692
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28641,
        28658
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1810"
    },
    "6142": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        28641,
        28693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28641,
        28693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28634,
        28693
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "6145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        28177,
        28700
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "6146": {
      "op": "POP"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "POP"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "op": "POP"
    },
    "6151": {
      "op": "POP"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        28177,
        28700
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6154": {
      "fn": "Address.isContract",
      "offset": [
        24295,
        24708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6155": {
      "fn": "Address.isContract",
      "offset": [
        24655,
        24675
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "6156": {
      "fn": "Address.isContract",
      "offset": [
        24693,
        24701
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 66
    },
    "6157": {
      "fn": "Address.isContract",
      "offset": [
        24693,
        24701
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6158": {
      "fn": "Address.isContract",
      "offset": [
        24693,
        24701
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6159": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        24295,
        24708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6160": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30660,
        31385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6161": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30775,
        30787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6163": {
      "branch": 118,
      "fn": "Address._verifyCallResult",
      "offset": [
        30803,
        30810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6164": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30799,
        31379
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6165": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30799,
        31379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181F"
    },
    "6168": {
      "branch": 118,
      "fn": "Address._verifyCallResult",
      "offset": [
        30799,
        31379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6169": {
      "op": "POP"
    },
    "6170": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30833,
        30843
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 67
    },
    "6171": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30826,
        30843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1408"
    },
    "6174": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30826,
        30843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6175": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30799,
        31379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6176": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30944,
        30961
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6177": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30944,
        30961
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6178": {
      "branch": 119,
      "fn": "Address._verifyCallResult",
      "offset": [
        30944,
        30965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6179": {
      "fn": "Address._verifyCallResult",
      "offset": [
        30940,
        31369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182F"
    },
    "6182": {
      "branch": 119,
      "fn": "Address._verifyCallResult",
      "offset": [
        30940,
        31369
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6183": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31202,
        31212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6184": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31196,
        31213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6185": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31262,
        31277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6186": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31249,
        31259
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6187": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31245,
        31247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6189": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31241,
        31260
      ],
      "op": "ADD",
      "path": "0"
    },
    "6190": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31234,
        31278
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6191": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31151,
        31296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6192": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31341,
        31353
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 68
    },
    "6193": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6195": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6204": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6205": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6207": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "ADD",
      "path": "0"
    },
    "6208": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "6211": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6212": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6213": {
      "fn": "Address._verifyCallResult",
      "offset": [
        31334,
        31354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF4"
    },
    "6216": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        31334,
        31354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6217": {
      "op": "JUMPDEST"
    },
    "6218": {
      "op": "DUP1"
    },
    "6219": {
      "op": "CALLDATALOAD"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "6223": {
      "op": "DUP2"
    },
    "6224": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6227": {
      "jump": "i",
      "op": "JUMP"
    },
    "6228": {
      "op": "JUMPDEST"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6231": {
      "op": "DUP1"
    },
    "6232": {
      "op": "DUP4"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6235": {
      "op": "DUP5"
    },
    "6236": {
      "op": "ADD"
    },
    "6237": {
      "op": "SLT"
    },
    "6238": {
      "op": "PUSH2",
      "value": "0x1865"
    },
    "6241": {
      "op": "JUMPI"
    },
    "6242": {
      "op": "DUP2"
    },
    "6243": {
      "op": "DUP3"
    },
    "6244": {
      "op": "REVERT"
    },
    "6245": {
      "op": "JUMPDEST"
    },
    "6246": {
      "op": "POP"
    },
    "6247": {
      "op": "DUP2"
    },
    "6248": {
      "op": "CALLDATALOAD"
    },
    "6249": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6258": {
      "op": "DUP2"
    },
    "6259": {
      "op": "GT"
    },
    "6260": {
      "op": "ISZERO"
    },
    "6261": {
      "op": "PUSH2",
      "value": "0x187C"
    },
    "6264": {
      "op": "JUMPI"
    },
    "6265": {
      "op": "DUP2"
    },
    "6266": {
      "op": "DUP3"
    },
    "6267": {
      "op": "REVERT"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6271": {
      "op": "DUP4"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "SWAP2"
    },
    "6274": {
      "op": "POP"
    },
    "6275": {
      "op": "DUP4"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6278": {
      "op": "DUP1"
    },
    "6279": {
      "op": "DUP4"
    },
    "6280": {
      "op": "MUL"
    },
    "6281": {
      "op": "DUP6"
    },
    "6282": {
      "op": "ADD"
    },
    "6283": {
      "op": "ADD"
    },
    "6284": {
      "op": "GT"
    },
    "6285": {
      "op": "ISZERO"
    },
    "6286": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "6289": {
      "op": "JUMPI"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6292": {
      "op": "DUP1"
    },
    "6293": {
      "op": "REVERT"
    },
    "6294": {
      "op": "JUMPDEST"
    },
    "6295": {
      "op": "SWAP3"
    },
    "6296": {
      "op": "POP"
    },
    "6297": {
      "op": "SWAP3"
    },
    "6298": {
      "op": "SWAP1"
    },
    "6299": {
      "op": "POP"
    },
    "6300": {
      "jump": "o",
      "op": "JUMP"
    },
    "6301": {
      "op": "JUMPDEST"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6304": {
      "op": "DUP1"
    },
    "6305": {
      "op": "DUP4"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6308": {
      "op": "DUP5"
    },
    "6309": {
      "op": "ADD"
    },
    "6310": {
      "op": "SLT"
    },
    "6311": {
      "op": "PUSH2",
      "value": "0x18AE"
    },
    "6314": {
      "op": "JUMPI"
    },
    "6315": {
      "op": "DUP2"
    },
    "6316": {
      "op": "DUP3"
    },
    "6317": {
      "op": "REVERT"
    },
    "6318": {
      "op": "JUMPDEST"
    },
    "6319": {
      "op": "POP"
    },
    "6320": {
      "op": "DUP2"
    },
    "6321": {
      "op": "CALLDATALOAD"
    },
    "6322": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6331": {
      "op": "DUP2"
    },
    "6332": {
      "op": "GT"
    },
    "6333": {
      "op": "ISZERO"
    },
    "6334": {
      "op": "PUSH2",
      "value": "0x18C5"
    },
    "6337": {
      "op": "JUMPI"
    },
    "6338": {
      "op": "DUP2"
    },
    "6339": {
      "op": "DUP3"
    },
    "6340": {
      "op": "REVERT"
    },
    "6341": {
      "op": "JUMPDEST"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6344": {
      "op": "DUP4"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "SWAP2"
    },
    "6347": {
      "op": "POP"
    },
    "6348": {
      "op": "DUP4"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6351": {
      "op": "DUP3"
    },
    "6352": {
      "op": "DUP6"
    },
    "6353": {
      "op": "ADD"
    },
    "6354": {
      "op": "ADD"
    },
    "6355": {
      "op": "GT"
    },
    "6356": {
      "op": "ISZERO"
    },
    "6357": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "6360": {
      "op": "JUMPI"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6363": {
      "op": "DUP1"
    },
    "6364": {
      "op": "REVERT"
    },
    "6365": {
      "op": "JUMPDEST"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6370": {
      "op": "DUP3"
    },
    "6371": {
      "op": "DUP5"
    },
    "6372": {
      "op": "SUB"
    },
    "6373": {
      "op": "SLT"
    },
    "6374": {
      "op": "ISZERO"
    },
    "6375": {
      "op": "PUSH2",
      "value": "0x18EE"
    },
    "6378": {
      "op": "JUMPI"
    },
    "6379": {
      "op": "DUP1"
    },
    "6380": {
      "op": "DUP2"
    },
    "6381": {
      "op": "REVERT"
    },
    "6382": {
      "op": "JUMPDEST"
    },
    "6383": {
      "op": "DUP2"
    },
    "6384": {
      "op": "CALLDATALOAD"
    },
    "6385": {
      "op": "PUSH2",
      "value": "0x1408"
    },
    "6388": {
      "op": "DUP2"
    },
    "6389": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6392": {
      "jump": "i",
      "op": "JUMP"
    },
    "6393": {
      "op": "JUMPDEST"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6398": {
      "op": "DUP3"
    },
    "6399": {
      "op": "DUP5"
    },
    "6400": {
      "op": "SUB"
    },
    "6401": {
      "op": "SLT"
    },
    "6402": {
      "op": "ISZERO"
    },
    "6403": {
      "op": "PUSH2",
      "value": "0x190A"
    },
    "6406": {
      "op": "JUMPI"
    },
    "6407": {
      "op": "DUP1"
    },
    "6408": {
      "op": "DUP2"
    },
    "6409": {
      "op": "REVERT"
    },
    "6410": {
      "op": "JUMPDEST"
    },
    "6411": {
      "op": "DUP2"
    },
    "6412": {
      "op": "MLOAD"
    },
    "6413": {
      "op": "DUP1"
    },
    "6414": {
      "op": "ISZERO"
    },
    "6415": {
      "op": "ISZERO"
    },
    "6416": {
      "op": "DUP2"
    },
    "6417": {
      "op": "EQ"
    },
    "6418": {
      "op": "PUSH2",
      "value": "0x1408"
    },
    "6421": {
      "op": "JUMPI"
    },
    "6422": {
      "op": "DUP2"
    },
    "6423": {
      "op": "DUP3"
    },
    "6424": {
      "op": "REVERT"
    },
    "6425": {
      "op": "JUMPDEST"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6428": {
      "op": "DUP1"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6431": {
      "op": "DUP1"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6434": {
      "op": "DUP6"
    },
    "6435": {
      "op": "DUP8"
    },
    "6436": {
      "op": "SUB"
    },
    "6437": {
      "op": "SLT"
    },
    "6438": {
      "op": "ISZERO"
    },
    "6439": {
      "op": "PUSH2",
      "value": "0x192E"
    },
    "6442": {
      "op": "JUMPI"
    },
    "6443": {
      "op": "DUP3"
    },
    "6444": {
      "op": "DUP4"
    },
    "6445": {
      "op": "REVERT"
    },
    "6446": {
      "op": "JUMPDEST"
    },
    "6447": {
      "op": "DUP5"
    },
    "6448": {
      "op": "CALLDATALOAD"
    },
    "6449": {
      "op": "PUSH2",
      "value": "0x1939"
    },
    "6452": {
      "op": "DUP2"
    },
    "6453": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6456": {
      "jump": "i",
      "op": "JUMP"
    },
    "6457": {
      "op": "JUMPDEST"
    },
    "6458": {
      "op": "SWAP4"
    },
    "6459": {
      "op": "POP"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6462": {
      "op": "DUP6"
    },
    "6463": {
      "op": "ADD"
    },
    "6464": {
      "op": "CALLDATALOAD"
    },
    "6465": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6474": {
      "op": "DUP1"
    },
    "6475": {
      "op": "DUP3"
    },
    "6476": {
      "op": "GT"
    },
    "6477": {
      "op": "ISZERO"
    },
    "6478": {
      "op": "PUSH2",
      "value": "0x1955"
    },
    "6481": {
      "op": "JUMPI"
    },
    "6482": {
      "op": "DUP5"
    },
    "6483": {
      "op": "DUP6"
    },
    "6484": {
      "op": "REVERT"
    },
    "6485": {
      "op": "JUMPDEST"
    },
    "6486": {
      "op": "SWAP1"
    },
    "6487": {
      "op": "DUP7"
    },
    "6488": {
      "op": "ADD"
    },
    "6489": {
      "op": "SWAP1"
    },
    "6490": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6493": {
      "op": "DUP3"
    },
    "6494": {
      "op": "DUP10"
    },
    "6495": {
      "op": "SUB"
    },
    "6496": {
      "op": "SLT"
    },
    "6497": {
      "op": "ISZERO"
    },
    "6498": {
      "op": "PUSH2",
      "value": "0x1969"
    },
    "6501": {
      "op": "JUMPI"
    },
    "6502": {
      "op": "DUP5"
    },
    "6503": {
      "op": "DUP6"
    },
    "6504": {
      "op": "REVERT"
    },
    "6505": {
      "op": "JUMPDEST"
    },
    "6506": {
      "op": "SWAP1"
    },
    "6507": {
      "op": "SWAP4"
    },
    "6508": {
      "op": "POP"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6511": {
      "op": "DUP7"
    },
    "6512": {
      "op": "ADD"
    },
    "6513": {
      "op": "CALLDATALOAD"
    },
    "6514": {
      "op": "SWAP1"
    },
    "6515": {
      "op": "DUP1"
    },
    "6516": {
      "op": "DUP3"
    },
    "6517": {
      "op": "GT"
    },
    "6518": {
      "op": "ISZERO"
    },
    "6519": {
      "op": "PUSH2",
      "value": "0x197E"
    },
    "6522": {
      "op": "JUMPI"
    },
    "6523": {
      "op": "DUP4"
    },
    "6524": {
      "op": "DUP5"
    },
    "6525": {
      "op": "REVERT"
    },
    "6526": {
      "op": "JUMPDEST"
    },
    "6527": {
      "op": "POP"
    },
    "6528": {
      "op": "PUSH2",
      "value": "0x198B"
    },
    "6531": {
      "op": "DUP8"
    },
    "6532": {
      "op": "DUP3"
    },
    "6533": {
      "op": "DUP9"
    },
    "6534": {
      "op": "ADD"
    },
    "6535": {
      "op": "PUSH2",
      "value": "0x189D"
    },
    "6538": {
      "jump": "i",
      "op": "JUMP"
    },
    "6539": {
      "op": "JUMPDEST"
    },
    "6540": {
      "op": "SWAP6"
    },
    "6541": {
      "op": "SWAP9"
    },
    "6542": {
      "op": "SWAP5"
    },
    "6543": {
      "op": "SWAP8"
    },
    "6544": {
      "op": "POP"
    },
    "6545": {
      "op": "SWAP6"
    },
    "6546": {
      "op": "POP"
    },
    "6547": {
      "op": "POP"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "op": "POP"
    },
    "6550": {
      "jump": "o",
      "op": "JUMP"
    },
    "6551": {
      "op": "JUMPDEST"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6554": {
      "op": "DUP1"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6557": {
      "op": "DUP4"
    },
    "6558": {
      "op": "DUP6"
    },
    "6559": {
      "op": "SUB"
    },
    "6560": {
      "op": "SLT"
    },
    "6561": {
      "op": "ISZERO"
    },
    "6562": {
      "op": "PUSH2",
      "value": "0x19A9"
    },
    "6565": {
      "op": "JUMPI"
    },
    "6566": {
      "op": "DUP2"
    },
    "6567": {
      "op": "DUP3"
    },
    "6568": {
      "op": "REVERT"
    },
    "6569": {
      "op": "JUMPDEST"
    },
    "6570": {
      "op": "DUP3"
    },
    "6571": {
      "op": "MLOAD"
    },
    "6572": {
      "op": "PUSH2",
      "value": "0x19B4"
    },
    "6575": {
      "op": "DUP2"
    },
    "6576": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6579": {
      "jump": "i",
      "op": "JUMP"
    },
    "6580": {
      "op": "JUMPDEST"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6583": {
      "op": "SWAP4"
    },
    "6584": {
      "op": "SWAP1"
    },
    "6585": {
      "op": "SWAP4"
    },
    "6586": {
      "op": "ADD"
    },
    "6587": {
      "op": "MLOAD"
    },
    "6588": {
      "op": "SWAP3"
    },
    "6589": {
      "op": "SWAP5"
    },
    "6590": {
      "op": "SWAP3"
    },
    "6591": {
      "op": "SWAP4"
    },
    "6592": {
      "op": "POP"
    },
    "6593": {
      "op": "POP"
    },
    "6594": {
      "op": "POP"
    },
    "6595": {
      "jump": "o",
      "op": "JUMP"
    },
    "6596": {
      "op": "JUMPDEST"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6599": {
      "op": "DUP1"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6602": {
      "op": "DUP4"
    },
    "6603": {
      "op": "DUP6"
    },
    "6604": {
      "op": "SUB"
    },
    "6605": {
      "op": "SLT"
    },
    "6606": {
      "op": "ISZERO"
    },
    "6607": {
      "op": "PUSH2",
      "value": "0x19D6"
    },
    "6610": {
      "op": "JUMPI"
    },
    "6611": {
      "op": "DUP2"
    },
    "6612": {
      "op": "DUP3"
    },
    "6613": {
      "op": "REVERT"
    },
    "6614": {
      "op": "JUMPDEST"
    },
    "6615": {
      "op": "DUP3"
    },
    "6616": {
      "op": "CALLDATALOAD"
    },
    "6617": {
      "op": "PUSH2",
      "value": "0x19E1"
    },
    "6620": {
      "op": "DUP2"
    },
    "6621": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6624": {
      "jump": "i",
      "op": "JUMP"
    },
    "6625": {
      "op": "JUMPDEST"
    },
    "6626": {
      "op": "SWAP5"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6629": {
      "op": "SWAP4"
    },
    "6630": {
      "op": "SWAP1"
    },
    "6631": {
      "op": "SWAP4"
    },
    "6632": {
      "op": "ADD"
    },
    "6633": {
      "op": "CALLDATALOAD"
    },
    "6634": {
      "op": "SWAP4"
    },
    "6635": {
      "op": "POP"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "jump": "o",
      "op": "JUMP"
    },
    "6639": {
      "op": "JUMPDEST"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6642": {
      "op": "DUP1"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6645": {
      "op": "DUP1"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6650": {
      "op": "DUP7"
    },
    "6651": {
      "op": "DUP9"
    },
    "6652": {
      "op": "SUB"
    },
    "6653": {
      "op": "SLT"
    },
    "6654": {
      "op": "ISZERO"
    },
    "6655": {
      "op": "PUSH2",
      "value": "0x1A06"
    },
    "6658": {
      "op": "JUMPI"
    },
    "6659": {
      "op": "DUP1"
    },
    "6660": {
      "op": "DUP2"
    },
    "6661": {
      "op": "REVERT"
    },
    "6662": {
      "op": "JUMPDEST"
    },
    "6663": {
      "op": "DUP6"
    },
    "6664": {
      "op": "CALLDATALOAD"
    },
    "6665": {
      "op": "PUSH2",
      "value": "0x1A11"
    },
    "6668": {
      "op": "DUP2"
    },
    "6669": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6672": {
      "jump": "i",
      "op": "JUMP"
    },
    "6673": {
      "op": "JUMPDEST"
    },
    "6674": {
      "op": "SWAP5"
    },
    "6675": {
      "op": "POP"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6678": {
      "op": "DUP7"
    },
    "6679": {
      "op": "ADD"
    },
    "6680": {
      "op": "CALLDATALOAD"
    },
    "6681": {
      "op": "SWAP4"
    },
    "6682": {
      "op": "POP"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6685": {
      "op": "DUP7"
    },
    "6686": {
      "op": "ADD"
    },
    "6687": {
      "op": "CALLDATALOAD"
    },
    "6688": {
      "op": "SWAP3"
    },
    "6689": {
      "op": "POP"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6692": {
      "op": "DUP7"
    },
    "6693": {
      "op": "ADD"
    },
    "6694": {
      "op": "CALLDATALOAD"
    },
    "6695": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6704": {
      "op": "DUP2"
    },
    "6705": {
      "op": "GT"
    },
    "6706": {
      "op": "ISZERO"
    },
    "6707": {
      "op": "PUSH2",
      "value": "0x1A3A"
    },
    "6710": {
      "op": "JUMPI"
    },
    "6711": {
      "op": "DUP2"
    },
    "6712": {
      "op": "DUP3"
    },
    "6713": {
      "op": "REVERT"
    },
    "6714": {
      "op": "JUMPDEST"
    },
    "6715": {
      "op": "PUSH2",
      "value": "0x1A46"
    },
    "6718": {
      "op": "DUP9"
    },
    "6719": {
      "op": "DUP3"
    },
    "6720": {
      "op": "DUP10"
    },
    "6721": {
      "op": "ADD"
    },
    "6722": {
      "op": "PUSH2",
      "value": "0x1854"
    },
    "6725": {
      "jump": "i",
      "op": "JUMP"
    },
    "6726": {
      "op": "JUMPDEST"
    },
    "6727": {
      "op": "SWAP7"
    },
    "6728": {
      "op": "SWAP10"
    },
    "6729": {
      "op": "SWAP6"
    },
    "6730": {
      "op": "SWAP9"
    },
    "6731": {
      "op": "POP"
    },
    "6732": {
      "op": "SWAP4"
    },
    "6733": {
      "op": "SWAP7"
    },
    "6734": {
      "op": "POP"
    },
    "6735": {
      "op": "SWAP3"
    },
    "6736": {
      "op": "SWAP5"
    },
    "6737": {
      "op": "SWAP4"
    },
    "6738": {
      "op": "SWAP3"
    },
    "6739": {
      "op": "POP"
    },
    "6740": {
      "op": "POP"
    },
    "6741": {
      "op": "POP"
    },
    "6742": {
      "jump": "o",
      "op": "JUMP"
    },
    "6743": {
      "op": "JUMPDEST"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6746": {
      "op": "DUP1"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6749": {
      "op": "DUP1"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6752": {
      "op": "DUP1"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6757": {
      "op": "DUP9"
    },
    "6758": {
      "op": "DUP11"
    },
    "6759": {
      "op": "SUB"
    },
    "6760": {
      "op": "SLT"
    },
    "6761": {
      "op": "ISZERO"
    },
    "6762": {
      "op": "PUSH2",
      "value": "0x1A71"
    },
    "6765": {
      "op": "JUMPI"
    },
    "6766": {
      "op": "DUP2"
    },
    "6767": {
      "op": "DUP3"
    },
    "6768": {
      "op": "REVERT"
    },
    "6769": {
      "op": "JUMPDEST"
    },
    "6770": {
      "op": "DUP8"
    },
    "6771": {
      "op": "CALLDATALOAD"
    },
    "6772": {
      "op": "PUSH2",
      "value": "0x1A7C"
    },
    "6775": {
      "op": "DUP2"
    },
    "6776": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "6779": {
      "jump": "i",
      "op": "JUMP"
    },
    "6780": {
      "op": "JUMPDEST"
    },
    "6781": {
      "op": "SWAP7"
    },
    "6782": {
      "op": "POP"
    },
    "6783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6785": {
      "op": "DUP9"
    },
    "6786": {
      "op": "ADD"
    },
    "6787": {
      "op": "CALLDATALOAD"
    },
    "6788": {
      "op": "SWAP6"
    },
    "6789": {
      "op": "POP"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6792": {
      "op": "DUP9"
    },
    "6793": {
      "op": "ADD"
    },
    "6794": {
      "op": "CALLDATALOAD"
    },
    "6795": {
      "op": "SWAP5"
    },
    "6796": {
      "op": "POP"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6799": {
      "op": "DUP9"
    },
    "6800": {
      "op": "ADD"
    },
    "6801": {
      "op": "CALLDATALOAD"
    },
    "6802": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6811": {
      "op": "DUP1"
    },
    "6812": {
      "op": "DUP3"
    },
    "6813": {
      "op": "GT"
    },
    "6814": {
      "op": "ISZERO"
    },
    "6815": {
      "op": "PUSH2",
      "value": "0x1AA6"
    },
    "6818": {
      "op": "JUMPI"
    },
    "6819": {
      "op": "DUP4"
    },
    "6820": {
      "op": "DUP5"
    },
    "6821": {
      "op": "REVERT"
    },
    "6822": {
      "op": "JUMPDEST"
    },
    "6823": {
      "op": "PUSH2",
      "value": "0x1AB2"
    },
    "6826": {
      "op": "DUP12"
    },
    "6827": {
      "op": "DUP4"
    },
    "6828": {
      "op": "DUP13"
    },
    "6829": {
      "op": "ADD"
    },
    "6830": {
      "op": "PUSH2",
      "value": "0x1854"
    },
    "6833": {
      "jump": "i",
      "op": "JUMP"
    },
    "6834": {
      "op": "JUMPDEST"
    },
    "6835": {
      "op": "SWAP1"
    },
    "6836": {
      "op": "SWAP7"
    },
    "6837": {
      "op": "POP"
    },
    "6838": {
      "op": "SWAP5"
    },
    "6839": {
      "op": "POP"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6842": {
      "op": "DUP11"
    },
    "6843": {
      "op": "ADD"
    },
    "6844": {
      "op": "CALLDATALOAD"
    },
    "6845": {
      "op": "SWAP2"
    },
    "6846": {
      "op": "POP"
    },
    "6847": {
      "op": "DUP1"
    },
    "6848": {
      "op": "DUP3"
    },
    "6849": {
      "op": "GT"
    },
    "6850": {
      "op": "ISZERO"
    },
    "6851": {
      "op": "PUSH2",
      "value": "0x1ACA"
    },
    "6854": {
      "op": "JUMPI"
    },
    "6855": {
      "op": "DUP4"
    },
    "6856": {
      "op": "DUP5"
    },
    "6857": {
      "op": "REVERT"
    },
    "6858": {
      "op": "JUMPDEST"
    },
    "6859": {
      "op": "POP"
    },
    "6860": {
      "op": "PUSH2",
      "value": "0x1AD7"
    },
    "6863": {
      "op": "DUP11"
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "op": "DUP12"
    },
    "6866": {
      "op": "ADD"
    },
    "6867": {
      "op": "PUSH2",
      "value": "0x189D"
    },
    "6870": {
      "jump": "i",
      "op": "JUMP"
    },
    "6871": {
      "op": "JUMPDEST"
    },
    "6872": {
      "op": "SWAP9"
    },
    "6873": {
      "op": "SWAP12"
    },
    "6874": {
      "op": "SWAP8"
    },
    "6875": {
      "op": "SWAP11"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "SWAP6"
    },
    "6878": {
      "op": "SWAP9"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "SWAP4"
    },
    "6881": {
      "op": "SWAP7"
    },
    "6882": {
      "op": "SWAP3"
    },
    "6883": {
      "op": "SWAP6"
    },
    "6884": {
      "op": "SWAP3"
    },
    "6885": {
      "op": "SWAP4"
    },
    "6886": {
      "op": "POP"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "jump": "o",
      "op": "JUMP"
    },
    "6890": {
      "op": "JUMPDEST"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6895": {
      "op": "DUP3"
    },
    "6896": {
      "op": "DUP5"
    },
    "6897": {
      "op": "SUB"
    },
    "6898": {
      "op": "SLT"
    },
    "6899": {
      "op": "ISZERO"
    },
    "6900": {
      "op": "PUSH2",
      "value": "0x1AFB"
    },
    "6903": {
      "op": "JUMPI"
    },
    "6904": {
      "op": "DUP1"
    },
    "6905": {
      "op": "DUP2"
    },
    "6906": {
      "op": "REVERT"
    },
    "6907": {
      "op": "JUMPDEST"
    },
    "6908": {
      "op": "POP"
    },
    "6909": {
      "op": "MLOAD"
    },
    "6910": {
      "op": "SWAP2"
    },
    "6911": {
      "op": "SWAP1"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "jump": "o",
      "op": "JUMP"
    },
    "6914": {
      "op": "JUMPDEST"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6917": {
      "op": "DUP1"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6920": {
      "op": "DUP4"
    },
    "6921": {
      "op": "DUP6"
    },
    "6922": {
      "op": "SUB"
    },
    "6923": {
      "op": "SLT"
    },
    "6924": {
      "op": "ISZERO"
    },
    "6925": {
      "op": "PUSH2",
      "value": "0x1B14"
    },
    "6928": {
      "op": "JUMPI"
    },
    "6929": {
      "op": "DUP2"
    },
    "6930": {
      "op": "DUP3"
    },
    "6931": {
      "op": "REVERT"
    },
    "6932": {
      "op": "JUMPDEST"
    },
    "6933": {
      "op": "POP"
    },
    "6934": {
      "op": "POP"
    },
    "6935": {
      "op": "DUP1"
    },
    "6936": {
      "op": "MLOAD"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6939": {
      "op": "SWAP1"
    },
    "6940": {
      "op": "SWAP2"
    },
    "6941": {
      "op": "ADD"
    },
    "6942": {
      "op": "MLOAD"
    },
    "6943": {
      "op": "SWAP1"
    },
    "6944": {
      "op": "SWAP3"
    },
    "6945": {
      "op": "SWAP1"
    },
    "6946": {
      "op": "SWAP2"
    },
    "6947": {
      "op": "POP"
    },
    "6948": {
      "jump": "o",
      "op": "JUMP"
    },
    "6949": {
      "op": "JUMPDEST"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6956": {
      "op": "SHL"
    },
    "6957": {
      "op": "SUB"
    },
    "6958": {
      "op": "AND"
    },
    "6959": {
      "op": "SWAP1"
    },
    "6960": {
      "op": "MSTORE"
    },
    "6961": {
      "jump": "o",
      "op": "JUMP"
    },
    "6962": {
      "op": "JUMPDEST"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6965": {
      "op": "DUP3"
    },
    "6966": {
      "op": "DUP5"
    },
    "6967": {
      "op": "MSTORE"
    },
    "6968": {
      "op": "DUP3"
    },
    "6969": {
      "op": "DUP3"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6972": {
      "op": "DUP7"
    },
    "6973": {
      "op": "ADD"
    },
    "6974": {
      "op": "CALLDATACOPY"
    },
    "6975": {
      "op": "DUP1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6978": {
      "op": "DUP5"
    },
    "6979": {
      "op": "DUP7"
    },
    "6980": {
      "op": "ADD"
    },
    "6981": {
      "op": "ADD"
    },
    "6982": {
      "op": "MSTORE"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6987": {
      "op": "NOT"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6990": {
      "op": "DUP6"
    },
    "6991": {
      "op": "ADD"
    },
    "6992": {
      "op": "AND"
    },
    "6993": {
      "op": "DUP6"
    },
    "6994": {
      "op": "ADD"
    },
    "6995": {
      "op": "ADD"
    },
    "6996": {
      "op": "SWAP1"
    },
    "6997": {
      "op": "POP"
    },
    "6998": {
      "op": "SWAP4"
    },
    "6999": {
      "op": "SWAP3"
    },
    "7000": {
      "op": "POP"
    },
    "7001": {
      "op": "POP"
    },
    "7002": {
      "op": "POP"
    },
    "7003": {
      "jump": "o",
      "op": "JUMP"
    },
    "7004": {
      "op": "JUMPDEST"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "op": "SUB"
    },
    "7013": {
      "op": "NOT"
    },
    "7014": {
      "op": "DUP5"
    },
    "7015": {
      "op": "AND"
    },
    "7016": {
      "op": "DUP2"
    },
    "7017": {
      "op": "MSTORE"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7020": {
      "op": "DUP3"
    },
    "7021": {
      "op": "DUP5"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7024": {
      "op": "DUP5"
    },
    "7025": {
      "op": "ADD"
    },
    "7026": {
      "op": "CALLDATACOPY"
    },
    "7027": {
      "op": "SWAP2"
    },
    "7028": {
      "op": "ADD"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7031": {
      "op": "ADD"
    },
    "7032": {
      "op": "SWAP1"
    },
    "7033": {
      "op": "DUP2"
    },
    "7034": {
      "op": "MSTORE"
    },
    "7035": {
      "op": "SWAP3"
    },
    "7036": {
      "op": "SWAP2"
    },
    "7037": {
      "op": "POP"
    },
    "7038": {
      "op": "POP"
    },
    "7039": {
      "jump": "o",
      "op": "JUMP"
    },
    "7040": {
      "op": "JUMPDEST"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7043": {
      "op": "DUP3"
    },
    "7044": {
      "op": "MLOAD"
    },
    "7045": {
      "op": "PUSH2",
      "value": "0x1B92"
    },
    "7048": {
      "op": "DUP2"
    },
    "7049": {
      "op": "DUP5"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7052": {
      "op": "DUP8"
    },
    "7053": {
      "op": "ADD"
    },
    "7054": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7057": {
      "jump": "i",
      "op": "JUMP"
    },
    "7058": {
      "op": "JUMPDEST"
    },
    "7059": {
      "op": "SWAP2"
    },
    "7060": {
      "op": "SWAP1"
    },
    "7061": {
      "op": "SWAP2"
    },
    "7062": {
      "op": "ADD"
    },
    "7063": {
      "op": "SWAP3"
    },
    "7064": {
      "op": "SWAP2"
    },
    "7065": {
      "op": "POP"
    },
    "7066": {
      "op": "POP"
    },
    "7067": {
      "jump": "o",
      "op": "JUMP"
    },
    "7068": {
      "op": "JUMPDEST"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7071": {
      "op": "DUP4"
    },
    "7072": {
      "op": "MLOAD"
    },
    "7073": {
      "op": "PUSH2",
      "value": "0x1BAE"
    },
    "7076": {
      "op": "DUP2"
    },
    "7077": {
      "op": "DUP5"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7080": {
      "op": "DUP9"
    },
    "7081": {
      "op": "ADD"
    },
    "7082": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7085": {
      "jump": "i",
      "op": "JUMP"
    },
    "7086": {
      "op": "JUMPDEST"
    },
    "7087": {
      "op": "PUSH6",
      "value": "0xA0C2DCD2C65"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0xD3"
    },
    "7096": {
      "op": "SHL"
    },
    "7097": {
      "op": "SWAP1"
    },
    "7098": {
      "op": "DUP4"
    },
    "7099": {
      "op": "ADD"
    },
    "7100": {
      "op": "SWAP1"
    },
    "7101": {
      "op": "DUP2"
    },
    "7102": {
      "op": "MSTORE"
    },
    "7103": {
      "op": "DUP4"
    },
    "7104": {
      "op": "MLOAD"
    },
    "7105": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "7108": {
      "op": "DUP2"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "7111": {
      "op": "DUP5"
    },
    "7112": {
      "op": "ADD"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7115": {
      "op": "DUP9"
    },
    "7116": {
      "op": "ADD"
    },
    "7117": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7120": {
      "jump": "i",
      "op": "JUMP"
    },
    "7121": {
      "op": "JUMPDEST"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7126": {
      "op": "SHL"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "7129": {
      "op": "SWAP3"
    },
    "7130": {
      "op": "SWAP1"
    },
    "7131": {
      "op": "SWAP2"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "SWAP2"
    },
    "7134": {
      "op": "DUP3"
    },
    "7135": {
      "op": "ADD"
    },
    "7136": {
      "op": "MSTORE"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "7139": {
      "op": "ADD"
    },
    "7140": {
      "op": "SWAP5"
    },
    "7141": {
      "op": "SWAP4"
    },
    "7142": {
      "op": "POP"
    },
    "7143": {
      "op": "POP"
    },
    "7144": {
      "op": "POP"
    },
    "7145": {
      "op": "POP"
    },
    "7146": {
      "jump": "o",
      "op": "JUMP"
    },
    "7147": {
      "op": "JUMPDEST"
    },
    "7148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7150": {
      "op": "DUP4"
    },
    "7151": {
      "op": "MLOAD"
    },
    "7152": {
      "op": "PUSH2",
      "value": "0x1BFD"
    },
    "7155": {
      "op": "DUP2"
    },
    "7156": {
      "op": "DUP5"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7159": {
      "op": "DUP9"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7164": {
      "jump": "i",
      "op": "JUMP"
    },
    "7165": {
      "op": "JUMPDEST"
    },
    "7166": {
      "op": "PUSH8",
      "value": "0xAADCD6DCDEEEDC5"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "7177": {
      "op": "SHL"
    },
    "7178": {
      "op": "SWAP1"
    },
    "7179": {
      "op": "DUP4"
    },
    "7180": {
      "op": "ADD"
    },
    "7181": {
      "op": "SWAP1"
    },
    "7182": {
      "op": "DUP2"
    },
    "7183": {
      "op": "MSTORE"
    },
    "7184": {
      "op": "DUP4"
    },
    "7185": {
      "op": "MLOAD"
    },
    "7186": {
      "op": "PUSH2",
      "value": "0x1C22"
    },
    "7189": {
      "op": "DUP2"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "7192": {
      "op": "DUP5"
    },
    "7193": {
      "op": "ADD"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7196": {
      "op": "DUP9"
    },
    "7197": {
      "op": "ADD"
    },
    "7198": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7201": {
      "jump": "i",
      "op": "JUMP"
    },
    "7202": {
      "op": "JUMPDEST"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7207": {
      "op": "SHL"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "7210": {
      "op": "SWAP3"
    },
    "7211": {
      "op": "SWAP1"
    },
    "7212": {
      "op": "SWAP2"
    },
    "7213": {
      "op": "ADD"
    },
    "7214": {
      "op": "SWAP2"
    },
    "7215": {
      "op": "DUP3"
    },
    "7216": {
      "op": "ADD"
    },
    "7217": {
      "op": "MSTORE"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "7220": {
      "op": "ADD"
    },
    "7221": {
      "op": "SWAP5"
    },
    "7222": {
      "op": "SWAP4"
    },
    "7223": {
      "op": "POP"
    },
    "7224": {
      "op": "POP"
    },
    "7225": {
      "op": "POP"
    },
    "7226": {
      "op": "POP"
    },
    "7227": {
      "jump": "o",
      "op": "JUMP"
    },
    "7228": {
      "op": "JUMPDEST"
    },
    "7229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7231": {
      "op": "DUP4"
    },
    "7232": {
      "op": "MLOAD"
    },
    "7233": {
      "op": "PUSH2",
      "value": "0x1C4E"
    },
    "7236": {
      "op": "DUP2"
    },
    "7237": {
      "op": "DUP5"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7240": {
      "op": "DUP9"
    },
    "7241": {
      "op": "ADD"
    },
    "7242": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7245": {
      "jump": "i",
      "op": "JUMP"
    },
    "7246": {
      "op": "JUMPDEST"
    },
    "7247": {
      "op": "PUSH6",
      "value": "0x8AE4E4DEE45"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0xD3"
    },
    "7256": {
      "op": "SHL"
    },
    "7257": {
      "op": "SWAP1"
    },
    "7258": {
      "op": "DUP4"
    },
    "7259": {
      "op": "ADD"
    },
    "7260": {
      "op": "SWAP1"
    },
    "7261": {
      "op": "DUP2"
    },
    "7262": {
      "op": "MSTORE"
    },
    "7263": {
      "op": "DUP4"
    },
    "7264": {
      "op": "MLOAD"
    },
    "7265": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "7268": {
      "op": "DUP2"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "7271": {
      "op": "DUP5"
    },
    "7272": {
      "op": "ADD"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7275": {
      "op": "DUP9"
    },
    "7276": {
      "op": "ADD"
    },
    "7277": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7280": {
      "jump": "i",
      "op": "JUMP"
    },
    "7281": {
      "op": "JUMPDEST"
    },
    "7282": {
      "op": "SWAP1"
    },
    "7283": {
      "op": "DUP2"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7287": {
      "op": "ADD"
    },
    "7288": {
      "op": "SWAP1"
    },
    "7289": {
      "jump": "o",
      "op": "JUMP"
    },
    "7290": {
      "op": "JUMPDEST"
    },
    "7291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7297": {
      "op": "SHL"
    },
    "7298": {
      "op": "SUB"
    },
    "7299": {
      "op": "SWAP2"
    },
    "7300": {
      "op": "SWAP1"
    },
    "7301": {
      "op": "SWAP2"
    },
    "7302": {
      "op": "AND"
    },
    "7303": {
      "op": "DUP2"
    },
    "7304": {
      "op": "MSTORE"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7307": {
      "op": "ADD"
    },
    "7308": {
      "op": "SWAP1"
    },
    "7309": {
      "jump": "o",
      "op": "JUMP"
    },
    "7310": {
      "op": "JUMPDEST"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7317": {
      "op": "SHL"
    },
    "7318": {
      "op": "SUB"
    },
    "7319": {
      "op": "SWAP3"
    },
    "7320": {
      "op": "DUP4"
    },
    "7321": {
      "op": "AND"
    },
    "7322": {
      "op": "DUP2"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "op": "SWAP2"
    },
    "7325": {
      "op": "AND"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7328": {
      "op": "DUP3"
    },
    "7329": {
      "op": "ADD"
    },
    "7330": {
      "op": "MSTORE"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7333": {
      "op": "ADD"
    },
    "7334": {
      "op": "SWAP1"
    },
    "7335": {
      "jump": "o",
      "op": "JUMP"
    },
    "7336": {
      "op": "JUMPDEST"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7343": {
      "op": "SHL"
    },
    "7344": {
      "op": "SUB"
    },
    "7345": {
      "op": "SWAP7"
    },
    "7346": {
      "op": "DUP8"
    },
    "7347": {
      "op": "AND"
    },
    "7348": {
      "op": "DUP2"
    },
    "7349": {
      "op": "MSTORE"
    },
    "7350": {
      "op": "SWAP5"
    },
    "7351": {
      "op": "DUP7"
    },
    "7352": {
      "op": "AND"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7355": {
      "op": "DUP7"
    },
    "7356": {
      "op": "ADD"
    },
    "7357": {
      "op": "MSTORE"
    },
    "7358": {
      "op": "SWAP3"
    },
    "7359": {
      "op": "DUP6"
    },
    "7360": {
      "op": "AND"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7363": {
      "op": "DUP6"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "SWAP4"
    },
    "7367": {
      "op": "AND"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7370": {
      "op": "DUP4"
    },
    "7371": {
      "op": "ADD"
    },
    "7372": {
      "op": "MSTORE"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7375": {
      "op": "DUP3"
    },
    "7376": {
      "op": "ADD"
    },
    "7377": {
      "op": "SWAP3"
    },
    "7378": {
      "op": "SWAP1"
    },
    "7379": {
      "op": "SWAP3"
    },
    "7380": {
      "op": "MSTORE"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7383": {
      "op": "DUP2"
    },
    "7384": {
      "op": "ADD"
    },
    "7385": {
      "op": "SWAP2"
    },
    "7386": {
      "op": "SWAP1"
    },
    "7387": {
      "op": "SWAP2"
    },
    "7388": {
      "op": "MSTORE"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7391": {
      "op": "ADD"
    },
    "7392": {
      "op": "SWAP1"
    },
    "7393": {
      "jump": "o",
      "op": "JUMP"
    },
    "7394": {
      "op": "JUMPDEST"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7401": {
      "op": "SHL"
    },
    "7402": {
      "op": "SUB"
    },
    "7403": {
      "op": "SWAP3"
    },
    "7404": {
      "op": "SWAP1"
    },
    "7405": {
      "op": "SWAP3"
    },
    "7406": {
      "op": "AND"
    },
    "7407": {
      "op": "DUP3"
    },
    "7408": {
      "op": "MSTORE"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7411": {
      "op": "DUP3"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "op": "MSTORE"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7416": {
      "op": "ADD"
    },
    "7417": {
      "op": "SWAP1"
    },
    "7418": {
      "jump": "o",
      "op": "JUMP"
    },
    "7419": {
      "op": "JUMPDEST"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "op": "SUB"
    },
    "7428": {
      "op": "SWAP4"
    },
    "7429": {
      "op": "DUP5"
    },
    "7430": {
      "op": "AND"
    },
    "7431": {
      "op": "DUP2"
    },
    "7432": {
      "op": "MSTORE"
    },
    "7433": {
      "op": "SWAP2"
    },
    "7434": {
      "op": "SWAP1"
    },
    "7435": {
      "op": "SWAP3"
    },
    "7436": {
      "op": "AND"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7439": {
      "op": "DUP3"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "op": "MSTORE"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7444": {
      "op": "DUP2"
    },
    "7445": {
      "op": "ADD"
    },
    "7446": {
      "op": "SWAP2"
    },
    "7447": {
      "op": "SWAP1"
    },
    "7448": {
      "op": "SWAP2"
    },
    "7449": {
      "op": "MSTORE"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7452": {
      "op": "ADD"
    },
    "7453": {
      "op": "SWAP1"
    },
    "7454": {
      "jump": "o",
      "op": "JUMP"
    },
    "7455": {
      "op": "JUMPDEST"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7462": {
      "op": "SHL"
    },
    "7463": {
      "op": "SUB"
    },
    "7464": {
      "op": "DUP6"
    },
    "7465": {
      "op": "AND"
    },
    "7466": {
      "op": "DUP2"
    },
    "7467": {
      "op": "MSTORE"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7472": {
      "op": "DUP3"
    },
    "7473": {
      "op": "ADD"
    },
    "7474": {
      "op": "DUP2"
    },
    "7475": {
      "op": "SWAP1"
    },
    "7476": {
      "op": "MSTORE"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7479": {
      "op": "SWAP1"
    },
    "7480": {
      "op": "PUSH2",
      "value": "0x1D4B"
    },
    "7483": {
      "op": "SWAP1"
    },
    "7484": {
      "op": "DUP4"
    },
    "7485": {
      "op": "ADD"
    },
    "7486": {
      "op": "PUSH2",
      "value": "0x1D46"
    },
    "7489": {
      "op": "DUP8"
    },
    "7490": {
      "op": "PUSH2",
      "value": "0x1849"
    },
    "7493": {
      "jump": "i",
      "op": "JUMP"
    },
    "7494": {
      "op": "JUMPDEST"
    },
    "7495": {
      "op": "PUSH2",
      "value": "0x1B25"
    },
    "7498": {
      "jump": "i",
      "op": "JUMP"
    },
    "7499": {
      "op": "JUMPDEST"
    },
    "7500": {
      "op": "PUSH2",
      "value": "0x1D57"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7505": {
      "op": "DUP7"
    },
    "7506": {
      "op": "ADD"
    },
    "7507": {
      "op": "PUSH2",
      "value": "0x1849"
    },
    "7510": {
      "jump": "i",
      "op": "JUMP"
    },
    "7511": {
      "op": "JUMPDEST"
    },
    "7512": {
      "op": "PUSH2",
      "value": "0x1D64"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7517": {
      "op": "DUP5"
    },
    "7518": {
      "op": "ADD"
    },
    "7519": {
      "op": "DUP3"
    },
    "7520": {
      "op": "PUSH2",
      "value": "0x1B25"
    },
    "7523": {
      "jump": "i",
      "op": "JUMP"
    },
    "7524": {
      "op": "JUMPDEST"
    },
    "7525": {
      "op": "POP"
    },
    "7526": {
      "op": "PUSH2",
      "value": "0x1D71"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7531": {
      "op": "DUP7"
    },
    "7532": {
      "op": "ADD"
    },
    "7533": {
      "op": "PUSH2",
      "value": "0x1849"
    },
    "7536": {
      "jump": "i",
      "op": "JUMP"
    },
    "7537": {
      "op": "JUMPDEST"
    },
    "7538": {
      "op": "PUSH2",
      "value": "0x1D7E"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7543": {
      "op": "DUP5"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "DUP3"
    },
    "7546": {
      "op": "PUSH2",
      "value": "0x1B25"
    },
    "7549": {
      "jump": "i",
      "op": "JUMP"
    },
    "7550": {
      "op": "JUMPDEST"
    },
    "7551": {
      "op": "POP"
    },
    "7552": {
      "op": "PUSH2",
      "value": "0x1D8B"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7557": {
      "op": "DUP7"
    },
    "7558": {
      "op": "ADD"
    },
    "7559": {
      "op": "PUSH2",
      "value": "0x1849"
    },
    "7562": {
      "jump": "i",
      "op": "JUMP"
    },
    "7563": {
      "op": "JUMPDEST"
    },
    "7564": {
      "op": "PUSH2",
      "value": "0x1D98"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7569": {
      "op": "DUP5"
    },
    "7570": {
      "op": "ADD"
    },
    "7571": {
      "op": "DUP3"
    },
    "7572": {
      "op": "PUSH2",
      "value": "0x1B25"
    },
    "7575": {
      "jump": "i",
      "op": "JUMP"
    },
    "7576": {
      "op": "JUMPDEST"
    },
    "7577": {
      "op": "POP"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7580": {
      "op": "DUP6"
    },
    "7581": {
      "op": "ADD"
    },
    "7582": {
      "op": "CALLDATALOAD"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7585": {
      "op": "DUP4"
    },
    "7586": {
      "op": "ADD"
    },
    "7587": {
      "op": "MSTORE"
    },
    "7588": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7593": {
      "op": "DUP7"
    },
    "7594": {
      "op": "ADD"
    },
    "7595": {
      "op": "CALLDATALOAD"
    },
    "7596": {
      "op": "DUP2"
    },
    "7597": {
      "op": "DUP5"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7602": {
      "op": "DUP7"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "op": "CALLDATALOAD"
    },
    "7605": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7608": {
      "op": "DUP5"
    },
    "7609": {
      "op": "ADD"
    },
    "7610": {
      "op": "MSTORE"
    },
    "7611": {
      "op": "PUSH2",
      "value": "0x1DC7"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7616": {
      "op": "DUP8"
    },
    "7617": {
      "op": "ADD"
    },
    "7618": {
      "op": "DUP8"
    },
    "7619": {
      "op": "PUSH2",
      "value": "0x2277"
    },
    "7622": {
      "jump": "i",
      "op": "JUMP"
    },
    "7623": {
      "op": "JUMPDEST"
    },
    "7624": {
      "op": "DUP3"
    },
    "7625": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "7628": {
      "op": "DUP7"
    },
    "7629": {
      "op": "ADD"
    },
    "7630": {
      "op": "MSTORE"
    },
    "7631": {
      "op": "PUSH2",
      "value": "0x1DDD"
    },
    "7634": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "7637": {
      "op": "DUP7"
    },
    "7638": {
      "op": "ADD"
    },
    "7639": {
      "op": "DUP3"
    },
    "7640": {
      "op": "DUP5"
    },
    "7641": {
      "op": "PUSH2",
      "value": "0x1B32"
    },
    "7644": {
      "jump": "i",
      "op": "JUMP"
    },
    "7645": {
      "op": "JUMPDEST"
    },
    "7646": {
      "op": "SWAP3"
    },
    "7647": {
      "op": "POP"
    },
    "7648": {
      "op": "POP"
    },
    "7649": {
      "op": "POP"
    },
    "7650": {
      "op": "DUP3"
    },
    "7651": {
      "op": "DUP2"
    },
    "7652": {
      "op": "SUB"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7655": {
      "op": "DUP5"
    },
    "7656": {
      "op": "ADD"
    },
    "7657": {
      "op": "MSTORE"
    },
    "7658": {
      "op": "PUSH2",
      "value": "0x17FF"
    },
    "7661": {
      "op": "DUP2"
    },
    "7662": {
      "op": "DUP6"
    },
    "7663": {
      "op": "DUP8"
    },
    "7664": {
      "op": "PUSH2",
      "value": "0x1B32"
    },
    "7667": {
      "jump": "i",
      "op": "JUMP"
    },
    "7668": {
      "op": "JUMPDEST"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7673": {
      "op": "DUP3"
    },
    "7674": {
      "op": "MSTORE"
    },
    "7675": {
      "op": "DUP3"
    },
    "7676": {
      "op": "MLOAD"
    },
    "7677": {
      "op": "DUP1"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7680": {
      "op": "DUP5"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "op": "MSTORE"
    },
    "7683": {
      "op": "PUSH2",
      "value": "0x1E13"
    },
    "7686": {
      "op": "DUP2"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7689": {
      "op": "DUP6"
    },
    "7690": {
      "op": "ADD"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7693": {
      "op": "DUP8"
    },
    "7694": {
      "op": "ADD"
    },
    "7695": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "7698": {
      "jump": "i",
      "op": "JUMP"
    },
    "7699": {
      "op": "JUMPDEST"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7702": {
      "op": "ADD"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7705": {
      "op": "NOT"
    },
    "7706": {
      "op": "AND"
    },
    "7707": {
      "op": "SWAP2"
    },
    "7708": {
      "op": "SWAP1"
    },
    "7709": {
      "op": "SWAP2"
    },
    "7710": {
      "op": "ADD"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "SWAP3"
    },
    "7715": {
      "op": "SWAP2"
    },
    "7716": {
      "op": "POP"
    },
    "7717": {
      "op": "POP"
    },
    "7718": {
      "jump": "o",
      "op": "JUMP"
    },
    "7719": {
      "op": "JUMPDEST"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7722": {
      "op": "DUP1"
    },
    "7723": {
      "op": "DUP3"
    },
    "7724": {
      "op": "MSTORE"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7727": {
      "op": "SWAP1"
    },
    "7728": {
      "op": "DUP3"
    },
    "7729": {
      "op": "ADD"
    },
    "7730": {
      "op": "MSTORE"
    },
    "7731": {
      "op": "PUSH18",
      "value": "0x86D8C2D2DA40E8DED6CADC40D2E6408AA89"
    },
    "7750": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "7752": {
      "op": "SHL"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7755": {
      "op": "DUP3"
    },
    "7756": {
      "op": "ADD"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7760": {
      "op": "ADD"
    },
    "7761": {
      "op": "SWAP1"
    },
    "7762": {
      "jump": "o",
      "op": "JUMP"
    },
    "7763": {
      "op": "JUMPDEST"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7766": {
      "op": "DUP1"
    },
    "7767": {
      "op": "DUP3"
    },
    "7768": {
      "op": "MSTORE"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7771": {
      "op": "SWAP1"
    },
    "7772": {
      "op": "DUP3"
    },
    "7773": {
      "op": "ADD"
    },
    "7774": {
      "op": "MSTORE"
    },
    "7775": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7810": {
      "op": "DUP3"
    },
    "7811": {
      "op": "ADD"
    },
    "7812": {
      "op": "MSTORE"
    },
    "7813": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7822": {
      "op": "SHL"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7825": {
      "op": "DUP3"
    },
    "7826": {
      "op": "ADD"
    },
    "7827": {
      "op": "MSTORE"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7830": {
      "op": "ADD"
    },
    "7831": {
      "op": "SWAP1"
    },
    "7832": {
      "jump": "o",
      "op": "JUMP"
    },
    "7833": {
      "op": "JUMPDEST"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7836": {
      "op": "DUP1"
    },
    "7837": {
      "op": "DUP3"
    },
    "7838": {
      "op": "MSTORE"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7841": {
      "op": "SWAP1"
    },
    "7842": {
      "op": "DUP3"
    },
    "7843": {
      "op": "ADD"
    },
    "7844": {
      "op": "MSTORE"
    },
    "7845": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7880": {
      "op": "DUP3"
    },
    "7881": {
      "op": "ADD"
    },
    "7882": {
      "op": "MSTORE"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7885": {
      "op": "ADD"
    },
    "7886": {
      "op": "SWAP1"
    },
    "7887": {
      "jump": "o",
      "op": "JUMP"
    },
    "7888": {
      "op": "JUMPDEST"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7891": {
      "op": "DUP1"
    },
    "7892": {
      "op": "DUP3"
    },
    "7893": {
      "op": "MSTORE"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7896": {
      "op": "SWAP1"
    },
    "7897": {
      "op": "DUP3"
    },
    "7898": {
      "op": "ADD"
    },
    "7899": {
      "op": "MSTORE"
    },
    "7900": {
      "op": "PUSH20",
      "value": "0x1155120819195C1BDCDA5D081C995A9958DD1959"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "7923": {
      "op": "SHL"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7926": {
      "op": "DUP3"
    },
    "7927": {
      "op": "ADD"
    },
    "7928": {
      "op": "MSTORE"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7931": {
      "op": "ADD"
    },
    "7932": {
      "op": "SWAP1"
    },
    "7933": {
      "jump": "o",
      "op": "JUMP"
    },
    "7934": {
      "op": "JUMPDEST"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7937": {
      "op": "DUP1"
    },
    "7938": {
      "op": "DUP3"
    },
    "7939": {
      "op": "MSTORE"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7942": {
      "op": "SWAP1"
    },
    "7943": {
      "op": "DUP3"
    },
    "7944": {
      "op": "ADD"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "PUSH17",
      "value": "0x496E76616C6964206D73672E76616C7565"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "7966": {
      "op": "SHL"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7969": {
      "op": "DUP3"
    },
    "7970": {
      "op": "ADD"
    },
    "7971": {
      "op": "MSTORE"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7974": {
      "op": "ADD"
    },
    "7975": {
      "op": "SWAP1"
    },
    "7976": {
      "jump": "o",
      "op": "JUMP"
    },
    "7977": {
      "op": "JUMPDEST"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7980": {
      "op": "DUP1"
    },
    "7981": {
      "op": "DUP3"
    },
    "7982": {
      "op": "MSTORE"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "7985": {
      "op": "SWAP1"
    },
    "7986": {
      "op": "DUP3"
    },
    "7987": {
      "op": "ADD"
    },
    "7988": {
      "op": "MSTORE"
    },
    "7989": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8024": {
      "op": "DUP3"
    },
    "8025": {
      "op": "ADD"
    },
    "8026": {
      "op": "MSTORE"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8029": {
      "op": "ADD"
    },
    "8030": {
      "op": "SWAP1"
    },
    "8031": {
      "jump": "o",
      "op": "JUMP"
    },
    "8032": {
      "op": "JUMPDEST"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8035": {
      "op": "DUP1"
    },
    "8036": {
      "op": "DUP3"
    },
    "8037": {
      "op": "MSTORE"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8040": {
      "op": "SWAP1"
    },
    "8041": {
      "op": "DUP3"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "op": "MSTORE"
    },
    "8044": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8079": {
      "op": "DUP3"
    },
    "8080": {
      "op": "ADD"
    },
    "8081": {
      "op": "MSTORE"
    },
    "8082": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "8091": {
      "op": "SHL"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8094": {
      "op": "DUP3"
    },
    "8095": {
      "op": "ADD"
    },
    "8096": {
      "op": "MSTORE"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8099": {
      "op": "ADD"
    },
    "8100": {
      "op": "SWAP1"
    },
    "8101": {
      "jump": "o",
      "op": "JUMP"
    },
    "8102": {
      "op": "JUMPDEST"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8105": {
      "op": "DUP1"
    },
    "8106": {
      "op": "DUP3"
    },
    "8107": {
      "op": "MSTORE"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8110": {
      "op": "SWAP1"
    },
    "8111": {
      "op": "DUP3"
    },
    "8112": {
      "op": "ADD"
    },
    "8113": {
      "op": "MSTORE"
    },
    "8114": {
      "op": "PUSH32",
      "value": "0x496E636F727265637420434849206275726E20666C6167730000000000000000"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8149": {
      "op": "DUP3"
    },
    "8150": {
      "op": "ADD"
    },
    "8151": {
      "op": "MSTORE"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8154": {
      "op": "ADD"
    },
    "8155": {
      "op": "SWAP1"
    },
    "8156": {
      "jump": "o",
      "op": "JUMP"
    },
    "8157": {
      "op": "JUMPDEST"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8160": {
      "op": "DUP1"
    },
    "8161": {
      "op": "DUP3"
    },
    "8162": {
      "op": "MSTORE"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "8165": {
      "op": "SWAP1"
    },
    "8166": {
      "op": "DUP3"
    },
    "8167": {
      "op": "ADD"
    },
    "8168": {
      "op": "MSTORE"
    },
    "8169": {
      "op": "PUSH32",
      "value": "0x52657475726E20616D6F756E74206973206E6F7420656E6F7567680000000000"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8204": {
      "op": "DUP3"
    },
    "8205": {
      "op": "ADD"
    },
    "8206": {
      "op": "MSTORE"
    },
    "8207": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8209": {
      "op": "ADD"
    },
    "8210": {
      "op": "SWAP1"
    },
    "8211": {
      "jump": "o",
      "op": "JUMP"
    },
    "8212": {
      "op": "JUMPDEST"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8215": {
      "op": "DUP1"
    },
    "8216": {
      "op": "DUP3"
    },
    "8217": {
      "op": "MSTORE"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8220": {
      "op": "SWAP1"
    },
    "8221": {
      "op": "DUP3"
    },
    "8222": {
      "op": "ADD"
    },
    "8223": {
      "op": "MSTORE"
    },
    "8224": {
      "op": "PUSH32",
      "value": "0x4D696E2072657475726E2073686F756C64206E6F742062652030000000000000"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8259": {
      "op": "DUP3"
    },
    "8260": {
      "op": "ADD"
    },
    "8261": {
      "op": "MSTORE"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8264": {
      "op": "ADD"
    },
    "8265": {
      "op": "SWAP1"
    },
    "8266": {
      "jump": "o",
      "op": "JUMP"
    },
    "8267": {
      "op": "JUMPDEST"
    },
    "8268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8270": {
      "op": "DUP1"
    },
    "8271": {
      "op": "DUP3"
    },
    "8272": {
      "op": "MSTORE"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8275": {
      "op": "SWAP1"
    },
    "8276": {
      "op": "DUP3"
    },
    "8277": {
      "op": "ADD"
    },
    "8278": {
      "op": "MSTORE"
    },
    "8279": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8314": {
      "op": "DUP3"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0x77"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8321": {
      "op": "SHL"
    },
    "8322": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8324": {
      "op": "DUP3"
    },
    "8325": {
      "op": "ADD"
    },
    "8326": {
      "op": "MSTORE"
    },
    "8327": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8329": {
      "op": "ADD"
    },
    "8330": {
      "op": "SWAP1"
    },
    "8331": {
      "jump": "o",
      "op": "JUMP"
    },
    "8332": {
      "op": "JUMPDEST"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8335": {
      "op": "DUP1"
    },
    "8336": {
      "op": "DUP3"
    },
    "8337": {
      "op": "MSTORE"
    },
    "8338": {
      "op": "DUP2"
    },
    "8339": {
      "op": "DUP2"
    },
    "8340": {
      "op": "ADD"
    },
    "8341": {
      "op": "MSTORE"
    },
    "8342": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8377": {
      "op": "DUP3"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8382": {
      "op": "ADD"
    },
    "8383": {
      "op": "SWAP1"
    },
    "8384": {
      "jump": "o",
      "op": "JUMP"
    },
    "8385": {
      "op": "JUMPDEST"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8388": {
      "op": "DUP1"
    },
    "8389": {
      "op": "DUP3"
    },
    "8390": {
      "op": "MSTORE"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8393": {
      "op": "SWAP1"
    },
    "8394": {
      "op": "DUP3"
    },
    "8395": {
      "op": "ADD"
    },
    "8396": {
      "op": "MSTORE"
    },
    "8397": {
      "op": "PUSH32",
      "value": "0x4552433230206F7065726174696F6E20646964206E6F74207375636365656400"
    },
    "8430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8432": {
      "op": "DUP3"
    },
    "8433": {
      "op": "ADD"
    },
    "8434": {
      "op": "MSTORE"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8437": {
      "op": "ADD"
    },
    "8438": {
      "op": "SWAP1"
    },
    "8439": {
      "jump": "o",
      "op": "JUMP"
    },
    "8440": {
      "op": "JUMPDEST"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8443": {
      "op": "DUP1"
    },
    "8444": {
      "op": "DUP3"
    },
    "8445": {
      "op": "MSTORE"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8448": {
      "op": "SWAP1"
    },
    "8449": {
      "op": "DUP3"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "MSTORE"
    },
    "8452": {
      "op": "PUSH32",
      "value": "0x646174612073686F756C64206265206E6F74207A65726F000000000000000000"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8487": {
      "op": "DUP3"
    },
    "8488": {
      "op": "ADD"
    },
    "8489": {
      "op": "MSTORE"
    },
    "8490": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8492": {
      "op": "ADD"
    },
    "8493": {
      "op": "SWAP1"
    },
    "8494": {
      "jump": "o",
      "op": "JUMP"
    },
    "8495": {
      "op": "JUMPDEST"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8498": {
      "op": "DUP1"
    },
    "8499": {
      "op": "DUP3"
    },
    "8500": {
      "op": "MSTORE"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8503": {
      "op": "SWAP1"
    },
    "8504": {
      "op": "DUP3"
    },
    "8505": {
      "op": "ADD"
    },
    "8506": {
      "op": "MSTORE"
    },
    "8507": {
      "op": "PUSH21",
      "value": "0x24B73B30B634B2103932BB32B93A103932B0B9B7B7"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8531": {
      "op": "SHL"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8534": {
      "op": "DUP3"
    },
    "8535": {
      "op": "ADD"
    },
    "8536": {
      "op": "MSTORE"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8539": {
      "op": "ADD"
    },
    "8540": {
      "op": "SWAP1"
    },
    "8541": {
      "jump": "o",
      "op": "JUMP"
    },
    "8542": {
      "op": "JUMPDEST"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8545": {
      "op": "DUP1"
    },
    "8546": {
      "op": "DUP3"
    },
    "8547": {
      "op": "MSTORE"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8550": {
      "op": "SWAP1"
    },
    "8551": {
      "op": "DUP3"
    },
    "8552": {
      "op": "ADD"
    },
    "8553": {
      "op": "MSTORE"
    },
    "8554": {
      "op": "PUSH21",
      "value": "0x1B1BDDCB5B195D995B0818D85B1B0819985A5B1959"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "8578": {
      "op": "SHL"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8581": {
      "op": "DUP3"
    },
    "8582": {
      "op": "ADD"
    },
    "8583": {
      "op": "MSTORE"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8586": {
      "op": "ADD"
    },
    "8587": {
      "op": "SWAP1"
    },
    "8588": {
      "jump": "o",
      "op": "JUMP"
    },
    "8589": {
      "op": "JUMPDEST"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8592": {
      "op": "DUP1"
    },
    "8593": {
      "op": "DUP3"
    },
    "8594": {
      "op": "MSTORE"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8597": {
      "op": "SWAP1"
    },
    "8598": {
      "op": "DUP3"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "op": "MSTORE"
    },
    "8601": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "8634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8636": {
      "op": "DUP3"
    },
    "8637": {
      "op": "ADD"
    },
    "8638": {
      "op": "MSTORE"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8641": {
      "op": "ADD"
    },
    "8642": {
      "op": "SWAP1"
    },
    "8643": {
      "jump": "o",
      "op": "JUMP"
    },
    "8644": {
      "op": "JUMPDEST"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8647": {
      "op": "DUP1"
    },
    "8648": {
      "op": "DUP3"
    },
    "8649": {
      "op": "MSTORE"
    },
    "8650": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8652": {
      "op": "SWAP1"
    },
    "8653": {
      "op": "DUP3"
    },
    "8654": {
      "op": "ADD"
    },
    "8655": {
      "op": "MSTORE"
    },
    "8656": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8691": {
      "op": "DUP3"
    },
    "8692": {
      "op": "ADD"
    },
    "8693": {
      "op": "MSTORE"
    },
    "8694": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8707": {
      "op": "SHL"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8710": {
      "op": "DUP3"
    },
    "8711": {
      "op": "ADD"
    },
    "8712": {
      "op": "MSTORE"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8715": {
      "op": "ADD"
    },
    "8716": {
      "op": "SWAP1"
    },
    "8717": {
      "jump": "o",
      "op": "JUMP"
    },
    "8718": {
      "op": "JUMPDEST"
    },
    "8719": {
      "op": "SWAP2"
    },
    "8720": {
      "op": "DUP3"
    },
    "8721": {
      "op": "MSTORE"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8724": {
      "op": "DUP3"
    },
    "8725": {
      "op": "ADD"
    },
    "8726": {
      "op": "MSTORE"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8729": {
      "op": "ADD"
    },
    "8730": {
      "op": "SWAP1"
    },
    "8731": {
      "jump": "o",
      "op": "JUMP"
    },
    "8732": {
      "op": "JUMPDEST"
    },
    "8733": {
      "op": "SWAP3"
    },
    "8734": {
      "op": "DUP4"
    },
    "8735": {
      "op": "MSTORE"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8738": {
      "op": "DUP4"
    },
    "8739": {
      "op": "ADD"
    },
    "8740": {
      "op": "SWAP2"
    },
    "8741": {
      "op": "SWAP1"
    },
    "8742": {
      "op": "SWAP2"
    },
    "8743": {
      "op": "MSTORE"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8746": {
      "op": "DUP3"
    },
    "8747": {
      "op": "ADD"
    },
    "8748": {
      "op": "MSTORE"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8751": {
      "op": "ADD"
    },
    "8752": {
      "op": "SWAP1"
    },
    "8753": {
      "jump": "o",
      "op": "JUMP"
    },
    "8754": {
      "op": "JUMPDEST"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8757": {
      "op": "DUP1"
    },
    "8758": {
      "op": "DUP4"
    },
    "8759": {
      "op": "CALLDATALOAD"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8762": {
      "op": "NOT"
    },
    "8763": {
      "op": "DUP5"
    },
    "8764": {
      "op": "CALLDATASIZE"
    },
    "8765": {
      "op": "SUB"
    },
    "8766": {
      "op": "ADD"
    },
    "8767": {
      "op": "DUP2"
    },
    "8768": {
      "op": "SLT"
    },
    "8769": {
      "op": "PUSH2",
      "value": "0x2248"
    },
    "8772": {
      "op": "JUMPI"
    },
    "8773": {
      "op": "DUP3"
    },
    "8774": {
      "op": "DUP4"
    },
    "8775": {
      "op": "REVERT"
    },
    "8776": {
      "op": "JUMPDEST"
    },
    "8777": {
      "op": "DUP4"
    },
    "8778": {
      "op": "ADD"
    },
    "8779": {
      "op": "DUP1"
    },
    "8780": {
      "op": "CALLDATALOAD"
    },
    "8781": {
      "op": "SWAP2"
    },
    "8782": {
      "op": "POP"
    },
    "8783": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8792": {
      "op": "DUP3"
    },
    "8793": {
      "op": "GT"
    },
    "8794": {
      "op": "ISZERO"
    },
    "8795": {
      "op": "PUSH2",
      "value": "0x2262"
    },
    "8798": {
      "op": "JUMPI"
    },
    "8799": {
      "op": "DUP3"
    },
    "8800": {
      "op": "DUP4"
    },
    "8801": {
      "op": "REVERT"
    },
    "8802": {
      "op": "JUMPDEST"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8805": {
      "op": "ADD"
    },
    "8806": {
      "op": "SWAP2"
    },
    "8807": {
      "op": "POP"
    },
    "8808": {
      "op": "CALLDATASIZE"
    },
    "8809": {
      "op": "DUP2"
    },
    "8810": {
      "op": "SWAP1"
    },
    "8811": {
      "op": "SUB"
    },
    "8812": {
      "op": "DUP3"
    },
    "8813": {
      "op": "SGT"
    },
    "8814": {
      "op": "ISZERO"
    },
    "8815": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "8818": {
      "op": "JUMPI"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8821": {
      "op": "DUP1"
    },
    "8822": {
      "op": "REVERT"
    },
    "8823": {
      "op": "JUMPDEST"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8826": {
      "op": "DUP1"
    },
    "8827": {
      "op": "DUP4"
    },
    "8828": {
      "op": "CALLDATALOAD"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8831": {
      "op": "NOT"
    },
    "8832": {
      "op": "DUP5"
    },
    "8833": {
      "op": "CALLDATASIZE"
    },
    "8834": {
      "op": "SUB"
    },
    "8835": {
      "op": "ADD"
    },
    "8836": {
      "op": "DUP2"
    },
    "8837": {
      "op": "SLT"
    },
    "8838": {
      "op": "PUSH2",
      "value": "0x228D"
    },
    "8841": {
      "op": "JUMPI"
    },
    "8842": {
      "op": "DUP3"
    },
    "8843": {
      "op": "DUP4"
    },
    "8844": {
      "op": "REVERT"
    },
    "8845": {
      "op": "JUMPDEST"
    },
    "8846": {
      "op": "DUP4"
    },
    "8847": {
      "op": "ADD"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8850": {
      "op": "DUP2"
    },
    "8851": {
      "op": "ADD"
    },
    "8852": {
      "op": "SWAP3"
    },
    "8853": {
      "op": "POP"
    },
    "8854": {
      "op": "CALLDATALOAD"
    },
    "8855": {
      "op": "SWAP1"
    },
    "8856": {
      "op": "POP"
    },
    "8857": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8866": {
      "op": "DUP2"
    },
    "8867": {
      "op": "GT"
    },
    "8868": {
      "op": "ISZERO"
    },
    "8869": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8872": {
      "op": "JUMPI"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8875": {
      "op": "DUP1"
    },
    "8876": {
      "op": "REVERT"
    },
    "8877": {
      "op": "JUMPDEST"
    },
    "8878": {
      "op": "DUP1"
    },
    "8879": {
      "op": "CALLDATASIZE"
    },
    "8880": {
      "op": "SUB"
    },
    "8881": {
      "op": "DUP4"
    },
    "8882": {
      "op": "SGT"
    },
    "8883": {
      "op": "ISZERO"
    },
    "8884": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "8887": {
      "op": "JUMPI"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8890": {
      "op": "DUP1"
    },
    "8891": {
      "op": "REVERT"
    },
    "8892": {
      "op": "JUMPDEST"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8895": {
      "op": "JUMPDEST"
    },
    "8896": {
      "op": "DUP4"
    },
    "8897": {
      "op": "DUP2"
    },
    "8898": {
      "op": "LT"
    },
    "8899": {
      "op": "ISZERO"
    },
    "8900": {
      "op": "PUSH2",
      "value": "0x22D7"
    },
    "8903": {
      "op": "JUMPI"
    },
    "8904": {
      "op": "DUP2"
    },
    "8905": {
      "op": "DUP2"
    },
    "8906": {
      "op": "ADD"
    },
    "8907": {
      "op": "MLOAD"
    },
    "8908": {
      "op": "DUP4"
    },
    "8909": {
      "op": "DUP3"
    },
    "8910": {
      "op": "ADD"
    },
    "8911": {
      "op": "MSTORE"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8914": {
      "op": "ADD"
    },
    "8915": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8918": {
      "op": "JUMP"
    },
    "8919": {
      "op": "JUMPDEST"
    },
    "8920": {
      "op": "DUP4"
    },
    "8921": {
      "op": "DUP2"
    },
    "8922": {
      "op": "GT"
    },
    "8923": {
      "op": "ISZERO"
    },
    "8924": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "8927": {
      "op": "JUMPI"
    },
    "8928": {
      "op": "POP"
    },
    "8929": {
      "op": "POP"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8932": {
      "op": "SWAP2"
    },
    "8933": {
      "op": "ADD"
    },
    "8934": {
      "op": "MSTORE"
    },
    "8935": {
      "jump": "o",
      "op": "JUMP"
    },
    "8936": {
      "op": "JUMPDEST"
    },
    "8937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8943": {
      "op": "SHL"
    },
    "8944": {
      "op": "SUB"
    },
    "8945": {
      "op": "DUP2"
    },
    "8946": {
      "op": "AND"
    },
    "8947": {
      "op": "DUP2"
    },
    "8948": {
      "op": "EQ"
    },
    "8949": {
      "op": "PUSH2",
      "value": "0x22FD"
    },
    "8952": {
      "op": "JUMPI"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8955": {
      "op": "DUP1"
    },
    "8956": {
      "op": "REVERT"
    },
    "8957": {
      "op": "JUMPDEST"
    },
    "8958": {
      "op": "POP"
    },
    "8959": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0b101ad349e04cff7e2055aaa7af90fe259bbdac",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2021-11-01\n*/\n\n/**\n *Submitted for verification at Etherscan.io on 2021-03-11\n*/\n\n/*\n                                                           ,\u2584\u2593\u2593\u2588\u2588\u258c   ,\u2553\u2584\u2584\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2584\u2584\u2584,,                          \n                                                        ,\u2593\u2588\u2588\u2593\u2588\u2588\u2588\u2593\u2584\u2593\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2593\u2584,                     \n                                                  \u2584\u2588   \u2593\u2588\u2588\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2593\u2580\u256c\u256c\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2584,                 \n                                                 \u2593\u2588\u2588\u258c \u2593\u2588\u2588\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2593\u258c  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2559\u2559\u2580\u207f\n                                                \u2590\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2593\u2588\u2588\u2588\u2588\u2593\u2593\u2588\u2568 \u2584 \u255f\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2593\u2584\n                                  \u2514\u2580\u2593\u2593\u2584\u2553        \u255f\u2588\u2593\u2563\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2580 \u2553\u2588\u258c \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2593\u2584\n                                     \u2514\u2580\u2588\u2588\u2588\u2588\u2593\u2584\u2565  \u2590\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2559 \u00c6\u2580\u2500 \u2593\u2588\u2588\u2588\u2580\u255a\u2560\u256c\u2569\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2584\n                                        \u2514\u2580\u2588\u2588\u2593\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2580     \u2584\u2588\u2588\u2588\u2588\u2588\u2592\u2560\"      \u2514\u2559\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2584\n                                           \u2514\u2580\u2588\u2588\u2584,\u2514\u2559\u2580\u2580\u2588\u2588\u2588\u2588\u258c\u2514\u2559    ^\"\u2580\u2559\u2559\u2559\"\u2559\u2588\u2588      @\u2584    \u2559\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u00b5\n                                              \u2514\u2580\u2588\u2588\u2593\u2584, \u2588\u2588\u258c       \u2552       \u2559\u2588\u2593     ]\u2593\u2588\u2593\u2554    \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u258c\n                                                  \u2580\u2588\u2588\u2588\u2588\u2588       \u2593         \u255f\u2588\u258c    ]\u2560\u2588\u2588\u2593\u2591\u2592\u2553   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u258c\n                                                  \u2590\u2588\u2588\u2588\u2588      \u2553\u2588\u2580\u2588\u258c      ,\u2588\u2588\u258c    \u255a\u00c5\u2588\u2588\u2588\u2593\u2592\u2592\u2560\u2553  \u2559\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2563\u2588\u258c\n                                                  \u2514\u2588\u2588\u2588\u2588     \u2593\u2588\u2591\u2591\u2593\u2588      \u2580\u2580\u2580    \u03c6\u2592\u256b\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2560\u2553  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u2593\u2588\u00b5\n                                                   \u2558\u2588\u2588\u2588\u00b5 \u258c\u2584\u2588\u2593\u2584\u2593\u2580`     ,\u2580    ,\u2554\u2560\u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2560\u2592\u2592\u2592\u03c6  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2588\u2588\n                                                   \u2590\u2588\u2588\u2588\u2588\u00b5\u2559\u2593\u2580`     ,\u2580\u2559,\u2554\u2554\u03c6\u03c6\u03c6\u2560\u2591\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2591\u2593\u2559\u2592\u2592\u2592\u2560 \u2514\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2593\u2588\u2310\n                                                   \u256b\u2588\u2588 \u2593\u258c         \u258c\u03c6\u2592\u2592\u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2592\u2591\u2593\u255a\u2592\u2592\u2592\u2560 \u2593\u2588\u2588\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2563\u2588\u258c\n                                                   \u2588\u2588\u258c           \u258c\u2554\u2592\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2591\u258c\u2560\u2592\u2592\u2592\u2265\u2590\u2588\u2588\u2593\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\n                                                   \u2588\u2588\u258c      ,\u2553\u03c6\u2560\u2593\u00ab\u2592\u2592\u2593\u2588\u2588\u2588\u2588\u2580  \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2592\u2592\u2592\u255f\u2591\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2593\u2588\u258c\n                                                  \u2590\u2588\u2588      \u2560\u2592\u2584\u2593\u2593\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2514     \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2592\u2592\u2591\u258c\u255a\u2592\u2592\u2592\u2590\u2588\u2588\u2588\u2593\u256c\u256c\u2588\u2588\u2588\u2588 \u2559\u258c\n                                                  \u2588\u2588\u2588  )  \u2560\u2592\u2591\u2591\u2591\u2592\u2591\u256c\u2588\u2588\u2588\u2588\u2580        \u2514\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2592\u2592\u2591\u256c\u2229\u2592\u2592\u2593\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\n                                                 \u2593\u2588\u2588    \u2560\u2560\u2592\u2592\u2590\u2588\u2580\u2580\u258c`\u2591\u256b\u2588\u2588           \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2591\u2592\u2592\u00bd\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\n                                                \u2588\u2588\u2588 ,\u2588\u2584 \u2560\u2592\u2592\u2592\u256b\u258c,\u2584\u2580,\u2592\u256b\u2588\u2588           \u255f\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2591\u2563\u2320\u2592\u2593\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u258c\n                                               \u2558\u2588\u2588\u00b5 \u2588\u2588` \u2560\u2592\u2592\u2591\u2588\u2588\u256c\u03c6\u2560\u2584\u2593\u2588\u2588`            \u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u258c\u03c6\u2560\u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u2593\u2588\u2588\n                                                \u255f\u2588\u2588  .\u03c6\u2560\u2592\u2591\u2584\u2588\u2580\u2591\u2591\u2584\u2588\u2588\u2580\u2514              \u2588\u2588\u2588\u2588\u2588\u258c\u2592\u2563\u03c6\u2592\u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\n                                                 \u2580\u2588\u2588\u2584\u2584\u2584\u2553\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580                \u2590\u2588\u2588\u2588\u2588\u2588\u2591\u2593\u03c6\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u2563\u2588\u2588\n                                                   \u2559\u2580\u2580\u2580\u2588\u2588\u2580\u2514                      \u2588\u2588\u2588\u2588\u2593\u2584\u2580\u03c6\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2593\u2588\u2580\n                                                                                \u2593\u2588\u2588\u2588\u256c\u2569\u2554\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2514\n                                                                              \u2553\u2588\u2588\u2588\u2588\u2580\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2588\u2588\u2588\u2588\u2580\n                                                                            ,\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2500]\u2588\u2588\u2559\n                                                                         ,\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2514  \u2559\n                                                                    ,\u2553\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2559\n                                                             `\"\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580`\u2584\u2588\u2588\u2588\u2580\u2580\u2514\n                                                                              \u2514\u2514\n                                \n                    \n\n                    11\\   11\\                     11\\             11\\   11\\            11\\                                       11\\       \n                  1111 |  \\__|                    11 |            111\\  11 |           11 |                                      11 |      \n                  \\_11 |  11\\ 1111111\\   1111111\\ 1111111\\        1111\\ 11 | 111111\\ 111111\\   11\\  11\\  11\\  111111\\   111111\\  11 |  11\\ \n                    11 |  11 |11  __11\\ 11  _____|11  __11\\       11 11\\11 |11  __11\\\\_11  _|  11 | 11 | 11 |11  __11\\ 11  __11\\ 11 | 11  |\n                    11 |  11 |11 |  11 |11 /      11 |  11 |      11 \\1111 |11111111 | 11 |    11 | 11 | 11 |11 /  11 |11 |  \\__|111111  / \n                    11 |  11 |11 |  11 |11 |      11 |  11 |      11 |\\111 |11   ____| 11 |11\\ 11 | 11 | 11 |11 |  11 |11 |      11  _11<  \n                  111111\\ 11 |11 |  11 |\\1111111\\ 11 |  11 |      11 | \\11 |\\1111111\\  \\1111  |\\11111\\1111  |\\111111  |11 |      11 | \\11\\ \n                  \\______|\\__|\\__|  \\__| \\_______|\\__|  \\__|      \\__|  \\__| \\_______|  \\____/  \\_____\\____/  \\______/ \\__|      \\__|  \\__|\n                                                                                                                                           \n                                                                                                                                           \n                                                                                                                                           \n                               111111\\                                                               11\\     11\\                           \n                              11  __11\\                                                              11 |    \\__|                          \n                              11 /  11 | 111111\\   111111\\   111111\\   111111\\   111111\\   111111\\ 111111\\   11\\  111111\\  1111111\\        \n                              11111111 |11  __11\\ 11  __11\\ 11  __11\\ 11  __11\\ 11  __11\\  \\____11\\\\_11  _|  11 |11  __11\\ 11  __11\\       \n                              11  __11 |11 /  11 |11 /  11 |11 |  \\__|11111111 |11 /  11 | 1111111 | 11 |    11 |11 /  11 |11 |  11 |      \n                              11 |  11 |11 |  11 |11 |  11 |11 |      11   ____|11 |  11 |11  __11 | 11 |11\\ 11 |11 |  11 |11 |  11 |      \n                              11 |  11 |\\1111111 |\\1111111 |11 |      \\1111111\\ \\1111111 |\\1111111 | \\1111  |11 |\\111111  |11 |  11 |      \n                              \\__|  \\__| \\____11 | \\____11 |\\__|       \\_______| \\____11 | \\_______|  \\____/ \\__| \\______/ \\__|  \\__|      \n                                        11\\   11 |11\\   11 |                    11\\   11 |                                                 \n                                        \\111111  |\\111111  |                    \\111111  |                                                 \n                                         \\______/  \\______/                      \\______/                                                  \n                                                1111111\\                        11\\                                                        \n                                                11  __11\\                       11 |                                                       \n                                                11 |  11 | 111111\\  11\\   11\\ 111111\\    111111\\   111111\\                                 \n                                                1111111  |11  __11\\ 11 |  11 |\\_11  _|  11  __11\\ 11  __11\\                                \n                                                11  __11< 11 /  11 |11 |  11 |  11 |    11111111 |11 |  \\__|                               \n                                                11 |  11 |11 |  11 |11 |  11 |  11 |11\\ 11   ____|11 |                                     \n                                                11 |  11 |\\111111  |\\111111  |  \\1111  |\\1111111\\ 11 |                                     \n                                                \\__|  \\__| \\______/  \\______/    \\____/  \\_______|\\__|                                     \n*/\n\n// File @openzeppelin/contracts/utils/Context.sol@v3.4.1\n\n// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n\n// File @openzeppelin/contracts/access/Ownable.sol@v3.4.1\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v3.4.1\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n// File @openzeppelin/contracts/math/SafeMath.sol@v3.4.1\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/Address.sol@v3.4.1\n\n\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/SafeERC20.sol@v3.4.1\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n\n// File contracts/helpers/UniERC20.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\nlibrary UniERC20 {\n    using SafeMath for uint256;\n\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n    IERC20 private constant _ZERO_ADDRESS = IERC20(0);\n\n    function isETH(IERC20 token) internal pure returns (bool) {\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\n    }\n\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\n        if (isETH(token)) {\n            return account.balance;\n        } else {\n            return token.balanceOf(account);\n        }\n    }\n\n    function uniTransfer(IERC20 token, address payable to, uint256 amount) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                to.transfer(amount);\n            } else {\n                _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, amount));\n            }\n        }\n    }\n\n    function uniApprove(IERC20 token, address to, uint256 amount) internal {\n        require(!isETH(token), \"Approve called on ETH\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(abi.encodeWithSelector(token.approve.selector, to, amount));\n\n        if (!success || (returndata.length > 0 && !abi.decode(returndata, (bool)))) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, to, 0));\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, to, amount));\n        }\n    }\n\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            require(abi.decode(returndata, (bool)), \"ERC20 operation did not succeed\");\n        }\n    }\n}\n\n\n// File contracts/interfaces/IChi.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\ninterface IChi is IERC20 {\n    function mint(uint256 value) external;\n    function free(uint256 value) external returns (uint256 freed);\n    function freeFromUpTo(address from, uint256 value) external returns (uint256 freed);\n}\n\n\n// File contracts/interfaces/IGasDiscountExtension.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\ninterface IGasDiscountExtension {\n    function calculateGas(uint256 gasUsed, uint256 flags, uint256 calldataLength) external view returns (IChi, uint256);\n}\n\n\n// File contracts/interfaces/IAggregationExecutor.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\ninterface IAggregationExecutor is IGasDiscountExtension {\n    function callBytes(bytes calldata data) external payable;  // 0xd9c45357\n}\n\n\n// File contracts/helpers/RevertReasonParser.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\nlibrary RevertReasonParser {\n    function parse(bytes memory data, string memory prefix) internal pure returns (string memory) {\n        // https://solidity.readthedocs.io/en/latest/control-structures.html#revert\n        // We assume that revert reason is abi-encoded as Error(string)\n\n        // 68 = 4-byte selector 0x08c379a0 + 32 bytes offset + 32 bytes length\n        if (data.length >= 68 && data[0] == \"\\x08\" && data[1] == \"\\xc3\" && data[2] == \"\\x79\" && data[3] == \"\\xa0\") {\n            string memory reason;\n            // solhint-disable no-inline-assembly\n            assembly {\n                // 68 = 32 bytes data length + 4-byte selector + 32 bytes offset\n                reason := add(data, 68)\n            }\n            /*\n                revert reason is padded up to 32 bytes with ABI encoder: Error(string)\n                also sometimes there is extra 32 bytes of zeros padded in the end:\n                https://github.com/ethereum/solidity/issues/10170\n                because of that we can't check for equality and instead check\n                that string length + extra 68 bytes is less than overall data length\n            */\n            require(data.length >= 68 + bytes(reason).length, \"Invalid revert reason\");\n            return string(abi.encodePacked(prefix, \"Error(\", reason, \")\"));\n        }\n        // 36 = 4-byte selector 0x4e487b71 + 32 bytes integer\n        else if (data.length == 36 && data[0] == \"\\x4e\" && data[1] == \"\\x48\" && data[2] == \"\\x7b\" && data[3] == \"\\x71\") {\n            uint256 code;\n            // solhint-disable no-inline-assembly\n            assembly {\n                // 36 = 32 bytes data length + 4-byte selector\n                code := mload(add(data, 36))\n            }\n            return string(abi.encodePacked(prefix, \"Panic(\", _toHex(code), \")\"));\n        }\n\n        return string(abi.encodePacked(prefix, \"Unknown(\", _toHex(data), \")\"));\n    }\n\n    function _toHex(uint256 value) private pure returns(string memory) {\n        return _toHex(abi.encodePacked(value));\n    }\n\n    function _toHex(bytes memory data) private pure returns(string memory) {\n        bytes16 alphabet = 0x30313233343536373839616263646566;\n        bytes memory str = new bytes(2 + data.length * 2);\n        str[0] = \"0\";\n        str[1] = \"x\";\n        for (uint256 i = 0; i < data.length; i++) {\n            str[2 * i + 2] = alphabet[uint8(data[i] >> 4)];\n            str[2 * i + 3] = alphabet[uint8(data[i] & 0x0f)];\n        }\n        return string(str);\n    }\n}\n\n\n// File contracts/interfaces/IERC20Permit.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\ninterface IERC20Permit {\n    function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n\n\n// File contracts/helpers/Permitable.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n\ncontract Permitable {\n    event Error(\n        string reason\n    );\n\n    function _permit(IERC20 token, uint256 amount, bytes calldata permit) internal {\n        if (permit.length == 32 * 7) {\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success, bytes memory result) = address(token).call(abi.encodePacked(IERC20Permit.permit.selector, permit));\n            if (!success) {\n                string memory reason = RevertReasonParser.parse(result, \"Permit call failed: \");\n                if (token.allowance(msg.sender, address(this)) < amount) {\n                    revert(reason);\n                } else {\n                    emit Error(reason);\n                }\n            }\n        }\n    }\n}\n\n\n// File contracts/UnoswapRouter.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\ncontract UnoswapRouter is Permitable {\n    uint256 private constant _TRANSFER_FROM_CALL_SELECTOR_32 = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _WETH_DEPOSIT_CALL_SELECTOR_32 = 0xd0e30db000000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _WETH_WITHDRAW_CALL_SELECTOR_32 = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _ERC20_TRANSFER_CALL_SELECTOR_32 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _ADDRESS_MASK =   0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff;\n    uint256 private constant _REVERSE_MASK =   0x8000000000000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _WETH_MASK =      0x4000000000000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _NUMERATOR_MASK = 0x0000000000000000ffffffff0000000000000000000000000000000000000000;\n    uint256 private constant _WETH = 0x000000000000000000000000C02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    uint256 private constant _UNISWAP_PAIR_RESERVES_CALL_SELECTOR_32 = 0x0902f1ac00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _UNISWAP_PAIR_SWAP_CALL_SELECTOR_32 = 0x022c0d9f00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _DENOMINATOR = 1000000000;\n    uint256 private constant _NUMERATOR_OFFSET = 160;\n\n    receive() external payable {\n        // solhint-disable-next-line avoid-tx-origin\n        require(msg.sender != tx.origin, \"ETH deposit rejected\");\n    }\n\n    function unoswapWithPermit(\n        IERC20 srcToken,\n        uint256 amount,\n        uint256 minReturn,\n        bytes32[] calldata pools,\n        bytes calldata permit\n    ) external payable returns(uint256 returnAmount) {\n        _permit(srcToken, amount, permit);\n        return unoswap(srcToken, amount, minReturn, pools);\n    }\n\n    function unoswap(\n        IERC20 srcToken,\n        uint256 amount,\n        uint256 minReturn,\n        bytes32[] calldata /* pools */\n    ) public payable returns(uint256 returnAmount) {\n        assembly {  // solhint-disable-line no-inline-assembly\n            function reRevert() {\n                returndatacopy(0, 0, returndatasize())\n                revert(0, returndatasize())\n            }\n\n            function revertWithReason(m, len) {\n                mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                mstore(0x20, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                mstore(0x40, m)\n                revert(0, len)\n            }\n\n            function swap(emptyPtr, swapAmount, pair, reversed, numerator, dst) -> ret {\n                mstore(emptyPtr, _UNISWAP_PAIR_RESERVES_CALL_SELECTOR_32)\n                if iszero(staticcall(gas(), pair, emptyPtr, 0x4, emptyPtr, 0x40)) {\n                    reRevert()\n                }\n\n                let reserve0 := mload(emptyPtr)\n                let reserve1 := mload(add(emptyPtr, 0x20))\n                if reversed {\n                    let tmp := reserve0\n                    reserve0 := reserve1\n                    reserve1 := tmp\n                }\n                ret := mul(swapAmount, numerator)\n                ret := div(mul(ret, reserve1), add(ret, mul(reserve0, _DENOMINATOR)))\n\n                mstore(emptyPtr, _UNISWAP_PAIR_SWAP_CALL_SELECTOR_32)\n                switch reversed\n                case 0 {\n                    mstore(add(emptyPtr, 0x04), 0)\n                    mstore(add(emptyPtr, 0x24), ret)\n                }\n                default {\n                    mstore(add(emptyPtr, 0x04), ret)\n                    mstore(add(emptyPtr, 0x24), 0)\n                }\n                mstore(add(emptyPtr, 0x44), dst)\n                mstore(add(emptyPtr, 0x64), 0x80)\n                mstore(add(emptyPtr, 0x84), 0)\n                if iszero(call(gas(), pair, 0, emptyPtr, 0xa4, 0, 0)) {\n                    reRevert()\n                }\n            }\n\n            let emptyPtr := mload(0x40)\n            mstore(0x40, add(emptyPtr, 0xc0))\n\n            let poolsOffset := add(calldataload(0x64), 0x4)\n            let poolsEndOffset := calldataload(poolsOffset)\n            poolsOffset := add(poolsOffset, 0x20)\n            poolsEndOffset := add(poolsOffset, mul(0x20, poolsEndOffset))\n            let rawPair := calldataload(poolsOffset)\n            switch srcToken\n            case 0 {\n                if iszero(eq(amount, callvalue())) {\n                    revertWithReason(0x00000011696e76616c6964206d73672e76616c75650000000000000000000000, 0x55)  // \"invalid msg.value\"\n                }\n\n                mstore(emptyPtr, _WETH_DEPOSIT_CALL_SELECTOR_32)\n                if iszero(call(gas(), _WETH, amount, emptyPtr, 0x4, 0, 0)) {\n                    reRevert()\n                }\n\n                mstore(emptyPtr, _ERC20_TRANSFER_CALL_SELECTOR_32)\n                mstore(add(emptyPtr, 0x4), and(rawPair, _ADDRESS_MASK))\n                mstore(add(emptyPtr, 0x24), amount)\n                if iszero(call(gas(), _WETH, 0, emptyPtr, 0x44, 0, 0)) {\n                    reRevert()\n                }\n            }\n            default {\n                if callvalue() {\n                    revertWithReason(0x00000011696e76616c6964206d73672e76616c75650000000000000000000000, 0x55)  // \"invalid msg.value\"\n                }\n\n                mstore(emptyPtr, _TRANSFER_FROM_CALL_SELECTOR_32)\n                mstore(add(emptyPtr, 0x4), caller())\n                mstore(add(emptyPtr, 0x24), and(rawPair, _ADDRESS_MASK))\n                mstore(add(emptyPtr, 0x44), amount)\n                if iszero(call(gas(), srcToken, 0, emptyPtr, 0x64, 0, 0)) {\n                    reRevert()\n                }\n            }\n\n            returnAmount := amount\n\n            for {let i := add(poolsOffset, 0x20)} lt(i, poolsEndOffset) {i := add(i, 0x20)} {\n                let nextRawPair := calldataload(i)\n\n                returnAmount := swap(\n                    emptyPtr,\n                    returnAmount,\n                    and(rawPair, _ADDRESS_MASK),\n                    and(rawPair, _REVERSE_MASK),\n                    shr(_NUMERATOR_OFFSET, and(rawPair, _NUMERATOR_MASK)),\n                    and(nextRawPair, _ADDRESS_MASK)\n                )\n\n                rawPair := nextRawPair\n            }\n\n            switch and(rawPair, _WETH_MASK)\n            case 0 {\n                returnAmount := swap(\n                    emptyPtr,\n                    returnAmount,\n                    and(rawPair, _ADDRESS_MASK),\n                    and(rawPair, _REVERSE_MASK),\n                    shr(_NUMERATOR_OFFSET, and(rawPair, _NUMERATOR_MASK)),\n                    caller()\n                )\n            }\n            default {\n                returnAmount := swap(\n                    emptyPtr,\n                    returnAmount,\n                    and(rawPair, _ADDRESS_MASK),\n                    and(rawPair, _REVERSE_MASK),\n                    shr(_NUMERATOR_OFFSET, and(rawPair, _NUMERATOR_MASK)),\n                    address()\n                )\n\n                mstore(emptyPtr, _WETH_WITHDRAW_CALL_SELECTOR_32)\n                mstore(add(emptyPtr, 0x04), returnAmount)\n                if iszero(call(gas(), _WETH, 0, emptyPtr, 0x24, 0, 0)) {\n                    reRevert()\n                }\n\n                if iszero(call(gas(), caller(), returnAmount, 0, 0, 0, 0)) {\n                    reRevert()\n                }\n            }\n\n            if lt(returnAmount, minReturn) {\n                revertWithReason(0x000000164d696e2072657475726e206e6f742072656163686564000000000000, 0x5a)  // \"Min return not reached\"\n            }\n        }\n    }\n}\n\n\n// File contracts/AggregationRouterV3.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\npragma experimental ABIEncoderV2;\n\n\n\n\n\n\ncontract AggregationRouterV3 is Ownable, UnoswapRouter {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    using UniERC20 for IERC20;\n\n    uint256 private constant _PARTIAL_FILL = 0x01;\n    uint256 private constant _REQUIRES_EXTRA_ETH = 0x02;\n    uint256 private constant _SHOULD_CLAIM = 0x04;\n    uint256 private constant _BURN_FROM_MSG_SENDER = 0x08;\n    uint256 private constant _BURN_FROM_TX_ORIGIN = 0x10;\n\n    struct SwapDescription {\n        IERC20 srcToken;\n        IERC20 dstToken;\n        address srcReceiver;\n        address dstReceiver;\n        uint256 amount;\n        uint256 minReturnAmount;\n        uint256 flags;\n        bytes permit;\n    }\n\n    event Swapped(\n        address sender,\n        IERC20 srcToken,\n        IERC20 dstToken,\n        address dstReceiver,\n        uint256 spentAmount,\n        uint256 returnAmount\n    );\n\n    function discountedSwap(\n        IAggregationExecutor caller,\n        SwapDescription calldata desc,\n        bytes calldata data\n    )\n        external\n        payable\n        returns (uint256 returnAmount, uint256 gasLeft, uint256 chiSpent)\n    {\n        uint256 initialGas = gasleft();\n\n        address chiSource = address(0);\n        if (desc.flags & _BURN_FROM_MSG_SENDER != 0) {\n            chiSource = msg.sender;\n        } else if (desc.flags & _BURN_FROM_TX_ORIGIN != 0) {\n            chiSource = tx.origin; // solhint-disable-line avoid-tx-origin\n        } else {\n            revert(\"Incorrect CHI burn flags\");\n        }\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = address(this).delegatecall(abi.encodeWithSelector(this.swap.selector, caller, desc, data));\n        if (success) {\n            (returnAmount,) = abi.decode(returnData, (uint256, uint256));\n        } else {\n            if (msg.value > 0) {\n                msg.sender.transfer(msg.value);\n            }\n            emit Error(RevertReasonParser.parse(returnData, \"Swap failed: \"));\n        }\n\n        (IChi chi, uint256 amount) = caller.calculateGas(initialGas.sub(gasleft()), desc.flags, msg.data.length);\n        if (amount > 0) {\n            chiSpent = chi.freeFromUpTo(chiSource, amount);\n        }\n        gasLeft = gasleft();\n    }\n\n    function swap(\n        IAggregationExecutor caller,\n        SwapDescription calldata desc,\n        bytes calldata data\n    )\n        external\n        payable\n        returns (uint256 returnAmount, uint256 gasLeft)\n    {\n        require(desc.minReturnAmount > 0, \"Min return should not be 0\");\n        require(data.length > 0, \"data should be not zero\");\n\n        uint256 flags = desc.flags;\n        IERC20 srcToken = desc.srcToken;\n        IERC20 dstToken = desc.dstToken;\n\n        if (flags & _REQUIRES_EXTRA_ETH != 0) {\n            require(msg.value > (srcToken.isETH() ? desc.amount : 0), \"Invalid msg.value\");\n        } else {\n            require(msg.value == (srcToken.isETH() ? desc.amount : 0), \"Invalid msg.value\");\n        }\n\n        if (flags & _SHOULD_CLAIM != 0) {\n            require(!srcToken.isETH(), \"Claim token is ETH\");\n            _permit(srcToken, desc.amount, desc.permit);\n            srcToken.safeTransferFrom(msg.sender, desc.srcReceiver, desc.amount);\n        }\n\n        address dstReceiver = (desc.dstReceiver == address(0)) ? msg.sender : desc.dstReceiver;\n        uint256 initialSrcBalance = (flags & _PARTIAL_FILL != 0) ? srcToken.uniBalanceOf(msg.sender) : 0;\n        uint256 initialDstBalance = dstToken.uniBalanceOf(dstReceiver);\n\n        {\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success, bytes memory result) = address(caller).call{value: msg.value}(abi.encodePacked(caller.callBytes.selector, data));\n            if (!success) {\n                revert(RevertReasonParser.parse(result, \"callBytes failed: \"));\n            }\n        }\n\n        uint256 spentAmount = desc.amount;\n        returnAmount = dstToken.uniBalanceOf(dstReceiver).sub(initialDstBalance);\n\n        if (flags & _PARTIAL_FILL != 0) {\n            spentAmount = initialSrcBalance.add(desc.amount).sub(srcToken.uniBalanceOf(msg.sender));\n            require(returnAmount.mul(desc.amount) >= desc.minReturnAmount.mul(spentAmount), \"Return amount is not enough\");\n        } else {\n            require(returnAmount >= desc.minReturnAmount, \"Return amount is not enough\");\n        }\n\n        emit Swapped(\n            msg.sender,\n            srcToken,\n            dstToken,\n            dstReceiver,\n            spentAmount,\n            returnAmount\n        );\n\n        gasLeft = gasleft();\n    }\n\n    function rescueFunds(IERC20 token, uint256 amount) external onlyOwner {\n        token.uniTransfer(msg.sender, amount);\n    }\n\n    function destroy() external onlyOwner {\n        selfdestruct(msg.sender);\n    }\n}",
  "sourceMap": "49519:4800:0:-:0;;;;;;;;;;;;-1:-1:-1;12178:17:0;12198:12;:10;:12::i;:::-;12220:6;:18;;-1:-1:-1;;;;;;12220:18:0;-1:-1:-1;;;;;12220:18:0;;;;;;;12253:43;;12220:18;;-1:-1:-1;12220:18:0;12253:43;;12220:6;;12253:43;12144:159;49519:4800;;10952:104;11039:10;10952:104;:::o;49519:4800::-;;;;;;;",
  "sourcePath": "contracts/AggregationRouterV3.sol",
  "type": "contract"
}